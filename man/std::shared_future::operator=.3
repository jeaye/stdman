.TH std::shared_future::operator= 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::shared_future::operator= \- std::shared_future::operator=

.SH Synopsis
   shared_future& operator=( const shared_future& other ); \fB(1)\fP \fI(since C++11)\fP
   shared_future& operator=( shared_future&& other );      \fB(2)\fP \fI(since C++11)\fP

   Assigns the contents of another shared_future.

   1) Releases any shared state and assigns the contents of other to *this. After the
   assignment, this->valid() == other.valid().
   2) Releases any shared state and move-assigns the contents of other to *this. After
   the assignment, other.valid() == false and this->valid() will yield the same value
   as other.valid() before the assignment.

.SH Parameters

   other - a std::shared_future that will transfer state to *this

.SH Return value

   *this

.SH Exceptions

   1) \fI(none)\fP                 \fI(until C++17)\fP
   1)
   noexcept specification:   \fI(since C++17)\fP
   noexcept
     

   2)
   noexcept specification:  
   noexcept
     
.SH Category:

     * unconditionally noexcept

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
