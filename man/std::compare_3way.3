.TH std::compare_3way 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::compare_3way \- std::compare_3way

.SH Synopsis
   Defined in header <algorithm>
   template< class T, class U >                            (since C++20)
   constexpr auto compare_3way( const T& a, const U& b );

   Compares two values using three-way comparison and produces a result of the
   strongest applicable comparison category type.

.SH In detail:

     * If the expression a <=> b is well-formed, returns its result
     * Otherwise, if the expressions a == b and a < b are both well-formed and
       convertible to bool,

              * if a == b equals true, returns std::strong_ordering::equal
              * otherwise, if a < b equals true, returns std::strong_ordering::less
              * otherwise, returns std::strong_ordering::greater

     * Otherwise, if the expression a == b is well-formed and convertible to bool (but
       a < b is not),

              * if a == b equals true, returns std::strong_equality::equal
              * otherwise, returns std::strong_equality::nonequal

     * Otherwise (if neither a <=> b nor a == b are well-formed), the function is
       defined as deleted.

.SH Parameters

   a, b - the values to compare

.SH Return value

   As defined above.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   lexicographical_compare_3way compares two ranges using three-way comparison
   (C++20)                      \fI(function template)\fP 
   strong_equality              the result type of 3-way comparison that supports only
   (C++20)                      equality/inequality and is substitutable
                                \fI(class)\fP 
   weak_equality                the result type of 3-way comparison that supports only
   (C++20)                      equality/inequality and is not substitutable
                                \fI(class)\fP 
   strong_ordering              the result type of 3-way comparison that supports all 6
   (C++20)                      operators and is substitutable
                                \fI(class)\fP 
   weak_ordering                the result type of 3-way comparison that supports all 6
   (C++20)                      operators and is not substitutable
                                \fI(class)\fP 
                                the result type of 3-way comparison that supports all 6
   partial_ordering             operators, is not substitutable, and allows
   (C++20)                      incomparable values
                                \fI(class)\fP 

.SH Category:

     * Todo no example
