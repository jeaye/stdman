.TH std::vector::clear 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::vector::clear \- std::vector::clear

.SH Synopsis
   void clear();           \fI(until C++11)\fP
   void clear() noexcept;  \fI(since C++11)\fP

   Removes all elements from the container.

   Invalidates any references, pointers, or iterators referring to contained elements.
   Any past-the-end iterators are also invalidated.  

   Leaves the capacity() of the vector unchanged (note: the standard's restriction on
   the changes to capacity is in the specification of vector::reserve, see [1])

.SH Parameters

   \fI(none)\fP

.SH Return value

   \fI(none)\fP

.SH Complexity

   Linear in the size of the container, i.e., the number of elements.

  Defect reports

   The following behavior-changing defect reports were applied retroactively to
   previously published C++ standards.

      DR    Applied to          Behavior as published              Correct behavior
   LWG 2231 C++11      complexity guarantee was mistakenly     complexity reaffirmed as
                       omitted in C++11                        linear

.SH See also

   erase erases elements
         \fI(public member function)\fP 
