.TH std::scoped_allocator_adaptor::destroy 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::scoped_allocator_adaptor::destroy \- std::scoped_allocator_adaptor::destroy

.SH Synopsis
   Defined in header <scoped_allocator>
   template< class T >                   \fI(since C++11)\fP
   void destroy( T* p );

   Uses the outer allocator to call the destructor of the object pointed to by p, by
   calling

   std::allocator_traits<OUTERMOST>::destroy(OUTERMOST(*this), p)

   where OUTERMOST is the type that would be returned by calling
   this->outer_allocator(), and then calling the outer_allocator() member function
   recursively on the result of this call until reaching the type that has no such
   member function.

.SH Parameters

   p - pointer to the object that is going to be destroyed

.SH Return value

   \fI(none)\fP

.SH See also

   destroy               destructs an object stored in the allocated storage
   \fB[static]\fP              \fI(function template)\fP 
   destroy               destructs an object in allocated storage
   (deprecated in C++17) \fI(public member function of std::allocator)\fP 
