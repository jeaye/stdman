.TH std::bitset 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::bitset \- std::bitset

.SH Synopsis
   Defined in header <bitset>
   template< std::size_t N >
   class bitset;

   The class template bitset represents a fixed-size sequence of N bits. Bitsets can be
   manipulated by standard logic operators and converted to and from strings and
   integers.

   bitset meets the requirements of CopyConstructible and CopyAssignable.

.SH Template parameters

   N - the number of bits to allocate storage for

.SH Member types

   reference proxy class representing a reference to a bit
             \fI(class)\fP

.SH Member functions

   constructor   constructs the bitset
                 \fI(public member function)\fP 
   operator==    compares the contents
   operator!=    \fI(public member function)\fP 
.SH Element access
   operator[]    accesses specific bit
                 \fI(public member function)\fP 
   test          accesses specific bit
                 \fI(public member function)\fP 
   all
   any
   none          checks if all, any or none of the bits are set to true
   \fI(C++11)\fP       \fI(public member function)\fP 
    
    
   count         returns the number of bits set to true
                 \fI(public member function)\fP 
.SH Capacity
   size          returns the size number of bits that the bitset can hold
                 \fI(public member function)\fP 
.SH Modifiers
   operator&=
   operator|=    performs binary AND, OR, XOR and NOT
   operator^=    \fI(public member function)\fP 
   operator~
   operator<<=
   operator>>=   performs binary shift left and shift right
   operator<<    \fI(public member function)\fP 
   operator>>
   set           sets bits to true or given value
                 \fI(public member function)\fP 
   reset         sets bits to false
                 \fI(public member function)\fP 
   flip          toggles the values of bits
                 \fI(public member function)\fP 
.SH Conversions
   to_string     returns a string representation of the data
                 \fI(public member function)\fP 
   to_ulong      returns an unsigned long integer representation of the data
                 \fI(public member function)\fP 
   to_ullong     returns an unsigned long long integer representation of the data
   \fI(C++11)\fP       \fI(public member function)\fP 

.SH Non-member functions

   operator&  performs binary logic operations on bitsets
   operator|  \fI(function template)\fP 
   operator^
   operator<< performs stream input and output of bitsets
   operator>> \fI(function template)\fP 

.SH Helper classes

   std::hash<std::bitset> hash support for std::bitset
   \fI(C++11)\fP                \fI(class template specialization)\fP 

.SH Notes

   If the size of the bitset is not known at compile time, std::vector<bool> or
   boost::dynamic_bitset may be used.
