.TH std::back_inserter 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::back_inserter \- std::back_inserter

.SH Synopsis
   Defined in header <iterator>
   template< class Container >
   std::back_insert_iterator<Container> back_inserter( Container& c );

   back_inserter is a convenience function template that constructs a
   std::back_insert_iterator for the container c with the type deduced from the type of
   the argument.

.SH Parameters

   c - container that supports a push_back operation

.SH Return value

   A std::back_insert_iterator which can be used to add elements to the end of the
   container c

.SH Possible implementation

   template< class Container >
   std::back_insert_iterator<Container> back_inserter( Container& c )
   {
       return std::back_insert_iterator<Container>(c);
   }

.SH Example

   
// Run this code

 #include <iostream>
 #include <vector>
 #include <algorithm>
 #include <iterator>
  
 int main()
 {
     std::vector<int> v{1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
     std::fill_n(std::back_inserter(v), 3, -1);
     for (int n : v)
         std::cout << n << ' ';
 }

.SH Output:

 1 2 3 4 5 6 7 8 9 10 -1 -1 -1

.SH See also

   back_insert_iterator iterator adaptor for insertion at the end of a container
                        \fI(class template)\fP 
                        creates a std::front_insert_iterator of type inferred from the
   front_inserter       argument
                        \fI(function template)\fP 
                        creates a std::insert_iterator of type inferred from the
   inserter             argument
                        \fI(function template)\fP 
