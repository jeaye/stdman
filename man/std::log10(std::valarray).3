.TH std::log10(std::valarray) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::log10(std::valarray) \- std::log10(std::valarray)

.SH Synopsis
   Defined in header <valarray>
   template< class T >
   valarray<T> log10( const valarray<T>& va );

   For each element in va computes common (base 10) logarithm of the value of the
   element.

.SH Parameters

   va - value array to apply the operation to

.SH Return value

   Value array containing common logarithms of the values in va.

.SH Notes

   Unqualified function (log10) is used to perform the computation. If such function is
   not available, std::log10 is used due to argument dependent lookup.

   The function can be implemented with the return type different from std::valarray.
   In this case, the replacement type has the following properties:

              * All const member functions of std::valarray are provided.
              * std::valarray, std::slice_array, std::gslice_array, std::mask_array and
                std::indirect_array can be constructed from the replacement type.
              * All functions accepting an argument of type const std::valarray&
                except begin() and end()
                \fI(since C++11)\fP should also accept the replacement type.
              * All functions accepting two arguments of type const std::valarray&
                should accept every combination of const std::valarray& and the
                replacement type.
              * The return type does not add more than two levels of template nesting
                over the most deeply-nested argument type.

.SH Possible implementation

   template< class T >
   valarray<T> log10( const valarray<T>& va )
   {
       valarray<T> other = va;
       for (T &i : other) {
           i = log10(i);
       }
       return other;
   }

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   log(std::valarray)  applies the function std::log to each element of valarray
                       \fI(function template)\fP 
   log10               computes common (base 10) logarithm (log[10](x))
                       \fI(function)\fP 
                       complex common logarithm with the branch cuts along the negative
   log10(std::complex) real axis
                       \fI(function template)\fP 

.SH Category:

     * Todo no example

   Hidden category:

     * Pages with unreviewed LWG DR marker
