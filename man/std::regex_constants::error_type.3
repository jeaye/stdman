.TH std::regex_constants::error_type 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::regex_constants::error_type \- std::regex_constants::error_type

.SH Synopsis
   Defined in header <regex>
   typedef /*implementation defined*/ error_type;                   \fI(since C++11)\fP
   constexpr error_type error_collate = /*unspecified*/;

   constexpr error_type error_ctype = /*unspecified*/;
   constexpr error_type error_escape = /*unspecified*/;
   constexpr error_type error_backref = /*unspecified*/;
   constexpr error_type error_brack = /*unspecified*/;
   constexpr error_type error_paren = /*unspecified*/;              \fI(since C++11)\fP
   constexpr error_type error_brace = /*unspecified*/;              \fI(until C++17)\fP
   constexpr error_type error_badbrace = /*unspecified*/;
   constexpr error_type error_range = /*unspecified*/;
   constexpr error_type error_space = /*unspecified*/;
   constexpr error_type error_badrepeat = /*unspecified*/;
   constexpr error_type error_complexity = /*unspecified*/;

   constexpr error_type error_stack = /*unspecified*/;
   inline constexpr error_type error_collate = /*unspecified*/;

   inline constexpr error_type error_ctype = /*unspecified*/;
   inline constexpr error_type error_escape = /*unspecified*/;
   inline constexpr error_type error_backref = /*unspecified*/;
   inline constexpr error_type error_brack = /*unspecified*/;
   inline constexpr error_type error_paren = /*unspecified*/;
   inline constexpr error_type error_brace = /*unspecified*/;       \fI(since C++17)\fP
   inline constexpr error_type error_badbrace = /*unspecified*/;
   inline constexpr error_type error_range = /*unspecified*/;
   inline constexpr error_type error_space = /*unspecified*/;
   inline constexpr error_type error_badrepeat = /*unspecified*/;
   inline constexpr error_type error_complexity = /*unspecified*/;

   inline constexpr error_type error_stack = /*unspecified*/;

   The error_type is a type that describes errors that may occur during regular
   expression parsing.

.SH Constants

   Constant         Explanation
   error_collate    the expression contains an invalid collating element name
   error_ctype      the expression contains an invalid character class name
   error_escape     the expression contains an invalid escaped character or a trailing
                    escape
   error_backref    the expression contains an invalid back reference
   error_brack      the expression contains mismatched square brackets ('[' and ']')
   error_paren      the expression contains mismatched parentheses ('(' and ')')
   error_brace      the expression contains mismatched curly braces ('{' and '}')
   error_badbrace   the expression contains an invalid range in a {} expression
   error_range      the expression contains an invalid character range (e.g. [b-a])
   error_space      there was not enough memory to convert the expression into a finite
                    state machine
   error_badrepeat  one of *?+{ was not preceded by a valid regular expression
   error_complexity the complexity of an attempted match exceeded a predefined level
   error_stack      there was not enough memory to perform a match

.SH Notes

   In C++11, these constants were specified with redundant keyword static, which was
   removed by C++14 via LWG issue 2053

.SH See also

   regex_error reports errors generated by the regular expressions library
   \fI(C++11)\fP     \fI(class)\fP 
