.TH std::end(std::initializer_list) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::end(std::initializer_list) \- std::end(std::initializer_list)

.SH Synopsis
   template< class E >                                         \fI(since C++11)\fP
   const E* end( initializer_list<E> il ) noexcept;
   template< class E >                                         \fI(since C++11)\fP
   constexpr const E* end( initializer_list<E> il ) noexcept;  \fI(until C++14)\fP

   The overload of std::end for initializer_list returns a pointer to one past the last
   element of il.

.SH Parameters

   il - an initializer_list

.SH Return value

   il.end()

.SH Example

   
// Run this code

 #include <iostream>
  
 int main()
 {
     // range-based for uses std::begin and std::end to iterate
     // over a given range; in this case, it's an initializer list
     for (int i : {3, 1, 4, 1}) {
         std::cout << i << '\\n';
     }
 }

.SH Output:

 3
 1
 4
 1

.SH See also

   end returns a pointer to one past the last element
       \fI(public member function)\fP 
