.TH std::experimental::flex_barrier::arrive_and_drop 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::flex_barrier::arrive_and_drop \- std::experimental::flex_barrier::arrive_and_drop

.SH Synopsis
   void arrive_and_drop();  (concurrency TS)

   Arrive at the flex_barrier's synchronization point and remove the current thread
   from the set of participating threads. It is unspecified whether this function
   blocks until the completion phase has ended. If the function blocks, the calling
   thread may be chosen to execute the completion phase.

   The behavior is undefined if the calling thread is not in the set of participating
   threads of this flex_barrier.

   Calls to arrive_and_drop synchronizes with the start of the completion phase of the
   flex_barrier. If the call blocks, then the completion of the completion phase
   synchronizes with the return from the call.

   Calls to arrive_and_drop and arrive_and_wait never introduce data races with
   themselves or each other.

.SH Exceptions

   Throws nothing.

.SH Notes

   The completion phase will be executed even if every participating thread calls
   arrive_and_drop.

   After a thread calls arrive_and_drop on a flex_barrier, it cannot call any member
   function on that barrier except for the destructor, even if the function object
   invoked by the completion phase returns a positive value.

.SH See also

   arrive_and_wait arrive at the synchronization point and block
                   \fI(public member function)\fP 
