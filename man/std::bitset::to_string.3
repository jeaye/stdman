.TH std::bitset::to_string 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::bitset::to_string \- std::bitset::to_string

.SH Synopsis
   template<

       class CharT,
       class Traits,                                                      \fI(until C++11)\fP
       class Alloc

   > std::basic_string<CharT,Traits,Allocator> to_string() const;
   template<

       class CharT = char,
       class Traits = std::char_traits<CharT>,                            \fI(since C++11)\fP
       class Allocator = std::allocator<CharT>
   > std::basic_string<CharT,Traits,Allocator>

       to_string(CharT zero = CharT('0'), CharT one = CharT('1')) const;

   Converts the contents of the bitset to a string. Uses zero to represent bits with
   value of false and one to represent bits with value of true.

   The resulting string contains N characters with the first character corresponds to
   the last (N-1th) bit and the last character corresponding to the first bit.

.SH Parameters

   zero - character to use to represent false
   one  - character to use to represent true

.SH Return value

   the converted string

.SH Exceptions

   May throw std::bad_alloc from the the std::string constructor.

.SH Example

   
// Run this code

 #include <iostream>
 #include <bitset>
 int main()
 {
     std::bitset<8> b(42);
     std::cout << b.to_string() << '\\n'
               << b.to_string('*') << '\\n'
               << b.to_string('O', 'X') << '\\n';
 }

.SH Output:

 00101010
 **1*1*1*
 OOXOXOXO

.SH See also

   to_ulong  returns an unsigned long integer representation of the data
             \fI(public member function)\fP 
   to_ullong returns an unsigned long long integer representation of the data
   \fI(C++11)\fP   \fI(public member function)\fP 
