.TH std::experimental::negation 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::negation \- std::experimental::negation

.SH Synopsis
   Defined in header <experimental/type_traits>
   template<class B>                            \fB(1)\fP (library fundamentals TS v2)
   struct negation;

   Forms the logical negation of the type trait B.

   The type negation<B> is a UnaryTypeTrait with a BaseCharacteristic of
   std::integral_constant<bool, !bool(B::value)>.

.SH Template parameters

   B - any type such that the expression bool(B::value) is a valid constant expression

   Helper variable template

   template<class B>                                (library fundamentals TS v2)
   constexpr bool negation_v = negation<B>::value;

   

Inherited from std::integral_constant

.SH Member constants

   value    true if B has a member ::value such that !bool(B::value) is true , false
   \fB[static]\fP otherwise
            \fI(public static member constant)\fP

.SH Member functions

   operator bool converts the object to bool, returns value
                 \fI(public member function)\fP
   operator()    returns value
   \fI(C++14)\fP       \fI(public member function)\fP

.SH Member types

   Type       Definition
   value_type bool
   type       std::integral_constant<bool, value>

.SH Possible implementation

   template<class B>
   struct negation : std::integral_constant<bool, !bool(B::value)> { };

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   negation logical NOT metafunction
   \fI(C++17)\fP  \fI(class template)\fP 

.SH Category:

     * Todo no example
