.TH std::basic_iostream::basic_iostream 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_iostream::basic_iostream \- std::basic_iostream::basic_iostream

.SH Synopsis
   explicit basic_iostream( std::basic_streambuf<CharT,Traits>* sb ); \fB(1)\fP
   basic_iostream( const basic_iostream& other ) = delete;            \fB(2)\fP \fI(since C++11)\fP
   protected:                                                         \fB(3)\fP \fI(since C++11)\fP
   basic_iostream( basic_iostream&& other );

   Constructs new stream object.

   1) Initializes with streambuf sb. The base classes are initialized as
   basic_istream<CharT,Traits>(sb) and basic_ostream<CharT,Traits>(sb). After the call
   rdbuf() == sb and gcount() == 0.
   2) Copy construction is not allowed.
   3) Move constructor: move-constructs the first base class basic_istream as
   basic_istream<CharT,Traits>(std::move(rhs));, which in turn move-constructs and
   initializes the virtual base std::basic_ios. The initialization of the other base,
   basic_ostream, is implementation-defined (e.g., a protected default constructor may
   be added to std::basic_ostream, which does nothing) because move-construction cannot
   use rhs twice. This move constructor is protected: it is called by the move
   constructors of the derived stream classes std::basic_fstream and
   std::basic_stringstream before they move-construct and associate the stream buffer.

.SH Parameters

   sb    - streambuf to initialize with
   other - another stream to initialize with

.SH See also

   operator= move-assigns another basic_iostream
   \fI(C++11)\fP   \fI(protected member function)\fP 
