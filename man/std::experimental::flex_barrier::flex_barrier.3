.TH std::experimental::flex_barrier::flex_barrier 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::flex_barrier::flex_barrier \- std::experimental::flex_barrier::flex_barrier

.SH Synopsis
   explicit flex_barrier( std::ptrdiff_t num_threads );      \fB(1)\fP (concurrency TS)
   template < class F >                                      \fB(2)\fP (concurrency TS)
   flex_barrier( std::ptrdiff_t num_threads, F completion );
   flex_barrier( const flex_barrier & ) = delete;            \fB(3)\fP (concurrency TS)

   1) Has the same effect as flex_barrier(num_threads, c), where c is a Callable object
   whose invocation returns -1 and has no side effects.
   2) Constructs a flex_barrier for num_threads participating threads, using completion
   for the completion phase. The set of participating threads is the first num_threads
   threads to arrive at the synchronization point.
   3) Copy constructor is deleted; flex_barrier is not copyable.

.SH Parameters

   num_threads - the number of participating threads for the flex_barrier; must be
                 non-negative
                 A function object controlling the completion phase; must be Callable
   completion  - with no arguments and return type std::ptrdiff_t, and when invoked,
                 must return a value no less than -1 and must not throw an exception.
.SH Type requirements
   -
   F must meet the requirements of CopyConstructible.

.SH Notes

   If num_threads is zero, the set of participating threads is empty, and flex_barrier
   can only be destroyed.
