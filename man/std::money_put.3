.TH std::money_put 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::money_put \- std::money_put

.SH Synopsis
   Defined in header <locale>
   template<

       class CharT,
       class OutputIt = std::ostreambuf_iterator<CharT>

   > class money_put;

   Class std::money_put encapsulates the rules for formatting monetary values as
   strings. The standard I/O manipulator std::put_money uses the std::money_put facet
   of the I/O stream's locale.

   std-money put-inheritance.svg
   About this image

                                   Inheritance diagram

.SH Type requirements

   -
   OutputIt must meet the requirements of OutputIterator.

.SH Specializations

   Two standalone (locale-independent) full specializations and two partial
   specializations are provided by the standard library:

   Defined in header <locale>
   std::money_put<char>              creates narrow string representations of monetary
                                     values
   std::money_put<wchar_t>           creates wide string representations of monetary
                                     values
   std::money_put<char, OutputIt>    creates narrow string representations of monetary
                                     values using custom output iterator
   std::money_put<wchar_t, OutputIt> creates wide string representations of monetary
                                     values using custom output iterator

   In addition, every locale object constructed in a C++ program implements its own
   (locale-specific) versions of these specializations.

.SH Member types

   Member type Definition
   char_type   CharT
   string_type std::basic_string<CharT>
   iter_type   OutputIt

.SH Member functions

   constructor   constructs a new money_put facet
                 \fI(public member function)\fP
   destructor    destructs a money_put facet
                 \fI(protected member function)\fP
   put           invokes do_put
                 \fI(public member function)\fP

.SH Protected member functions

   do_put    formats a monetary value and writes to output stream
   \fB[virtual]\fP \fI(virtual protected member function)\fP 

.SH Member objects

   static std::locale::id id id of the locale
                             \fI(public member object)\fP

.SH Example

   
// Run this code

 #include <iostream>
 #include <locale>
 #include <iomanip>
 #include <iterator>
 int main()
 {
     // using the IO manipulator
     std::cout.imbue(std::locale("en_US.UTF-8"));
     std::cout << "american locale: "
                << std::showbase << std::put_money(12345678.9)<< '\\n';
  
     // using the facet directly
     std::cout.imbue(std::locale("de_DE.UTF-8"));
     std::cout << "german locale: " ;
     auto& f = std::use_facet<std::money_put<char>>(std::cout.getloc());
     f.put({std::cout}, false, std::cout, std::cout.fill(), 12345678.9 );
     std::cout << '\\n';
 }

.SH Output:

 american locale: $123,456.79
 german locale: 123.456,79 â‚¬

.SH See also

              defines monetary formatting parameters used by std::money_get and
   moneypunct std::money_put
              \fI(class template)\fP 
   money_get  parses and constructs a monetary value from an input character sequence
              \fI(class template)\fP 
   put_money  formats and outputs a monetary value
   \fI(C++11)\fP    \fI(function template)\fP 
