.TH std::is_execution_policy 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::is_execution_policy \- std::is_execution_policy

.SH Synopsis
   Defined in header <execution>
   template< class T >            \fI(since C++17)\fP
   struct is_execution_policy;

   Checks whether T is a standard or implementation-defined execution policy type.

   Provides the member constant value which is equal to true, if T is
   std::execution::sequenced_policy, std::execution::parallel_policy,
   std::execution::parallel_unsequenced_policy, or an implementation-defined execution
   policy type. Otherwise, value is equal to false.

   The behavior of a program that adds specializations for std::is_execution_policy is
   undefined.

.SH Template parameters

   T - a type to check

   Helper template

   Defined in header <execution>
   template< class T >
   inline constexpr bool is_execution_policy_v =                          \fI(since C++17)\fP
   std::is_execution_policy<T>::value;

   

Inherited from std::integral_constant

.SH Member constants

   value    true if T is a standard or implementation-defined execution policy type ,
   \fB[static]\fP false otherwise
            \fI(public static member constant)\fP

.SH Member functions

   operator bool converts the object to bool, returns value
                 \fI(public member function)\fP
   operator()    returns value
   \fI(C++14)\fP       \fI(public member function)\fP

.SH Member types

   Type       Definition
   value_type bool
   type       std::integral_constant<bool, value>

.SH See also

   sequenced_policy
   parallel_policy
   parallel_unsequenced_policy execution policy types
   \fI(C++17)\fP                     \fI(class)\fP 
   \fI(C++17)\fP
   \fI(C++17)\fP
   seq
   par
   par_unseq                   global execution policy objects
   \fI(C++17)\fP                     (constant) 
   \fI(C++17)\fP
   \fI(C++17)\fP
