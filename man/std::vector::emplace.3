.TH std::vector::emplace 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::vector::emplace \- std::vector::emplace

.SH Synopsis
   template< class... Args >                                \fI(since C++11)\fP
   iterator emplace( const_iterator pos, Args&&... args );

   Inserts a new element into the container directly before pos. The element is
   constructed through std::allocator_traits::construct, which typically uses
   placement-new to construct the element in-place at a location provided by the
   container. The arguments args... are forwarded to the constructor as
   std::forward<Args>(args)....

   If the new size() is greater than capacity(), all iterators and references are
   invalidated. Otherwise, only the iterators and references before the insertion point
   remain valid. The past-the-end iterator is also invalidated.

.SH Parameters

   pos            -           iterator before which the new element will be constructed
   args           -           arguments to forward to the constructor of the element
.SH Type requirements
   -
   T (the container's element type) must meet the requirements of MoveAssignable,
   MoveInsertable and EmplaceConstructible.

.SH Return value

   Iterator pointing to the emplaced element.

.SH Complexity

   Linear in the distance between pos and end of the container.

.SH Exceptions

   If an exception is thrown other than by the copy constructor, move constructor,
   assignment operator, or move assignment operator of the value type, or if an
   exception is thrown while emplace is used to insert a single element at the end and
   the value type is either CopyInsertable or nothrow move constructible, there are no
   effects \fI(strong exception guarantee)\fP.

   Otherwise, the effects are unspecified.

.SH Notes

   The specialization std::vector<bool> did not have emplace() member until C++14.

.SH See also

   insert inserts elements
          \fI(public member function)\fP 
