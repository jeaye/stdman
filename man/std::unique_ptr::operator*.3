.TH std::unique_ptr::operator* 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unique_ptr::operator* \- std::unique_ptr::operator*

.SH Synopsis
   typename std::add_lvalue_reference<T>::type operator*() const; \fB(1)\fP \fI(since C++11)\fP
   pointer operator->() const noexcept;                           \fB(2)\fP \fI(since C++11)\fP

   operator* and operator-> provide access to the object owned by *this.

   The behavior is undefined if get() == nullptr

.SH Parameters

   \fI(none)\fP

.SH Return value

   1) Returns the object owned by *this, equivalent to *get().

   2) Returns a pointer to the object owned by *this, i.e. get().

.SH Exceptions

   1) may throw, e.g. if pointer defines a throwing operator*

.SH Example

   
// Run this code

 #include <iostream>
 #include <memory>
  
 struct Foo {
     void bar() { std::cout << "Foo::bar\\n"; }
 };
  
 void f(const Foo& foo)
 {
     std::cout << "f(const Foo&)\\n";
 }
  
 int main()
 {
     std::unique_ptr<Foo> ptr(new Foo);
  
     ptr->bar();
     f(*ptr);
 }

.SH Output:

 Foo::bar
 f(const Foo&)

.SH See also

   get returns a pointer to the managed object
       \fI(public member function)\fP 
