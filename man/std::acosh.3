.TH std::acosh 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::acosh \- std::acosh

.SH Synopsis
   Defined in header <cmath>
   float       acosh( float arg );       \fB(1)\fP \fI(since C++11)\fP
   double      acosh( double arg );      \fB(2)\fP \fI(since C++11)\fP
   long double acosh( long double arg ); \fB(3)\fP \fI(since C++11)\fP
   double      acosh( Integral arg );    \fB(4)\fP \fI(since C++11)\fP

   Computes the inverse hyperbolic cosine of arg.

   4) A set of overloads or a function template accepting an argument of any integral
   type. Equivalent to 2) (the argument is cast to double).

.SH Parameters

   arg - value of a floating-point or Integral type

.SH Return value

   If no errors occur, the inverse hyperbolic cosine of arg (cosh-1
   (arg), or arcosh(arg)) on the interval [0, +∞], is returned.

   If a domain error occurs, an implementation-defined value is returned (NaN where
   supported)

.SH Error handling

   Errors are reported as specified in math_errhandling

   If the argument is less than 1, a domain error occurs.

   If the implementation supports IEEE floating-point arithmetic (IEC 60559),

     * if the argument is less than 1, FE_INVALID is raised an NaN is returned
     * if the argument is 1, +0 is returned
     * if the argument is +∞, +∞ is returned
     * if the argument is NaN, NaN is returned

.SH Notes

   Although the C standard (to which C++ refers for this function) names this function
   "arc hyperbolic cosine", the inverse functions of the hyperbolic functions are the
   area functions. Their argument is the area of a hyperbolic sector, not an arc. The
   correct name is "inverse hyperbolic cosine" (used by POSIX) or "area hyperbolic
   cosine".

.SH Examples

   
// Run this code

 #include <iostream>
 #include <cmath>
 #include <cfloat>
 #include <cerrno>
 #include <cfenv>
 #include <cstring>
 #pragma STDC FENV_ACCESS ON
 int main()
 {
     std::cout << "acosh(1) = " << std::acosh(1) << '\\n'
               << "acosh(10) = " << std::acosh(10) << '\\n'
               << "acosh(DBL_MAX) = " << std::acosh(DBL_MAX) << '\\n'
               << "acosh(Inf) = " <<  std::acosh(INFINITY) << '\\n';
      // error handling
      errno = 0; std::feclearexcept(FE_ALL_EXCEPT);
      std::cout << "acosh(0.5) = " << std::acosh(0.5) << '\\n';
      if(errno == EDOM)
          std::cout << "    errno == EDOM: " << std::strerror(errno) << '\\n';
      if(std::fetestexcept(FE_INVALID))
         std::cout << "    FE_INVALID raised\\n";
 }

.SH Possible output:

 acosh\fB(1)\fP = 0
 acosh\fB(10)\fP = 2.99322
 acosh(DBL_MAX) = 710.476
 acosh(Inf) = inf
 acosh(0.5) = -nan
     errno == EDOM: Numerical argument out of domain
     FE_INVALID raised

.SH See also

   asinh               computes the inverse hyperbolic sine (arsinh(x))
   \fI(C++11)\fP             \fI(function)\fP 
   atanh               computes the inverse hyperbolic tangent (artanh(x))
   \fI(C++11)\fP             \fI(function)\fP 
   cosh                computes hyperbolic cosine (ch(x))
                       \fI(function)\fP 
   acosh(std::complex) computes area hyperbolic cosine of a complex number
   \fI(C++11)\fP             \fI(function template)\fP 
   C documentation for
   acosh

.SH External links

   Weisstein, Eric W. "Inverse Hyperbolic Cosine." From MathWorld--A Wolfram Web
   Resource.
