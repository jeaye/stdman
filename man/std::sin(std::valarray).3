.TH std::sin(std::valarray) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::sin(std::valarray) \- std::sin(std::valarray)

.SH Synopsis
   Defined in header <valarray>
   template< class T >
   valarray<T> sin( const valarray<T>& va );

   For each element in va computes sine of the value of the element.

.SH Parameters

   va - value array to apply the operation to

.SH Return value

   Value array containing sine of the values in va.

.SH Notes

   Unqualified function (sin) is used to perform the computation. If such function is
   not available, std::sin is used due to argument dependent lookup.

   The function can be implemented with the return type different from std::valarray.
   In this case, the replacement type has the following properties:

              * All const member functions of std::valarray are provided.
              * std::valarray, std::slice_array, std::gslice_array, std::mask_array and
                std::indirect_array can be constructed from the replacement type.
              * All functions accepting an argument of type const std::valarray&
                except begin() and end()
                \fI(since C++11)\fP should also accept the replacement type.
              * All functions accepting two arguments of type const std::valarray&
                should accept every combination of const std::valarray& and the
                replacement type.
              * The return type does not add more than two levels of template nesting
                over the most deeply-nested argument type.

.SH Possible implementation

   template<class T>
   valarray<T> sin(const valarray<T>& va)
   {
       valarray<T> other = va;
       for (T &i : other) {
           i = sin(i);
       }
       return other;
   }

.SH Example

   
// Run this code

 #include <iostream>
 #include <valarray>
 #include <cmath>
  
 const double pi = std::acos(-1);
 int main()
 {
     std::valarray<double> v1 = {0, 0.25, 0.5, 0.75, 1};
     std::valarray<double> v2 = std::sin(v1 * pi);
  
     for(double n : v2)
         std::cout << std::fixed << n << ' ';
     std::cout << '\\n';
 }

.SH Output:

 0.000000 0.707107 1.000000 0.707107 0.000000

.SH See also

   cos(std::valarray)  applies the function std::cos to each element of valarray
                       \fI(function template)\fP 
   tan(std::valarray)  applies the function std::tan to each element of valarray
                       \fI(function template)\fP 
   asin(std::valarray) applies the function std::asin to each element of valarray
                       \fI(function template)\fP 
   sin                 computes sine (sin(x))
                       \fI(function)\fP 
   sin(std::complex)   computes sine of a complex number (sin(z))
                       \fI(function template)\fP 

   Hidden category:

     * Pages with unreviewed LWG DR marker
