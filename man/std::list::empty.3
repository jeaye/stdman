.TH std::list::empty 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::list::empty \- std::list::empty

.SH Synopsis
   bool empty() const;                         \fI(until C++11)\fP
   bool empty() const noexcept;                \fI(since C++11)\fP
                                               (until C++20)
   [[nodiscard]] bool empty() const noexcept;  (since C++20)

   Checks if the container has no elements, i.e. whether begin() == end().

.SH Parameters

   \fI(none)\fP

.SH Return value

   true if the container is empty, false otherwise

.SH Complexity

   Constant.

.SH Example

   

   The following code uses empty to check if a std::list<int> contains any elements:

   
// Run this code

 #include <list>
 #include <iostream>
  
 int main()
 {
     std::list<int> numbers;
     std::cout << "Initially, numbers.empty(): " << numbers.empty() << '\\n';
  
     numbers.push_back(42);
     numbers.push_back(13317);
     std::cout << "After adding elements, numbers.empty(): " << numbers.empty() << '\\n';
 }

.SH Output:

 Initially, numbers.empty(): 1
 After adding elements, numbers.empty(): 0

.SH See also

   size returns the number of elements
        \fI(public member function)\fP 
