.TH std::deque::shrink_to_fit 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::deque::shrink_to_fit \- std::deque::shrink_to_fit

.SH Synopsis
   void shrink_to_fit();  \fI(since C++11)\fP

   Requests the removal of unused capacity.

   It is a non-binding request to reduce the memory usage without changing the size of
   the sequence. It depends on the implementation if the request is fulfilled.

   All iterators and references are invalidated. Past-the-end iterator is also
   invalidated.

.SH Parameters

   \fI(none)\fP

.SH Type requirements
   -
   T must meet the requirements of MoveInsertable.

.SH Return value

   \fI(none)\fP

.SH Complexity

   At most linear in the size of the container.

.SH Notes

   If an exception is thrown other than by T's move constructor, there are no effects.

.SH Example

   
   
// Run this code

 #include <deque>
  
 int main() {
     std::deque<int> nums(1000, 42);
     nums.push_front(1);
     nums.pop_front();
  
     nums.clear();
  
     // nums now contains no items, but it may still be holding allocated memory.
     // Calling shrink_to_fit may free any unused memory.
     nums.shrink_to_fit();
 }

.SH See also

   size returns the number of elements
        \fI(public member function)\fP 
