.TH std::swap(std::variant) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::swap(std::variant) \- std::swap(std::variant)

.SH Synopsis
   Defined in header <variant>
   template <class... Types>
   void swap(variant<Types...>& lhs, variant<Types...>& rhs) noexcept(/*  \fI(since C++17)\fP
   see below */);

   Overloads the std::swap algorithm for std::variant. Effectively calls lhs.swap(rhs).

   This overload only participates in overload resolution if
   is_move_constructible_v<T_i> and is_swappable_v<T_i> are both true for all T_i in
   Types...

.SH Parameters

   lhs, rhs - variant objects whose values to swap

.SH Return value

   \fI(none)\fP

.SH Exceptions

   noexcept specification:  
   noexcept(noexcept(lhs.swap(rhs)))

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   swap swaps with another variant
        \fI(public member function)\fP 

   Categories:

     * conditionally noexcept
     * Todo no example
