.TH std::experimental::any::any 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::any::any \- std::experimental::any::any

.SH Synopsis
   any() noexcept;               \fB(1)\fP (library fundamentals TS)
   any( const any& other );      \fB(2)\fP (library fundamentals TS)
   any( any&& other ) noexcept;  \fB(3)\fP (library fundamentals TS)
   template<typename ValueType>  \fB(4)\fP (library fundamentals TS)
       any( ValueType&& value );

   Constructs a new any object.

   1) Constructs an empty object.
   2-3) Copies \fB(2)\fP or moves \fB(3)\fP content of other into a new instance, so that any
   content is equivalent in both type and value to those of other prior to the
   constructor call, or empty if other is empty.
   4) Constructs an object with initial content an object of type
   std::decay_t<ValueType>, direct-initialized from std::forward<ValueType>(value). If
   std::is_copy_constructible<std::decay_t<ValueType>>::value is false, the program is
   ill-formed. This overload only participates in overload resolution if
   std::decay_t<ValueType> is not the same type as any.

.SH Template parameters

   ValueType               -              contained value type
.SH Type requirements
   -
   std::decay_t<ValueType> must meet the requirements of CopyConstructible.

.SH Parameters

   other - another any object to copy or move from
   value - value to initialize the contained value with

.SH Exceptions

   2,4) Throws any exception thrown by the constructor of the contained type.

.SH See also

   operator= assigns an any object
             \fI(public member function)\fP 
