.TH std::sub_match::operatorstring_type,std::sub_match::str 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::sub_match::operatorstring_type,std::sub_match::str \- std::sub_match::operatorstring_type,std::sub_match::str

.SH Synopsis
   operator string_type() const; \fB(1)\fP
   string_type str() const;      \fB(2)\fP

   Converts to an object of the underlying std::basic_string type.

   The first version is an implicit conversion, the second one is explicit.

.SH Parameters

   \fI(none)\fP

.SH Return value

   Returns the matched character sequence as an object of the underlying
   std::basic_string type. If the matched member is false then the empty string is
   returned.

.SH Complexity

   Linear in the length of the underlying character sequence.

.SH Example

   
// Run this code

 #include <iostream>
 #include <regex>
 #include <string>
 int main()
 {
   std::ssub_match sm;
   std::string s = sm;  // implicit conversion
   std::cout << s.length() << '\\n';
 }

.SH Output:

 0
