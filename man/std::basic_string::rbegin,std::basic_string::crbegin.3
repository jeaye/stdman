.TH std::basic_string::rbegin,std::basic_string::crbegin 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_string::rbegin,std::basic_string::crbegin \- std::basic_string::rbegin,std::basic_string::crbegin

.SH Synopsis
   reverse_iterator rbegin();
   const_reverse_iterator rbegin() const;
   const_reverse_iterator crbegin() const;  \fI(since C++11)\fP

   Returns a reverse iterator to the first character of the reversed string. It
   corresponds to the last character of the non-reversed string.

   range-rbegin-rend.svg

.SH Parameters

   \fI(none)\fP

.SH Return value

   reverse iterator to the first character

.SH Exceptions

   \fI(none)\fP                    \fI(until C++11)\fP
   noexcept specification:  
   noexcept                  \fI(since C++11)\fP
     

.SH Complexity

   Constant

.SH Example

   
// Run this code

 #include <iostream>
 #include <algorithm>
 #include <iterator>
 #include <string>
  
 int main()
 {
     std::string s("Exemplar!");
     *s.rbegin() = 'y';
     std::cout << s << '\\n'; // "Exemplary"
  
     std::string c;
     std::copy(s.crbegin(), s.crend(), std::back_inserter(c));
     std::cout << c << '\\n'; // "yralpmexE"
 }

.SH Output:

 Exemplary
 yralpmexE

.SH See also

   rend    returns a reverse iterator to the end
   crend   \fI(public member function)\fP 
   \fI(C++11)\fP

.SH Category:

     * unconditionally noexcept

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
