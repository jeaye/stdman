.TH std::basic_syncbuf::operator= 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_syncbuf::operator= \- std::basic_syncbuf::operator=

.SH Synopsis
   basic_syncbuf& operator=(basic_syncbuf&& other);

   First, calls emit() to transmit all pending output (and delayed flush, if any) to
   the wrapped stream.

   Then performs move-assignment by moving all contents from other, including the
   temporary storage, the wrapped stream pointer, policy, and all other state (such as
   the mutex pointer). After move, other is not associated with a stream, and
   other.get_wrapped()==nullptr. The put area member pointers of the base class
   std::basic_streambuf of other are guaranteed to be null. Destroying a moved-from
   other will not produce any output.

   If std::allocator_traits<Allocator>::propagate_on_container_move_assignment::value
   is false, then the allocator is unchanged. Otherwise, after move-assignment,
   get_allocator() equals other.get_allocator().

.SH Parameters

   other - another std::basic_syncbuf to move from

.SH Return value

   *this

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   operator=     assigns a basic_osyncstream
                 \fI(public member function of std::basic_osyncstream)\fP 
   constructor   constructs a basic_syncbuf object
                 \fI(public member function)\fP 
                 atomically transmits the entire internal buffer to the wrapped
   emit          streambuf
                 \fI(public member function)\fP 
   swap          swaps two basic_syncbuf objects
                 \fI(public member function)\fP 

.SH Category:

     * Todo no example
