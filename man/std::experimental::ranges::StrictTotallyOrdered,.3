.TH std::experimental::ranges::StrictTotallyOrdered, 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::ranges::StrictTotallyOrdered, \- std::experimental::ranges::StrictTotallyOrdered,

.SH Synopsis

   Defined in header <experimental/ranges/concepts>
   template <class T>

   concept bool StrictTotallyOrdered =
     ranges::EqualityComparable<T> &&
     requires(const std::remove_reference_t<T>& a,
              const std::remove_reference_t<T>& b) { \fB(1)\fP (ranges TS)
       { a < b }  -> ranges::Boolean&&;
       { a > b }  -> ranges::Boolean&&;
       { a <= b } -> ranges::Boolean&&;
       { a >= b } -> ranges::Boolean&&;

     };
   template <class T, class U>

   concept bool StrictTotallyOrderedWith =
     ranges::StrictTotallyOrdered<T> &&
     ranges::StrictTotallyOrdered<U> &&
     ranges::CommonReference<
       const std::remove_reference_t<T>&,
       const std::remove_reference_t<U>&> &&
     ranges::StrictTotallyOrdered<
       ranges::common_reference_t<
         const std::remove_reference_t<T>&,
         const std::remove_reference_t<U>&>> &&
     ranges::EqualityComparableWith<T, U> &&         \fB(2)\fP (ranges TS)
     requires(const std::remove_reference_t<T>& t,
              const std::remove_reference_t<U>& u) {
       { t < u }  -> ranges::Boolean&&;
       { t > u }  -> ranges::Boolean&&;
       { t <= u } -> ranges::Boolean&&;
       { t >= u } -> ranges::Boolean&&;
       { u < t }  -> ranges::Boolean&&;
       { u > t }  -> ranges::Boolean&&;
       { u <= t } -> ranges::Boolean&&;
       { u >= t } -> ranges::Boolean&&;

     };

    This section is incomplete
    Reason: add description and extra caveats

.SH Category:

     * Todo with reason
