.TH std::linear_congruential_engine 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::linear_congruential_engine \- std::linear_congruential_engine

.SH Synopsis
   Defined in header <random>
   template<

       class UIntType,
       UIntType a,                      \fI(since C++11)\fP
       UIntType c,
       UIntType m

   > class linear_congruential_engine;

   linear_congruential_engine is a random number engine based on Linear congruential
   generator (LCG). A LCG has a state that consists of a single integer.

   The transition algorithm of the LCG function is x
   i+1 ‚Üê (ax
   i+c) mod m.

   The following typedefs define the random number engine with two commonly used
   parameter sets:

   Defined in header <random>
   Type         Definition
                std::linear_congruential_engine<std::uint_fast32_t, 16807, 0,
                2147483647>
   minstd_rand0
                Discovered in 1969 by Lewis, Goodman and Miller, adopted as "Minimal
                standard" in 1988 by Park and Miller 
                std::linear_congruential_engine<std::uint_fast32_t, 48271, 0,
                2147483647>
   minstd_rand
                Newer "Minimum standard", recommended by Park, Miller, and Stockmeyer
                in 1993

.SH Member types

   Member type Definition
   result_type The integral type generated by the engine. Results are undefined if this
               is not an unsigned integral type.

.SH Member functions

.SH Construction and Seeding
   constructor   constructs the engine
                 \fI(public member function)\fP 
   seed          sets the current state of the engine
                 \fI(public member function)\fP 
.SH Generation
   operator()    advances the engine's state and returns the generated value
                 \fI(public member function)\fP 
   discard       advances the engine's state by a specified amount
                 \fI(public member function)\fP 
.SH Characteristics
   min           gets the smallest possible value in the output range
   \fB[static]\fP      \fI(public static member function)\fP 
   max           gets the largest possible value in the output range
   \fB[static]\fP      \fI(public static member function)\fP 

.SH Non-member functions

   operator== compares the internal states of two pseudo-random number engines
   operator!= \fI(function template)\fP 
   operator<< performs stream input and output on pseudo-random number engine
   operator>> \fI(function template)\fP 

.SH Member objects

   constexpr UIntType multiplier   the multiplier term (a).
   \fB[static]\fP                        \fI(public static member constant)\fP
   constexpr UIntType increment    the increment term (c).
   \fB[static]\fP                        \fI(public static member constant)\fP
   constexpr UIntType modulus      the modulus term (m).
   \fB[static]\fP                        \fI(public static member constant)\fP
   constexpr UIntType default_seed the default seed \fB(1)\fP.
   \fB[static]\fP                        \fI(public static member constant)\fP
