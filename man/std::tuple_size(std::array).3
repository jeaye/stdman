.TH std::tuple_size(std::array) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::tuple_size(std::array) \- std::tuple_size(std::array)

.SH Synopsis
   Defined in header <array>
   template< class T, size_t N >

   class tuple_size< array<T, N> > :       \fB(1)\fP \fI(since C++11)\fP
       public integral_constant<size_t, N>

   { };

   Provides access to the number of elements in an std::array as a compile-time
   constant expression.

.SH Member constants

   value    N, the number of elements in the array
   \fB[static]\fP \fI(public static member constant)\fP

.SH Member functions

   operator std::size_t converts the object to std::size_t, returns value
                        \fI(public member function)\fP
   operator()           returns value
   \fI(C++14)\fP              \fI(public member function)\fP

.SH Member types

   Type       Definition
   value_type std::size_t
   type       std::integral_constant<std::size_t, value>

.SH Example

   
// Run this code

 #include <iostream>
 #include <array>
  
 template<class T>
 void test(T t)
 {
     int a[std::tuple_size<T>::value]; // can be used at compile time
     std::cout << std::tuple_size<T>::value << '\\n';
 }
  
 int main()
 {
     std::array<float, 3> arr;
     test(arr);
 }

.SH Output:

 3

.SH See also

   tuple_size obtains the size of tuple at compile time
              \fI(class template specialization)\fP 
