.TH std::basic_string::find_first_of 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_string::find_first_of \- std::basic_string::find_first_of

.SH Synopsis
   size_type find_first_of( const basic_string& str, size_type pos =  \fB(1)\fP
   0 ) const;
   size_type find_first_of( const CharT* s, size_type pos, size_type  \fB(2)\fP
   count ) const;
   size_type find_first_of( const CharT* s, size_type pos = 0 )       \fB(3)\fP
   const;
   size_type find_first_of( CharT ch, size_type pos = 0 ) const;      \fB(4)\fP
   size_type find_first_of( std::basic_string_view<CharT, Traits> sv, \fB(5)\fP \fI(since C++17)\fP
                            size_type pos = 0 ) const

   Finds the first character equal to one of the characters in the given character
   sequence. The search considers only the interval [pos, size()). If the character is
   not present in the interval, npos will be returned.

   1) Finds the first character equal to one of the characters in str
   as if by find_first_of(std::basic_string_view<CharT, Traits>(str), pos)
   \fI(since C++17)\fP
   2) Finds the first character equal to one of the characters in the first count
   characters of the character string pointed to by s. s can include null characters.
   Equivalent to
   find_first_of(basic_string(s, count), pos)
   \fI(until C++17)\fP
   find_first_of(std::basic_string_view<CharT, Traits>(s, count), pos)
   \fI(since C++17)\fP
   3) Finds the first character equal to one of the characters in character string
   pointed to by s. The length of the string is determined by the first null character.
   Equivalent to
   find_first_of(basic_string(s), pos)
   \fI(until C++17)\fP
   find_first_of(std::basic_string_view<CharT,Traits>(s), pos)
   \fI(since C++17)\fP
   4) Finds the first character equal to ch.
   5) Finds the first character equal to one of the characters in sv

.SH Parameters

   str   - string identifying characters to search for
   pos   - position at which to begin searching
   count - length of character string identifying characters to search for
   s     - pointer to a character string identifying characters to search for
   ch    - character to search for
   sv    - std::basic_string_view to search for

.SH Return value

   Position of the found character or npos if no such character is found.

.SH Exceptions

   1-4) \fI(none)\fP               \fI(until C++11)\fP
   1,4)
   noexcept specification:   \fI(since C++11)\fP
   noexcept                  \fI(until C++14)\fP
     
   2,3) \fI(none)\fP
   1)
   noexcept specification:  
   noexcept                  \fI(since C++14)\fP
     
   2-4) \fI(none)\fP
   5)
   noexcept specification:   \fI(since C++17)\fP
   noexcept
     

.SH Notes

   traits::eq() is used to perform the comparison.

.SH Example

   
// Run this code

 #include <iostream>
 #include <string>
  
 int main()
 {
     // the test string
     std::string str = std::string("Hello World!");
  
     // strings and chars to search for
     std::string search_str = std::string("o");
     const char* search_cstr = "Good Bye!";
  
     std::cout << str.find_first_of(search_str) << '\\n';
     std::cout << str.find_first_of(search_str, 5) << '\\n';
     std::cout << str.find_first_of(search_cstr) << '\\n';
     std::cout << str.find_first_of(search_cstr, 0, 4) << '\\n';
     // 'x' is not in "Hello World', thus it will return std::string::npos
     std::cout << str.find_first_of('x') << '\\n';
 }

.SH Possible output:

 4
 7
 1
 4
 18446744073709551615

.SH See also

   find              find characters in the string
                     \fI(public member function)\fP 
   rfind             find the last occurrence of a substring
                     \fI(public member function)\fP 
   find_first_not_of find first absence of characters
                     \fI(public member function)\fP 
   find_last_of      find last occurrence of characters
                     \fI(public member function)\fP 
   find_last_not_of  find last absence of characters
                     \fI(public member function)\fP 
                     returns the length of the maximum initial segment that consists
   strspn            of only the characters found in another byte string
                     \fI(function)\fP 

.SH Category:

     * unconditionally noexcept

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
