.TH std::complex::operator= 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::complex::operator= \- std::complex::operator=

.SH Synopsis
   primary template complex<T>
   complex& operator=(const T&          (until
   x);                                  C++20)
   constexpr complex&                   (since
   operator=(const T& x);               C++20)
   specialization
   complex<float>
   complex& operator=(float x);                 (until
                                                C++20)
   constexpr complex&                           (since
   operator=(float x);                          C++20)
   specialization
   complex<double>
   complex& operator=(double                            (until
   x);                                                  C++20)
   constexpr complex&                                   (since
   operator=(double x);                                 C++20)
   specialization complex<long
   double>                      \fB(1)\fP
   complex& operator=(long                                      (until
   double x);                                                   C++20)
   constexpr complex&               \fB(1)\fP                         (since
   operator=(long double x);                                    C++20)
   all specializations
   complex& operator=(const             \fB(1)\fP                             (until
   complex& cx);                                                        C++20)
   constexpr complex&                                                   (since
   operator=(const complex&                     \fB(1)\fP                     C++20)
   cx);
   template<class X>                                    \fB(2)\fP                     (until
   complex& operator=(const                                                     C++20)
   std::complex<X>& cx);
   template<class X>                                            \fB(3)\fP
   constexpr complex&                                                           (since
   operator=(const                                                              C++20)
   std::complex<X>& cx);

   Assigns new values to the contents.

   1) Assigns x to the real part of the complex number. Imaginary part is set to zero.
   2,3) Assigns cx.real() and cx.imag() to the real and the imaginary parts of the
   complex number respectively.

.SH Parameters

   x  - value to assign
   cx - complex value to assign

.SH Return value

   *this

.SH See also

   constructor   constructs a complex number
                 \fI(public member function)\fP 
   operator""if
   operator""i   A std::complex literal representing pure imaginary number
   operator""il  \fI(function)\fP 
   \fI(C++14)\fP
