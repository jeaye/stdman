.TH std::filesystem::path::root_directory 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::path::root_directory \- std::filesystem::path::root_directory

.SH Synopsis
   path root_directory() const;  \fI(since C++17)\fP

   Returns the root directory of the generic-format path. If the path (in generic
   format) does not include root directory, returns path().

.SH Parameters

   \fI(none)\fP

.SH Return value

   The root directory of the path.

.SH Exceptions

   \fI(none)\fP

.SH Example

   
// Run this code

 #include <iostream>
 #include <filesystem>
 namespace fs = std::filesystem;
  
 int main()
 {
     fs::path p = fs::current_path();
  
     std::cout << "The current path " << p << " decomposes into:\\n"
               << "root name " << p.root_name() << '\\n'
               << "root directory " << p.root_directory() << '\\n'
               << "relative path " << p.relative_path() << '\\n';
 }

.SH Possible output:

 The current path "C:\\Users\\abcdef\\Local Settings\\temp" decomposes into:
 root name "C:"
 root directory "\\"
 relative path "Users\\abcdef\\Local Settings\\temp"

.SH See also

   root_name returns the root-name of the path, if present
             \fI(public member function)\fP 
   root_path returns the root path of the path, if present
             \fI(public member function)\fP 
