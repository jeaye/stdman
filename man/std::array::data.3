.TH std::array::data 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::array::data \- std::array::data

.SH Synopsis
   T* data() noexcept;                        \fI(until C++17)\fP
   constexpr T* data() noexcept;              \fI(since C++17)\fP
   const T* data() const noexcept;            \fI(until C++17)\fP
   constexpr const T* data() const noexcept;  \fI(since C++17)\fP

   Returns pointer to the underlying array serving as element storage. The pointer is
   such that range [data(); data() + size()) is always a valid range, even if the
   container is empty (data() is not dereferenceable in that case).

.SH Parameters

   \fI(none)\fP

.SH Return value

   Pointer to the underlying element storage. For non-empty containers, the returned
   pointer compares equal to the address of the first element.

.SH Complexity

   Constant.

.SH Notes

   If size() is 0, data() may or may not return a null pointer.

.SH See also

   front access the first element
         \fI(public member function)\fP 
   back  access the last element
         \fI(public member function)\fP 
   size  returns the number of elements
         \fI(public member function)\fP 
