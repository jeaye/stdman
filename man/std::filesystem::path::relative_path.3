.TH std::filesystem::path::relative_path 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::path::relative_path \- std::filesystem::path::relative_path

.SH Synopsis
   path relative_path() const;  \fI(since C++17)\fP

   Returns path relative to root-path, that is, a pathname composed of every
   generic-format component of *this after root-path. If *this is an empty path,
   returns an empty path.

.SH Parameters

   \fI(none)\fP

.SH Return value

   Path relative to the root path.

.SH Exceptions

   \fI(none)\fP

.SH Examples

   
// Run this code

 #include <iostream>
 #include <filesystem>
 namespace fs = std::filesystem;
  
 int main()
 {
     fs::path p = fs::current_path();
  
     std::cout << "The current path " << p << " decomposes into:\\n"
               << "root-path " << p.root_path() << '\\n'
               << "relative path " << p.relative_path() << '\\n';
 }

.SH Possible output:

 The current path "C:\\Users\\abcdef\\Local Settings\\temp" decomposes into:
 root-path "C:\\"
 relative path "Users\\abcdef\\Local Settings\\temp"

.SH See also

   root_name      returns the root-name of the path, if present
                  \fI(public member function)\fP 
   root_directory returns the root directory of the path, if present
                  \fI(public member function)\fP 
   root_path      returns the root path of the path, if present
                  \fI(public member function)\fP 
