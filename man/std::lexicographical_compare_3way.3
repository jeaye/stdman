.TH std::lexicographical_compare_3way 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::lexicographical_compare_3way \- std::lexicographical_compare_3way

.SH Synopsis
   Defined in header <algorithm>
   template< class InputIt1, class InputIt2, class Cmp >

   constexpr auto lexicographical_compare_3way( InputIt1 b1, InputIt1 e1,
                                                InputIt2 b2, InputIt2 e2,   \fB(1)\fP (since
                                                Cmp comp)                       C++20)

   -> std::common_comparison_category_t<decltype(comp(*b1, *b2)),
   std::strong_ordering>;
   template< class InputIt1, class InputIt2 >
                                                                                (since
   constexpr auto lexicographical_compare_3way( InputIt1 b1, InputIt1 e1,   \fB(2)\fP C++20)

                                                InputIt2 b2, InputIt2 e2);

   Lexicographically compares two ranges [first1, last1) and [first2, last2) using
   three-way comparison and produces a result of the strongest applicable comparison
   category type.

   1) Behaves as if defined as follows:

 for ( ; b1 != e1 && b2 != e2; void(++b1), void(++b2) )
   if (auto cmp = comp(*b1,*b2); cmp != 0)
     return cmp;
   return b1 != e1 ? std::strong_ordering::greater :
          b2 != e2 ? std::strong_ordering::less :
                     std::strong_ordering::equal;

   2) Behaves as if defined as follows:

 return std::lexicographical_compare_3way(b1, e1, b2, e2,
            [](const auto& t, const auto& u) {
                return std::compare_3way(t, u);
            });

.SH Parameters

   first1, last1 - the first range of elements to examine
   first2, last2 - the second range of elements to examine
                   a function object type. The behavior is undefined if its return type
   comp          - is not one of the five comparison category types (strong_equality,
                   weak_equality, strong_ordering, weak_ordering, or partial_ordering)
.SH Type requirements
   -
   InputIt1, InputIt2 must meet the requirements of InputIterator.

.SH Return value

   A comparison category type as defined above.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   compare_3way compares two values using three-way comparison
   (C++20)      \fI(function template)\fP 

.SH Category:

     * Todo no example
