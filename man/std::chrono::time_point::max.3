.TH std::chrono::time_point::max 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::time_point::max \- std::chrono::time_point::max

.SH Synopsis
   static constexpr time_point max();

   Returns a time_point with the largest possible duration, i.e.
   std::chrono::time_point(std::chrono::duration::max()).

.SH Parameters

   \fI(none)\fP

.SH Return value

   the largest possible time_point

.SH Example

   
// Run this code

 #include <chrono>
 #include <vector>
 #include <iostream>
  
 int main()
 {
     std::chrono::time_point<std::chrono::system_clock> now =
         std::chrono::system_clock::now();
     std::vector<std::chrono::time_point<std::chrono::system_clock>> times {
         now - std::chrono::hours(24),
         now - std::chrono::hours(48),
         now + std::chrono::hours(24),
     };
  
     std::chrono::time_point<std::chrono::system_clock> earliest =
         std::chrono::time_point<std::chrono::system_clock>::max();
  
     std::cout << "all times:\\n";
     for (const auto &time : times) {
         std::time_t t = std::chrono::system_clock::to_time_t(time);
         std::cout << std::ctime(&t);
  
         if (time < earliest) earliest = time;
     }
  
     std::time_t t = std::chrono::system_clock::to_time_t(earliest);
     std::cout << "earliest:\\n" << std::ctime(&t);
 }

.SH Possible output:

 all times:
 Sun Oct  7 19:06:48 2012
 Sat Oct  6 19:06:48 2012
 Tue Oct  9 19:06:48 2012
 earliest:
 Sat Oct  6 19:06:48 2012
