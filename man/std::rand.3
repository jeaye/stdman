.TH std::rand 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::rand \- std::rand

.SH Synopsis
   Defined in header <cstdlib>
   int rand();

   Returns a pseudo-random integral value between 0 and RAND_MAX (0 and RAND_MAX
   included).

   std::srand() seeds the pseudo-random number generator used by rand(). If rand() is
   used before any calls to srand(), rand() behaves as if it was seeded with srand\fB(1)\fP.

   Each time rand() is seeded with srand(), it must produce the same sequence of values
   on successive calls. Other functions in the standard library may call rand, it is
   implementation-defined which functions do so.

   It is implementation-defined whether rand() is thread-safe.

.SH Parameters

   \fI(none)\fP

.SH Return value

   Pseudo-random integral value between 0 and RAND_MAX.

.SH Notes

   There are no guarantees as to the quality of the random sequence produced. In the
   past, some implementations of rand() have had serious shortcomings in the
   randomness, distribution and period of the sequence produced (in one well-known
   example, the low-order bit simply alternated between 1 and 0 between calls).

   rand() is not recommended for serious random-number generation needs, like
   cryptography.
   It is recommended to use C++11's random number generation facilities to replace
   rand().
   \fI(since C++11)\fP

.SH Example

   
// Run this code

 #include <cstdlib>
 #include <iostream>
 #include <ctime>
  
 int main()
 {
     std::srand(std::time(nullptr)); // use current time as seed for random generator
     int random_variable = std::rand();
     std::cout << "Random value on [0 " << RAND_MAX << "]: "
               << random_variable << '\\n';
 }

.SH Possible output:

 Random value on [0 2147483647]: 1373858591

.SH See also

   uniform_int_distribution produces integer values evenly distributed across a range
   \fI(C++11)\fP                  \fI(class template)\fP 
   srand                    seeds pseudo-random number generator
                            \fI(function)\fP 
   RAND_MAX                 maximum possible value generated by std::rand
                            (macro constant) 
   randint                  generates a random integer in the specified range
                            \fI(function template)\fP 
   C documentation for
   rand
