.TH std::function::operatorbool 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::function::operatorbool \- std::function::operatorbool

.SH Synopsis
   explicit operator bool() const noexcept;  \fI(since C++11)\fP

   Checks whether *this stores a callable function target, i.e. is not empty.

.SH Parameters

   \fI(none)\fP

.SH Return value

   true if *this stores a callable function target, false otherwise.

.SH Example

   
// Run this code

 #include <functional>
 #include <iostream>
  
 void sampleFunction()
 {
     std::cout << "This is the sample function!\\n";
 }
  
 void checkFunc( std::function<void()> &func )
 {
     // Use operator bool to determine if callable target is available.
     if( func )
     {
         std::cout << "Function is not empty! Calling function.\\n";
         func();
     }
     else
     {
         std::cout << "Function is empty. Nothing to do.\\n";
     }
 }
  
 int main()
 {
     std::function<void()> f1;
     std::function<void()> f2( sampleFunction );
  
     std::cout << "f1: ";
     checkFunc( f1 );
  
     std::cout << "f2: ";
     checkFunc( f2 );
 }

.SH Output:

 f1: Function is empty. Nothing to do.
 f2: Function is not empty! Calling function.
 This is the sample function!
