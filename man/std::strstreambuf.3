.TH std::strstreambuf 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::strstreambuf \- std::strstreambuf

.SH Synopsis
   Defined in header <strstream>
   class strstreambuf : public std::basic_streambuf<char>  \fB(deprecated)\fP

   std::strstreambuf is a std::basic_streambuf whose associated character sequence is a
   character array, which may be constant (e.g. a string literal), modifyable but not
   dynamic (e.g. a stack-allocated array), or dynamic, in which case the
   std::strstreambuf may be allowed to reallocate the array as necessary to accomodate
   output (e.g. by calling delete[] and new[] or user-provided functions).

   Typical implementation of a std::strstreambuf holds four private data members:

   1) buffer state, a bitmask type which can represent any combination of the four
   values "allocated" (destructor will deallocate), "constant" (output not allowed),
   "dynamic" (output may reallocate), or "frozen" (deallocation and reallocation are
   not allowed)
   2) allocated buffer size (the beginning of the buffer does not need a special data
   member, it may be stored in the inherited pointer eback())
   3) pointer to user-provided allocation function
   4) pointer to user-provided deallocation function.

.SH Notes

   After any call to str() on a stream with a dynamic buffer, a call to freeze(false)
   is required to allow the strstreambuf destructor to deallocate the buffer when
   necessary.

.SH Member functions

.SH Public member functions
   constructor   constructs a strstreambuf object
                 \fI(public member function)\fP 
   destructor    destructs a strstreambuf object, optionally deallocating the character
   \fB[virtual]\fP     array
                 \fI(virtual public member function)\fP 
   freeze        sets/clears the frozen state of the buffer
                 \fI(public member function)\fP 
                 marks the buffer frozen and returns the beginning pointer of the input
   str           sequence
                 \fI(public member function)\fP 
                 returns the next pointer minus the beginning pointer in the output
   pcount        sequence: the number of characters written
                 \fI(public member function)\fP 
.SH Protected member functions
   underflow     reads a character from the input sequence without advancing the next
   \fB[virtual]\fP     pointer
                 \fI(virtual protected member function)\fP 
   pbackfail     backs out the input sequence to unget a character
   \fB[virtual]\fP     \fI(virtual protected member function)\fP 
   overflow      appends a character to the output sequence, may reallocate or
   \fB[virtual]\fP     initially allocate the buffer if dynamic and not frozen
                 \fI(virtual protected member function)\fP 
   setbuf        attempts to replace the controlled character sequence with an array
   \fB[virtual]\fP     \fI(virtual protected member function)\fP 
   seekoff       repositions the next pointer in the input sequence, output sequence,
   \fB[virtual]\fP     or both, using relative addressing
                 \fI(virtual protected member function)\fP 
   seekpos       repositions the next pointer in the input sequence, output sequence,
   \fB[virtual]\fP     or both using absolute addressing
                 \fI(virtual protected member function)\fP 

Inherited from std::basic_streambuf

.SH Member types

   Member type Definition
   char_type   CharT
   traits_type Traits
   int_type    Traits::int_type
   pos_type    Traits::pos_type
   off_type    Traits::off_type

.SH Member functions

   destructor                 destructs the basic_streambuf object
   \fB[virtual]\fP                  \fI(virtual public member function of std::basic_streambuf)\fP
                              
.SH Locales
   pubimbue                   invokes imbue()
                              \fI(public member function of std::basic_streambuf)\fP 
   getloc                     obtains a copy of the associated locale
                              \fI(public member function of std::basic_streambuf)\fP 
.SH Positioning
   pubsetbuf                  invokes setbuf()
                              \fI(public member function of std::basic_streambuf)\fP 
   pubseekoff                 invokes seekoff()
                              \fI(public member function of std::basic_streambuf)\fP 
   pubseekpos                 invokes seekpos()
                              \fI(public member function of std::basic_streambuf)\fP 
   pubsync                    invokes sync()
                              \fI(public member function of std::basic_streambuf)\fP 
.SH Get area
                              obtains the number of characters immediately available in
   in_avail                   the get area
                              \fI(public member function of std::basic_streambuf)\fP 
                              advances the input sequence, then reads one character
   snextc                     without advancing again
                              \fI(public member function of std::basic_streambuf)\fP 
                              reads one character from the input sequence and advances
   sbumpc                     the sequence
                              \fI(public member function of std::basic_streambuf)\fP 
   stossc                     advances the input sequence as if by calling sbumpc() and
   \fB(deprecated)\fP \fI(until C++17)\fP discarding the result
                              \fI(public member function)\fP 
                              reads one character from the input sequence without
   sgetc                      advancing the sequence
                              \fI(public member function of std::basic_streambuf)\fP 
   sgetn                      invokes xsgetn()
                              \fI(public member function of std::basic_streambuf)\fP 
.SH Put area
                              writes one character to the put area and advances the
   sputc                      next pointer
                              \fI(public member function of std::basic_streambuf)\fP 
   sputn                      invokes xsputn()
                              \fI(public member function of std::basic_streambuf)\fP 
.SH Putback
   sputbackc                  puts one character back in the input sequence
                              \fI(public member function of std::basic_streambuf)\fP 
   sungetc                    moves the next pointer in the input sequence back by one
                              \fI(public member function of std::basic_streambuf)\fP 

.SH Protected member functions

   constructor   constructs a basic_streambuf object
                 \fI(protected member function)\fP 
   operator=     replaces a basic_streambuf object
   \fI(C++11)\fP       \fI(protected member function)\fP 
   swap          swaps two basic_streambuf objects
   \fI(C++11)\fP       \fI(protected member function)\fP 
.SH Locales
   imbue         changes the associated locale
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf)\fP 
.SH Positioning
   setbuf        replaces the buffer with user-defined array, if permitted
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf)\fP 
   seekoff       repositions the next pointer in the input sequence, output sequence,
   \fB[virtual]\fP     or both, using relative addressing
                 \fI(virtual protected member function of std::basic_streambuf)\fP 
   seekpos       repositions the next pointer in the input sequence, output sequence,
   \fB[virtual]\fP     or both using absolute addressing
                 \fI(virtual protected member function of std::basic_streambuf)\fP 
   sync          synchronizes the buffers with the associated character sequence
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf)\fP 
.SH Get area
   showmanyc     obtains the number of characters available for input in the associated
   \fB[virtual]\fP     input sequence, if known
                 \fI(virtual protected member function of std::basic_streambuf)\fP 
   underflow     reads characters from the associated input sequence to the get area
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf)\fP 
   uflow         reads characters from the associated input sequence to the get area
   \fB[virtual]\fP     and advances the next pointer
                 \fI(virtual protected member function of std::basic_streambuf)\fP 
   xsgetn        reads multiple characters from the input sequence
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf)\fP 
   eback         returns a pointer to the beginning, current character and the end of
   gptr          the get area
   egptr         \fI(protected member function)\fP 
   gbump         advances the next pointer in the input sequence
                 \fI(protected member function)\fP 
                 repositions the beginning, next, and end pointers of the input
   setg          sequence
                 \fI(protected member function)\fP 
.SH Put area
   xsputn        writes multiple characters to the output sequence
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf)\fP 
   overflow      writes characters to the associated output sequence from the put area
   \fB[virtual]\fP     \fI(virtual protected member function of std::basic_streambuf)\fP 
   pbase         returns a pointer to the beginning, current character and the end of
   pptr          the put area
   epptr         \fI(protected member function)\fP 
   pbump         advances the next pointer of the output sequence
                 \fI(protected member function)\fP 
                 repositions the beginning, next, and end pointers of the output
   setp          sequence
                 \fI(protected member function)\fP 
.SH Putback
   pbackfail     puts a character back into the input sequence, possibly modifying the
   \fB[virtual]\fP     input sequence
                 \fI(virtual protected member function of std::basic_streambuf)\fP 
