.TH std::logical_or 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::logical_or \- std::logical_or

.SH Synopsis
   Defined in header <functional>
   template< class T >             \fI(until C++14)\fP
   struct logical_or;
   template< class T = void >      \fI(since C++14)\fP
   struct logical_or;

   Function object for performing logical OR (logical disjunction). Effectively calls
   operator|| on type T.

.SH Specializations

   The standard library provides a specialization of std::logical_or when
   T is not specified, which leaves the parameter types and return type
   to be deduced.
                                                                          \fI(since C++14)\fP
                    function object implementing x || y deducing argument
   logical_or<void> and return types
                    \fI(class template specialization)\fP 

.SH Member types

   Type                                      Definition
   result_type(deprecated in C++17)          bool
   first_argument_type(deprecated in C++17)  T
   second_argument_type(deprecated in C++17) T

.SH Member functions

   operator() returns the logical OR of the two arguments
              \fI(public member function)\fP

std::logical_or::operator()

   bool operator()( const T& lhs, const T& rhs ) const;            \fI(until C++14)\fP
   constexpr bool operator()( const T& lhs, const T& rhs ) const;  \fI(since C++14)\fP

   Returns the logical OR of lhs and rhs.

.SH Parameters

   lhs, rhs - values to compute logical OR of

.SH Return value

   The result of lhs || rhs.

.SH Exceptions

   \fI(none)\fP

.SH Possible implementation

   constexpr bool operator()(const T &lhs, const T &rhs) const
   {
       return lhs || rhs;
   }
