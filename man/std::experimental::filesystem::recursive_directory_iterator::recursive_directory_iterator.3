.TH std::experimental::filesystem::recursive_directory_iterator::recursive_directory_iterator 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::filesystem::recursive_directory_iterator::recursive_directory_iterator \- std::experimental::filesystem::recursive_directory_iterator::recursive_directory_iterator

.SH Synopsis
   recursive_directory_iterator();                                  \fB(1)\fP (filesystem TS)
   recursive_directory_iterator( const                              \fB(2)\fP (filesystem TS)
   recursive_directory_iterator& ) = default;
   recursive_directory_iterator( recursive_directory_iterator&& ) = \fB(3)\fP (filesystem TS)
   default;
   explicit recursive_directory_iterator( const path& p,
                                          directory_options options \fB(4)\fP (filesystem TS)
   = directory_options::none );
   recursive_directory_iterator( const path& p,
                                 directory_options options,         \fB(5)\fP (filesystem TS)
   error_code& ec );
   recursive_directory_iterator( const path& p, error_code& ec );   \fB(6)\fP (filesystem TS)

   Contructs new recursive directory iterator.

   1) Default constructor. Constructs an end iterator.
   2-3) Default copy and move constructors.
   4-6) Constructs a iterator that refers to the first entry in the directory that p
   resolves to.

    This section is incomplete
    Reason: errors

.SH Parameters

    This section is incomplete

.SH Exceptions

   1,5,6)
   noexcept specification:  
   noexcept
     

    This section is incomplete

.SH Notes

   Recursive directory iterators do not follow directory symlinks by default. To enable
   this behavior, specify directory_options::follow_directory_symlink among the options
   option set.

   Categories:

     * Todo with reason
     * Todo without reason
     * unconditionally noexcept

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
