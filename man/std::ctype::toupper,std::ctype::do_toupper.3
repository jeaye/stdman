.TH std::ctype::toupper,std::ctype::do_toupper 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ctype::toupper,std::ctype::do_toupper \- std::ctype::toupper,std::ctype::do_toupper

.SH Synopsis
   Defined in header <locale>
   public:                                                                \fB(1)\fP
   CharT toupper( CharT c ) const;
   public:                                                                \fB(2)\fP
   const CharT* toupper( CharT* beg, const CharT* end ) const;
   protected:                                                             \fB(3)\fP
   virtual CharT do_toupper( CharT c ) const;
   protected:                                                             \fB(4)\fP
   virtual const CharT* do_toupper( CharT* beg, const CharT* end ) const;

   1,2) public member function, calls the protected virtual member function do_toupper
   of the most derived class.
   3) Converts the character c to upper case if an upper case form is defined by this
   locale.
   4) For every character in the character array [beg, end), for which an upper case
   form exists, replaces the character with that upper case form.

.SH Parameters

   c   - character to convert
   beg - pointer to the first character in an array of characters to convert
   end - one past the end pointer for the array of characters to convert

.SH Return value

   1,3) upper case character or c if no upper case form is listed by this locale.
   2,4) end.

.SH Notes

   Only 1:1 character mapping can be performed by this function, e.g. the uppercase
   form of 'ß' is (with some exceptions) the two-character string "SS", which cannot be
   obtained by do_toupper.

.SH Example

   
// Run this code

 #include <locale>
 #include <iostream>
  
 void try_upper(const std::ctype<wchar_t>& f, wchar_t c)
 {
     wchar_t up = f.toupper(c);
     if (up != c) {
         std::wcout << "Upper case form of \\'" << c << "' is " << up << '\\n';
     } else {
         std::wcout << '\\'' << c << "' has no upper case form\\n";
     }
 }
  
 int main()
 {
     std::locale::global(std::locale("en_US.utf8"));
     std::wcout.imbue(std::locale());
     std::wcout << "In US English UTF-8 locale:\\n";
     auto& f = std::use_facet<std::ctype<wchar_t>>(std::locale());
     try_upper(f, L's');
     try_upper(f, L'ſ');
     try_upper(f, L'ß');
  
     std::wstring str = L"Hello, World!";
     std::wcout << "Uppercase form of the string '" << str << "' is ";
     f.toupper(&str[0], &str[0] + str.size());
     std::wcout << "'" << str << "'\\n";
 }

.SH Output:

 In US English UTF-8 locale:
 Upper case form of 's' is S
 Upper case form of 'ſ' is S
 'ß' has no upper case form
 Uppercase form of the string 'Hello, World!' is 'HELLO, WORLD!'

.SH See also

   tolower  invokes do_tolower
            \fI(public member function)\fP 
   toupper  converts a character to uppercase
            \fI(function)\fP 
   towupper converts a wide character to uppercase
            \fI(function)\fP 
