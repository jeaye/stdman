.TH std::experimental::shared_ptr::operator*,std::experimental::shared_ptr::operator-> 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::shared_ptr::operator*,std::experimental::shared_ptr::operator-> \- std::experimental::shared_ptr::operator*,std::experimental::shared_ptr::operator->

.SH Synopsis
   T& operator*() const noexcept;  \fB(1)\fP (library fundamentals TS)
   T* operator->() const noexcept; \fB(2)\fP (library fundamentals TS)

   Dereferences the stored pointer. The behavior is undefined if the stored pointer is
   null.

.SH Parameters

   \fI(none)\fP

.SH Return value

   1) The result of dereferencing the stored pointer, i.e., *get()
   2) The stored pointer, i.e., get()

   Remarks

   When T is an array type or (possibly cv-qualified) void, it is unspecified whether
   function \fB(1)\fP is declared.

   When T is an array type, it is unspecified whether function \fB(2)\fP is declared.

   In either case, if the function is declared, it is unspecified what its return type
   is, except that the declaration (although not necessarily the definition) of the
   function is guaranteed to be legal.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   get returns the stored pointer
       \fI(public member function)\fP 

.SH Category:

     * Todo no example
