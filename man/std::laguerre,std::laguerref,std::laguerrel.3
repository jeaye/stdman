.TH std::laguerre,std::laguerref,std::laguerrel 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::laguerre,std::laguerref,std::laguerrel \- std::laguerre,std::laguerref,std::laguerrel

.SH Synopsis
   double      laguerre( unsigned int n, double x );

   double      laguerre( unsigned int n, float x );
   double      laguerre( unsigned int n, long double x );  \fB(1)\fP \fI(since C++17)\fP
   float       laguerref( unsigned int n, float x );

   long double laguerrel( unsigned int n, long double x );
   double      laguerre( unsigned int n, Integral x );     \fB(2)\fP \fI(since C++17)\fP

   1) Computes the non-associated Laguerre polynomials of the degree n and argument x
   4) A set of overloads or a function template accepting an argument of any integral
   type. Equivalent to \fB(1)\fP after casting the argument to double.

.SH Parameters

   n - the degree of the polymonial, a value of unsigned integer type
   x - the argument, a value of a floating-point or integral type

.SH Return value

   If no errors occur, value of the nonassociated Laguerre polynomial of x, that is

   e^x
   n!

   dn
   dxn

   (xn
   e^-x), is returned.

.SH Error handling

   Errors may be reported as specified in math_errhandling

     * If the argument is NaN, NaN is returned and domain error is not reported
     * If x is negative, a domain error may occur
     * If n is greater or equal than 128, the behavior is implementation-defined

.SH Notes

   Implementations that do not support C++17, but support ISO 29124:2010, provide this
   function if __STDCPP_MATH_SPEC_FUNCS__ is defined by the implementation to a value
   at least 201003L and if the user defines __STDCPP_WANT_MATH_SPEC_FUNCS__ before
   including any standard library headers.

   Implementations that do not support ISO 29124:2010 but support TR 19768:2007 (TR1),
   provide this function in the header tr1/cmath and namespace std::tr1

   An implementation of this function is also available in boost.math

   The Laguerre polynomials are the polynomial solutions of the equation xy,,
   +(1-x)y,
   +ny = 0

   The first few are:

     * laguerre(0, x) = 1
     * laguerre(1, x) = -x + 1
     * laguerre(2, x) =

       1
       2

       [x2
       -4x+2]
     * laguerre(3, x) =

       1
       6

       [-x3
       -9x2
       -18x+6]

.SH Example

   
// Run this code

 #define __STDCPP_WANT_MATH_SPEC_FUNCS__ 1
 #include <cmath>
 #include <iostream>
 double L1(double x) { return -x + 1; }
 double L2(double x) { return 0.5*(x*x-4*x+2); }
 int main()
 {
     // spot-checks
     std::cout << std::laguerre(1, 0.5) << '=' << L1(0.5) << '\\n'
               << std::laguerre(2, 0.5) << '=' << L2(0.5) << '\\n';
 }

.SH Output:

 0.5=0.5
 0.125=0.125

.SH See also

   assoc_laguerre
   assoc_laguerref
   assoc_laguerrel associated Laguerre polynomials
   \fI(C++17)\fP         \fI(function)\fP 
   \fI(C++17)\fP
   \fI(C++17)\fP

.SH External links

   Weisstein, Eric W. "Laguerre Polynomial." From MathWorld--A Wolfram Web Resource.
