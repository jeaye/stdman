.TH std::shuffle_order_engine 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::shuffle_order_engine \- std::shuffle_order_engine

.SH Synopsis
   Defined in header <random>
   template<

       class Engine,              \fI(since C++11)\fP
       std::size_t K

   > class shuffle_order_engine;

   shuffle_order_engine is a random number engine adaptor that shuffles the random
   numbers generated by the base engine. It maintains a table of size K and delivers a
   randomly selected number from that table when requested, replacing it with a number
   generated by the base engine.

   The following typedef defines the random number engine with one commonly used
   parameter set:

   Defined in header <random>
   Type    Definition
   knuth_b std::shuffle_order_engine<std::minstd_rand0, 256>

.SH Template parameters

   Engine  -  the type of the wrapped engine
   K       -  the size of the internal table. Must be greater than 0
.SH Type requirements
   -
   Engine must meet the requirements of RandomNumberEngine.

.SH Member types

   Member type Definition
   result_type Engine::result_type

.SH Member functions

   constructor   constructs the engine adaptor
                 \fI(public member function)\fP 
   seed          sets the state of the underlying engine
                 \fI(public member function)\fP 
   base          returns the underlying engine
                 \fI(public member function)\fP 
.SH Generation
                 advances the state of the underlying engine and returns the generated
   operator()    value
                 \fI(public member function)\fP 
   discard       advances the adaptor's state by a specified amount
                 \fI(public member function)\fP 
.SH Characteristics
   min           gets the smallest possible value in the output range of the underlying
   \fB[static]\fP      engine.
                 \fI(public static member function)\fP 
   max           gets the largest possible value in the output range of the underlying
   \fB[static]\fP      engine.
                 \fI(public static member function)\fP 

.SH Non-member functions

   operator== compares the internal states of the adaptors and underlying engines
   operator!= \fI(function)\fP 
   operator<< performs stream input and output on pseudo-random number engine adaptor
   operator>> \fI(function)\fP 

.SH Member objects

   constexpr size_t table_size the size of the internal table, K
   \fB[static]\fP                    \fI(public static member constant)\fP
