.TH std::experimental::ranges::Regular 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::ranges::Regular \- std::experimental::ranges::Regular

.SH Synopsis
   Defined in header <experimental/ranges/concepts>
   template <class T>
   concept bool Regular = ranges::Semiregular<T> &&                         (ranges TS)
   ranges::EqualityComparable<T>;

   The Regular concept specifies that a type is regular, that is, it is copyable,
   default constructible, and equality comparable. It is satisfied by types that behave
   similarly to built-in types like int, and is comparable with ==.
