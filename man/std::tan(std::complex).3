.TH std::tan(std::complex) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::tan(std::complex) \- std::tan(std::complex)

.SH Synopsis
   Defined in header <complex>
   template< class T >
   complex<T> tan( const complex<T>& z );

   Computes complex tangent of a complex value z.

.SH Parameters

   z - complex value

.SH Return value

   If no errors occur, the complex tangent of z is returned.

   Errors and special cases are handled as if the operation is implemented by -i *
   std::tanh(i*z), where i is the imaginary unit.

.SH Notes

   Tangent is an analytical function on the complex plain and has no branch cuts. It is
   periodic with respect to the real component, with period πi, and has poles of the
   first order along the real line, at coordinates (π(1/2 + n), 0). However no common
   floating-point representation is able to represent π/2 exactly, thus there is no
   value of the argument for which a pole error occurs.

   Mathematical definition of the tangent is tan z =

   i(e-iz
   -eiz
   )
   e-iz
   +eiz

.SH Example

   
// Run this code

 #include <iostream>
 #include <cmath>
 #include <complex>
  
 int main()
 {
     std::cout << std::fixed;
     std::complex<double> z(1, 0); // behaves like real tangent along the real line
     std::cout << "tan" << z << " = " << std::tan(z)
               << " ( tan(1) = " << std::tan(1) << ")\\n";
  
     std::complex<double> z2(0, 1); // behaves like tanh along the imaginary line
     std::cout << "tan" << z2 << " = " << std::tan(z2)
               << " (tanh(1) = " << std::tanh(1) << ")\\n";
 }

.SH Output:

 tan(1.000000,0.000000) = (1.557408,0.000000) ( tan\fB(1)\fP = 1.557408)
 tan(0.000000,1.000000) = (0.000000,0.761594) (tanh\fB(1)\fP = 0.761594)

.SH See also

   sin(std::complex)  computes sine of a complex number (sin(z))
                      \fI(function template)\fP 
   cos(std::complex)  computes cosine of a complex number (cos(z))
                      \fI(function template)\fP 
   atan(std::complex) computes arc tangent of a complex number (arctan(z))
   \fI(C++11)\fP            \fI(function template)\fP 
   tan                computes tangent (tan(x))
                      \fI(function)\fP 
   tan(std::valarray) applies the function std::tan to each element of valarray
                      \fI(function template)\fP 
   C documentation for
   ctan
