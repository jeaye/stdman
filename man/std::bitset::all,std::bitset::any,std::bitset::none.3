.TH std::bitset::all,std::bitset::any,std::bitset::none 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::bitset::all,std::bitset::any,std::bitset::none \- std::bitset::all,std::bitset::any,std::bitset::none

.SH Synopsis
   bool all() const;  \fB(1)\fP \fI(since C++11)\fP
   bool any() const;  \fB(2)\fP
   bool none() const; \fB(3)\fP

   Checks if all, any or none of the bits are set to true.

   1) Checks if all bits are set to true
   2) Checks if any bits are set to true
   3) Checks if none of the bits are set to true

.SH Parameters

   \fI(none)\fP

.SH Return value

   1) true if all bits are set to true, otherwise false
   2) true if any of the bits are set to true, otherwise false
   3) true if none of the bits are set to true, otherwise false

.SH Exceptions

   \fI(none)\fP                    \fI(until C++11)\fP
   noexcept specification:  
   noexcept                  \fI(since C++11)\fP
     

.SH Example

   
// Run this code

 #include <iostream>
 #include <bitset>
  
 int main()
 {
     std::bitset<4> b1("0000");
     std::bitset<4> b2("0101");
     std::bitset<4> b3("1111");
  
     std::cout << "bitset\\t" << "all\\t" << "any\\t" << "none\\n";
     std::cout << b1 << '\\t' << b1.all() << '\\t' << b1.any() << '\\t' << b1.none() << '\\n';
     std::cout << b2 << '\\t' << b2.all() << '\\t' << b2.any() << '\\t' << b2.none() << '\\n';
     std::cout << b3 << '\\t' << b3.all() << '\\t' << b3.any() << '\\t' << b3.none() << '\\n';
 }

.SH Output:

 bitset  all     any     none
 0000    0       0       1
 0101    0       1       0
 1111    1       1       0

.SH Category:

     * unconditionally noexcept

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
