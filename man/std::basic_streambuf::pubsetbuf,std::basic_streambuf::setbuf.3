.TH std::basic_streambuf::pubsetbuf,std::basic_streambuf::setbuf 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_streambuf::pubsetbuf,std::basic_streambuf::setbuf \- std::basic_streambuf::pubsetbuf,std::basic_streambuf::setbuf

.SH Synopsis
   basic_streambuf<CharT, Traits>* pubsetbuf( char_type* s, std::streamsize n )    \fB(1)\fP
   protected:
   virtual basic_streambuf<CharT, Traits>* setbuf( char_type* s, std::streamsize n \fB(2)\fP
   )

   1) Calls setbuf(s, n) of the most derived class
   2) The base class version of this function has no effect. The derived classes may
   override this function to allow removal or replacement of the controlled character
   sequence (the buffer) with a user-provided array, or for any other
   implementation-specific purpose.

.SH Parameters

   s - pointer to the first byte in the user-provided buffer
   n - the number of bytes in the user-provided buffer

.SH Return value

   1) The return value of setbuf(s, n)
   2) this

.SH Example

   provide a 10k buffer for reading. On linux, the strace utility may be used to
   observe the actual number of bytes read

   
// Run this code

 #include <fstream>
 #include <iostream>
 #include <string>
  
 int main()
 {
     int cnt = 0;
     std::ifstream file;
     char buf[10241];
  
     file.rdbuf()->pubsetbuf(buf, sizeof buf);
  
     file.open("/usr/share/dict/words");
  
     for (std::string line; getline(file, line);) {
         cnt++;
     }
  
     std::cout << cnt << '\\n';
 }

.SH See also

   setbuf    attempts to replace the controlled character sequence with an array
   \fB[virtual]\fP \fI(virtual protected member function of std::basic_stringbuf)\fP 
   setbuf    provides user-supplied buffer or turns this filebuf unbuffered
   \fB[virtual]\fP \fI(virtual protected member function of std::basic_filebuf)\fP 
   setbuf    attempts to replace the controlled character sequence with an array
   \fB[virtual]\fP \fI(virtual protected member function of std::strstreambuf)\fP 
   setbuf    sets the buffer for a file stream
             \fI(function)\fP 
