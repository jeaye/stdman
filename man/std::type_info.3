.TH std::type_info 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::type_info \- std::type_info

.SH Synopsis
   Defined in header <typeinfo>
   class type_info;

   The class type_info holds implementation-specific information about a type,
   including the name of the type and means to compare two types for equality or
   collating order. This is the class returned by the typeid operator.

   The type_info class is neither CopyConstructible nor CopyAssignable.

.SH Member functions

   constructor   has neither default nor copy constructors
   [deleted]     \fI(public member function)\fP
   destructor    derived objects are safe to delete through pointer-to-base
   \fB[virtual]\fP     \fI(virtual public member function)\fP
   operator=     can not be copy-assigned
   [deleted]     \fI(public member function)\fP
   operator==    checks whether the objects refer to the same type
   operator!=    \fI(public member function)\fP 
                 checks whether the referred type precedes referred type of another
                 type_index
   before        object in the implementation defined order, i.e. orders the referred
                 types
                 \fI(public member function)\fP 
   hash_code     returns a value which is identical for the same types
   \fI(C++11)\fP       \fI(public member function)\fP 
   name          implementation defined name of the type
                 \fI(public member function)\fP 

.SH See also

   type_index wrapper around a type_info object, that can be used as index in
   \fI(C++11)\fP    associative and unordered associative containers
              \fI(class)\fP 
