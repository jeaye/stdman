.TH std::out_of_range 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::out_of_range \- std::out_of_range

.SH Synopsis
   Defined in header <stdexcept>
   class out_of_range;

   Defines a type of object to be thrown as exception. It reports errors that are
   consequence of attempt to access elements out of defined range.

   It may be thrown by the member functions of std::bitset and std::basic_string, by
   std::stoi and std::stod families of functions, and by the bounds-checked member
   access functions (e.g. std::vector::at and std::map::at)

   std-out of range-inheritance.svg
   About this image

                                   Inheritance diagram

.SH Member functions

   constructor   constructs the exception object
                 \fI(public member function)\fP 

   

std::out_of_range::out_of_range

   explicit out_of_range( const std::string& what_arg ); \fB(1)\fP
   explicit out_of_range( const char* what_arg );        \fB(2)\fP \fI(since C++11)\fP

   Constructs the exception object with what_arg as explanatory string that can be
   accessed through what().

   Because copying std::exception is not permitted to throw exceptions, this message is
   typically stored internally as a separately-allocated reference-counted string. This
   is also why there is no constructor taking std::string&&: it would have to copy the
   content anyway.

.SH Parameters

   what_arg - explanatory string

.SH Exceptions

   May throw std::bad_alloc

Inherited from std::exception

.SH Member functions

   destructor   destroys the exception object
   \fB[virtual]\fP    \fI(virtual public member function of std::exception)\fP 
   what         returns an explanatory string
   \fB[virtual]\fP    \fI(virtual public member function of std::exception)\fP 

.SH Notes

   The standard error condition std::errc::result_out_of_range typically indicates the
   condition where the result, rather than the input, is out of range, and is more
   closely related to std::range_error and ERANGE.

.SH See also

   at accesses the specified character with bounds checking
      \fI(public member function of std::basic_string)\fP 
