.TH std::iscntrl(std::locale) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::iscntrl(std::locale) \- std::iscntrl(std::locale)

.SH Synopsis
   Defined in header <locale>
   template< class charT >
   bool iscntrl( charT ch, const locale& loc );

   Checks if the given character is classified as a control character by the given
   locale's std::ctype facet.

.SH Parameters

   ch  - character
   loc - locale

.SH Return value

   Returns true if the character is classified as a control character, false otherwise.

.SH Possible implementation

   template< class charT >
   bool iscntrl( charT ch, const std::locale& loc ) {
       return std::use_facet<std::ctype<charT>>(loc).is(std::ctype_base::cntrl, ch);
   }

.SH Example

   Demonstrates the use of iscntrl() with different locales (OS-specific).

   
// Run this code

 #include <iostream>
 #include <locale>
 int main()
 {
     const wchar_t CCH = L'\\u0094'; // Destructive Backspace in Unicode
  
     std::locale loc1("C");
     std::cout << "iscntrl(CCH, C locale) returned "
               << std::boolalpha << std::iscntrl(CCH, loc1) << '\\n';
  
     std::locale loc2("en_US.UTF8");
     std::cout << "iscntrl(CCH, Unicode locale) returned "
               << std::boolalpha << std::iscntrl(CCH, loc2) << '\\n';
 }

.SH Output:

 iscntrl(CCH, C locale) returned false
 iscntrl(CCH, Unicode locale) returned true

.SH See also

   iscntrl  checks if a character is a control character
            \fI(function)\fP 
   iswcntrl checks if a wide character is a control character
            \fI(function)\fP 
