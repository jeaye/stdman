.TH std::basic_syncbuf::basic_syncbuf 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_syncbuf::basic_syncbuf \- std::basic_syncbuf::basic_syncbuf

.SH Synopsis
   explicit basic_syncbuf( streambuf_type* obuf = nullptr )  \fB(1)\fP
   : basic_syncbuf( obuf, Allocator() ) {}
   basic_syncbuf( streambuf_type* obuf, const Allocator& a); \fB(2)\fP
   basic_syncbuf( basic_syncbuf&& rhs);                      \fB(3)\fP

   1,2) Creates an instance of std::basic_syncbuf with emit-on-sync policy set to
   false, wrapped streambuffer set to obuf, and using a as the allocator for temporary
   storage.
   3) Move constructor: move-constructs a std::basic_syncbuf object by moving all
   contents from another std::basic_syncbuf object rhs, including the temporary
   storage, the wrapped stream pointer, policy, and all other state (such as the mutex
   pointer). After move, rhs is not associated with a stream, and
   rhs.get_wrapped()==nullptr. The put area member pointers of the base class
   std::basic_streambuf of rhs are guaranteed to be null. Destroying a moved-from rhs
   will not produce any output.

.SH Parameters

   obuf - pointer to the std::basic_streambuf to wrap
   a    - the allocator to use for temporary storage
   rhs  - another std::basic_syncbuf to move from

.SH Exceptions

   1,2) May throw std::bad_alloc from the constructor of the internal temporary storage
   or std::system_error from the mutex construction.

.SH Notes

   Typically called by the appropriate constructors of std::basic_osyncstream.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   sync      synchronizes the buffers with the associated character sequence
   \fB[virtual]\fP \fI(virtual protected member function of std::basic_streambuf)\fP 
   emit      atomically transmits the entire internal buffer to the wrapped streambuf
             \fI(public member function)\fP 

.SH Category:

     * Todo no example
