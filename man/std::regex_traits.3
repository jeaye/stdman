.TH std::regex_traits 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::regex_traits \- std::regex_traits

.SH Synopsis
   Defined in header <regex>
   template< class CharT >    \fI(since C++11)\fP
   class regex_traits;

   The type trait template regex_traits supplies std::basic_regex with the set of types
   and functions necessary to operate on the type CharT.

   Since many of regex operations are locale-sensitive (when
   std::regex_constants::collate flag is set), the regex_traits class typically holds
   an instance of a std::locale as a private member.

.SH Standard specializations

   Two specializations of std::regex_traits are defined by the standard library:

   std::regex_traits<char>
   std::regex_traits<wchar_t>

   These specializations make it possible to use std::basic_regex<char> (aka
   std::regex) and std::basic_regex<wchar_t> (aka std::wregex). To use std::basic_regex
   with other character types (for example, char32_t), a user-provided trait class must
   be used.

.SH Member types

   Type            Definition
   char_type       CharT
   string_type     std::basic_string<CharT>
   locale_type     The locale used for localized behavior in the regular expression.
                   Must be CopyConstructible
                   Represents a character classification and is capable of holding an
   char_class_type implementation specific set returned by lookup_classname. Must be a
                   BitmaskType.

.SH Member functions

   constructor        constructs the regex_traits object
                      \fI(public member function)\fP 
   length             calculates the length of a null-terminated character string
   \fB[static]\fP           \fI(public static member function)\fP 
   translate          determines the equivalence key for a character
                      \fI(public member function)\fP 
   translate_nocase   determines the case-insensitive equivalence key for a character
                      \fI(public member function)\fP 
                      determines the sort key for the given string, used to provide
   transform          collation order
                      \fI(public member function)\fP 
                      determines the primary sort key for the character sequence, used
   transform_primary  to determine equivalence class
                      \fI(public member function)\fP 
   lookup_collatename gets a collation element by name
                      \fI(public member function)\fP 
   lookup_classname   gets a character class by name
                      \fI(public member function)\fP 
   isctype            indicates membership in a localized character class
                      \fI(public member function)\fP 
                      translates the character representing a numeric digit into an
   value              integral value
                      \fI(public member function)\fP 
   imbue              sets the locale
                      \fI(public member function)\fP 
   getloc             gets the locale
                      \fI(public member function)\fP 
