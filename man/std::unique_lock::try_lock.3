.TH std::unique_lock::try_lock 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unique_lock::try_lock \- std::unique_lock::try_lock

.SH Synopsis
   bool try_lock();  \fI(since C++11)\fP

   Tries to lock the associated mutex without blocking. Effectively calls
   mutex()->try_lock().

   std::system_error is thrown if there is no associated mutex or if the mutex is
   already locked by this std::unique_lock.

.SH Parameters

   \fI(none)\fP

.SH Return value

   true if the ownership of the mutex has been acquired successfully, false otherwise.

.SH Exceptions

     * Any exceptions thrown by mutex()->try_lock() (Mutex types do not throw in
       try_lock, but a custom Lockable might)

     * If there is no associated mutex, std::system_error with an error code of
       std::errc::operation_not_permitted

     * If the mutex is already locked by this std::unique_lock, std::system_error with
       an error code of std::errc::resource_deadlock_would_occur

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   lock           locks the associated mutex
                  \fI(public member function)\fP 
                  attempts to lock the associated TimedLockable mutex, returns if the
   try_lock_for   mutex has been unavailable for the specified time duration
                  \fI(public member function)\fP 
                  tries to lock the associated TimedLockable mutex, returns if the
   try_lock_until mutex has been unavailable until specified time point has been
                  reached
                  \fI(public member function)\fP 
   unlock         unlocks the associated mutex
                  \fI(public member function)\fP 

.SH Category:

     * Todo no example
