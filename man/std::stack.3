.TH std::stack 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::stack \- std::stack

.SH Synopsis
   Defined in header <stack>
   template<

       class T,
       class Container = std::deque<T>

   > class stack;

   The std::stack class is a container adapter that gives the programmer the
   functionality of a stack - specifically, a FILO (first-in, last-out) data structure.

   The class template acts as a wrapper to the underlying container - only a specific
   set of functions is provided. The stack pushes and pops the element from the back of
   the underlying container, known as the top of the stack.

.SH Template parameters

               The type of the stored elements.
   T         - The behavior is undefined if T is not the same type as
               Container::value_type.
               \fI(since C++17)\fP
               The type of the underlying container to use to store the elements. The
               container must satisfy the requirements of SequenceContainer.
               Additionally, it must provide the following functions with the usual
               semantics:

   Container -   * back()
                 * push_back()
                 * pop_back()

               The standard containers std::vector, std::deque and std::list satisfy
               these requirements.

.SH Member types

   Member type     Definition
   container_type  Container 
   value_type      Container::value_type 
   size_type       Container::size_type 
   reference       Container::reference 
   const_reference Container::const_reference 

.SH Member functions

   constructor   constructs the stack
                 \fI(public member function)\fP 
   destructor    destructs the stack
                 \fI(public member function)\fP 
   operator=     assigns values to the container adaptor
                 \fI(public member function)\fP 
.SH Element access
   top           accesses the top element
                 \fI(public member function)\fP 
.SH Capacity
   empty         checks whether the underlying container is empty
                 \fI(public member function)\fP 
   size          returns the number of elements
                 \fI(public member function)\fP 
.SH Modifiers
   push          inserts element at the top
                 \fI(public member function)\fP 
   emplace       constructs element in-place at the top
   \fI(C++11)\fP       \fI(public member function)\fP 
   pop           removes the top element
                 \fI(public member function)\fP 
   swap          swaps the contents
                 \fI(public member function)\fP 
.SH Member objects
   Container c   the underlying container
                 \fI(protected member object)\fP 

.SH Non-member functions

   operator==
   operator!=
   operator<             lexicographically compares the values in the stack
   operator<=            \fI(function template)\fP 
   operator>
   operator>=
   std::swap(std::stack) specializes the std::swap algorithm
                         \fI(function template)\fP 

.SH Helper classes

   std::uses_allocator<std::stack> specializes the std::uses_allocator type trait
   \fI(C++11)\fP                         \fI(function template)\fP 

   Deduction guides\fI(since C++17)\fP
