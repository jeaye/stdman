.TH std::swap(std::unique_ptr) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::swap(std::unique_ptr) \- std::swap(std::unique_ptr)

.SH Synopsis
   template< class T, class Deleter >
   void swap( unique_ptr<T,Deleter>& lhs, unique_ptr<T,Deleter>& rhs )    \fI(since C++11)\fP
   noexcept;

   Specializes the std::swap algorithm for std::unique_ptr. Swaps the pointers of lhs
   and rhs. Calls lhs.swap(rhs).

   This function does not participate in overload resolution unless       \fI(since C++17)\fP
   std::is_swappable<D>::value is true.

.SH Parameters

   lhs, rhs - smart pointers whose contents to swap

.SH Return value

   \fI(none)\fP

.SH Complexity

   Constant

.SH See also

   swap swaps the values of two objects
        \fI(function template)\fP 
   swap swaps the contents
        \fI(public member function)\fP 
