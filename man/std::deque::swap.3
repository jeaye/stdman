.TH std::deque::swap 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::deque::swap \- std::deque::swap

.SH Synopsis
   void swap( deque& other );                            \fI(until C++17)\fP
   void swap( deque& other ) noexcept(/* see below */);  \fI(since C++17)\fP

   Exchanges the contents of the container with those of other. Does not invoke any
   move, copy, or swap operations on individual elements.

   All iterators and references remain valid. The past-the-end iterator is invalidated.

   If std::allocator_traits<allocator_type>::propagate_on_container_swap::value
   is true, then the allocators are exchanged using an unqualified call to       (since
   non-member swap. Otherwise, they are not swapped (and if get_allocator() !=   C++11)
   other.get_allocator(), the behavior is undefined).

.SH Parameters

   other - container to exchange the contents with

.SH Return value

   \fI(none)\fP

.SH Exceptions

   \fI(none)\fP                                                             \fI(until C++17)\fP
   noexcept specification:                                            \fI(since C++17)\fP
   noexcept(std::allocator_traits<Allocator>::is_always_equal::value)

.SH Complexity

   Constant.

.SH See also

   std::swap(std::deque) specializes the std::swap algorithm
                         \fI(function template)\fP 

.SH Category:

     * conditionally noexcept
