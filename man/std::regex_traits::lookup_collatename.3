.TH std::regex_traits::lookup_collatename 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::regex_traits::lookup_collatename \- std::regex_traits::lookup_collatename

.SH Synopsis
   template< class ForwardIt >
   string_type lookup_collatename( ForwardIt first, ForwardIt last ) const;

   If the character sequence [first, last) represents the name of a valid collating
   element in the currently imbued locale, returns the name of that collating element.
   Otherwise, returns an empty string.

   Collating elements are the symbols found in POSIX regular expressions between [. and
   .]. For example, [.a.] matches the character a in the C locale. [.tilde.] matches
   the character ~ in the C locale as well. [.ch.] matches the digraph ch in Czech
   locale, but generates std::regex_error with error code
   std::regex_constants::error_collate in most other locales.

.SH Parameters

   first, last - a pair of iterators which determines the sequence of characters that
                 represents a collating element name
.SH Type requirements
   -
   ForwardIt must meet the requirements of ForwardIterator.

.SH Return value

   The representation of the named collating element as a character string.

.SH Example

   
// Run this code

 #include <iostream>
 #include <string>
 #include <regex>
  
 struct noisy_traits : std::regex_traits<char> {
  
     template< class Iter >
     string_type lookup_collatename( Iter first, Iter last ) const {
         string_type result = regex_traits::lookup_collatename(first, last);
         std::cout << "regex_traits<>::lookup_collatename(\\""
                   << string_type(first, last)
                   << "\\") returns \\"" << result << "\\"\\n";
         return result;
     }
 };
  
 int main()
 {
     std::string str = "z|}a"; // C locale collation order: x,y,z,{,|,},~
     std::basic_regex<char, noisy_traits> re("[x-[.tilde.]]*a", std::regex::basic);
     std::cout << std::boolalpha << std::regex_match(str, re) << '\\n';
 }

.SH Output:

 regex_traits<>::lookup_collatename("tilde") returns "~"
 true
