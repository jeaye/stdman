.TH std::unordered_multiset::begin,std::unordered_multiset::cbegin 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unordered_multiset::begin,std::unordered_multiset::cbegin \- std::unordered_multiset::begin,std::unordered_multiset::cbegin

.SH Synopsis
   iterator begin() noexcept;               \fI(since C++11)\fP
   const_iterator begin() const noexcept;   \fI(since C++11)\fP
   const_iterator cbegin() const noexcept;  \fI(since C++11)\fP

   Returns an iterator to the first element of the container.

   If the container is empty, the returned iterator will be equal to end().

   range-begin-end.svg

.SH Parameters

   \fI(none)\fP

.SH Return value

   Iterator to the first element

.SH Complexity

   Constant

.SH Example

   
// Run this code

 #include <iostream>
 #include <iterator>
 #include <string>
 #include <unordered_set>
  
 int main() {
     const std::unordered_multiset<std::string> words = {
         "some", "words", "to", "count",
         "count", "these", "words"
     };
  
     for(auto it = words.begin(); it != words.end(); )
     {
         auto cnt = words.count(*it);
         std::cout << *it << ":\\t" << cnt << '\\n';
         std::advance(it, cnt); // all cnt elements have equivalent keys
     }
 }

.SH Possible output:

 some:   1
 words:  2
 to:     1
 count:  2
 these:  1

.SH See also

   end  returns an iterator to the end
   cend \fI(public member function)\fP 
