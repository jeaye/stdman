.TH std::resetiosflags 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::resetiosflags \- std::resetiosflags

.SH Synopsis
   Defined in header <iomanip>
   /*unspecified*/ resetiosflags( std::ios_base::fmtflags mask );

   When used in an expression out << resetiosflags(mask) or in >> resetiosflags(mask),
   clears all format flags of the stream out or in as specified by the mask.

.SH Parameters

   mask - bitmask of the flags to clear

.SH Return value

   Returns an object of unspecified type such that if str is the name of a stream of
   type std::basic_ostream<CharT, Traits> or std::basic_istream<CharT, Traits>, then
   the expression str << resetiosflags(mask) or str >> resetiosflags(mask) behaves as
   if the following code was executed:

   str.setf(std::ios_base::fmtflags\fB(0)\fP, mask);

.SH Example

   
// Run this code

 #include <sstream>
 #include <iostream>
 #include <iomanip>
 int main()
 {
     std::istringstream in("10 010 10 010 10 010");
     int n1, n2;
     in >> std::oct >> n1 >> n2;
     std::cout << "Parsing \\"10 010\\" with std::oct gives:  " << n1 << ' ' << n2 << '\\n';
     in >> std::dec >> n1 >> n2;
     std::cout << "Parsing \\"10 010\\" with std::dec gives:  " << n1 << ' ' << n2 << '\\n';
     in >> std::resetiosflags(std::ios_base::basefield) >> n1 >> n2;
     std::cout << "Parsing \\"10 010\\" with autodetect gives: " << n1 << ' ' << n2 << '\\n';
 }

.SH Output:

 Parsing "10 010" with std::oct gives:  8 8
 Parsing "10 010" with std::dec gives:  10 10
 Parsing "10 010" with autodetect gives: 10 8

.SH See also

   setf        sets specific format flag
               \fI(public member function of std::ios_base)\fP 
   setiosflags sets the specified ios_base flags
               \fI(function)\fP 
