.TH std::is_member_pointer 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::is_member_pointer \- std::is_member_pointer

.SH Synopsis
   Defined in header <type_traits>
   template< class T >              \fI(since C++11)\fP
   struct is_member_pointer;

   If T is pointer to non-static member object or a pointer to non-static member
   function, provides the member constant value equal true. For any other type, value
   is false.

.SH Template parameters

   T - a type to check

   Helper variable template

   template< class T >
   inline constexpr bool is_member_pointer_v =                            \fI(since C++17)\fP
   is_member_pointer<T>::value;

   

Inherited from std::integral_constant

.SH Member constants

   value    true if T is a member pointer type , false otherwise
   \fB[static]\fP \fI(public static member constant)\fP

.SH Member functions

   operator bool converts the object to bool, returns value
                 \fI(public member function)\fP
   operator()    returns value
   \fI(C++14)\fP       \fI(public member function)\fP

.SH Member types

   Type       Definition
   value_type bool
   type       std::integral_constant<bool, value>

.SH Possible implementation

   template< class T >
   struct is_member_pointer_helper         : std::false_type {};
    
   template< class T, class U >
   struct is_member_pointer_helper<T U::*> : std::true_type {};
    
   template< class T >
   struct is_member_pointer :
       is_member_pointer_helper<typename std::remove_cv<T>::type> {};

.SH Example

    This section is incomplete
    Reason: simplify

   
// Run this code

 #include <iostream>
 #include <type_traits>
  
 int main() {
     class cls {};
     std::cout << (std::is_member_pointer<int(cls::*)>::value
                      ? "T is member pointer"
                      : "T is not a member pointer") << '\\n';
     std::cout << (std::is_member_pointer<int>::value
                      ? "T is member pointer"
                      : "T is not a member pointer") << '\\n';
 }

.SH Output:

 T is member pointer
 T is not a member pointer

.SH See also

   is_pointer                 checks if a type is a pointer type
   \fI(C++11)\fP                    \fI(class template)\fP 
   is_member_object_pointer   checks if a type is a pointer to a non-static member
   \fI(C++11)\fP                    object
                              \fI(class template)\fP 
   is_member_function_pointer checks if a type is a pointer to a non-static member
   \fI(C++11)\fP                    function
                              \fI(class template)\fP 

.SH Category:

     * Todo with reason
