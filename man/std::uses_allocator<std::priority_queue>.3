.TH std::uses_allocator<std::priority_queue> 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::uses_allocator<std::priority_queue> \- std::uses_allocator<std::priority_queue>

.SH Synopsis
   template< class T, class Container, class Compare,class Alloc >

   struct uses_allocator<priority_queue<T,Compare,Container>,Alloc> :  \fI(since C++11)\fP

       std::uses_allocator<Container, Alloc>::type { };

   Provides a transparent specialization of the std::uses_allocator type trait for
   std::priority_queue: the container adaptor uses allocator if and only if the
   underlying container does.

.SH Member constants

   value    true
   \fB[static]\fP \fI(public static member constant)\fP

.SH Member functions

   operator bool converts the object to bool, returns value
                 \fI(public member function)\fP
   operator()    returns value
   \fI(C++14)\fP       \fI(public member function)\fP

.SH Member types

   Type       Definition
   value_type bool
   type       std::integral_constant<bool, value>

.SH See also

   uses_allocator checks if the specified type supports uses-allocator construction
   \fI(C++11)\fP        \fI(class template)\fP 
