.TH std::experimental::make_ready_future 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::make_ready_future \- std::experimental::make_ready_future

.SH Synopsis
   Defined in header <experimental/future>
   template < class T >                                    \fB(1)\fP (concurrency TS)
   future<V /* see below */> make_ready_future(T&& value);
   future<void> make_ready_future();                       \fB(2)\fP (concurrency TS)

   1) If std::decay_t<T> is std::reference_wrapper<X>, then the type V is X&,
   otherwise, V is std::decay_t<T>.
   Creates a shared state of type V that is immediately ready, with the result
   constructed from std::forward<T>(value), then returns a std::experimental::future
   associated with that shared state.
   2) Creates a shared state of type void that is immediately ready, then returns a
   std::experimental::future associated with that shared state.

.SH Return value

   A std::experimental::future associated with the shared state that is created.

.SH See also

   make_exceptional_future produces a future that is ready immediately and holds the
   (concurrency TS)        given exception
                           \fI(function template)\fP 
