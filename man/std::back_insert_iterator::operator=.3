.TH std::back_insert_iterator::operator= 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::back_insert_iterator::operator= \- std::back_insert_iterator::operator=

.SH Synopsis
   back_insert_iterator<Container>&                                      \fI(until C++11)\fP
       operator=( typename Container::const_reference value );
   back_insert_iterator<Container>&                              \fB(1)\fP     \fI(since C++11)\fP
       operator=( const typename Container::value_type& value );
   back_insert_iterator<Container>&                                  \fB(2)\fP \fI(since C++11)\fP
       operator=( typename Container::value_type&& value );

   Inserts the given value value to the container.

   1) Results in container->push_back(value)
   2) Results in container->push_back(std::move(value))

.SH Parameters

   value - the value to insert

.SH Return value

   *this

.SH Example

    This section is incomplete
    Reason: no example

.SH Example

   
// Run this code

 #include <iostream>
 #include <iterator>
 #include <vector>
  
 void print(const std::vector<int>& vec)
 {
     std::cout << "[";
     for (auto& elem : vec)
         std::cout << " " << elem;
     std::cout << " ]\\n";
 }
  
 int main()
 {
     std::vector<int> vec;
     std::back_insert_iterator< std::vector<int> > it(vec);
  
     for (int i=0; i<10; ++i)
         it = i; // calls vec.push_back(i)
  
     print(vec);
 }

.SH Output:

 [ 0 1 2 3 4 5 6 7 8 9 ]

.SH Category:

     * Todo no example
