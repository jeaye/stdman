.TH std::hash<std::variant> 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::hash<std::variant> \- std::hash<std::variant>

.SH Synopsis
   Defined in header <variant>
   template <class... Types>             \fI(since C++17)\fP
   struct hash<std::variant<Types...>>;

   The template specialization of std::hash for the std::variant template allows users
   to obtain hashes of variant objects.

   The specialization std::hash<std::variant<Types...>> is enabled (see std::hash) if
   every specialization in std::hash<std::remove_const_t<Types>>... is enabled, and is
   disabled otherwise.

   The member functions of this specialization are not guaranteed to be noexcept.

.SH Template parameters

   Types - the types of the alternatives supported by the variant object

.SH Notes

   Unlike std::hash<std::optional>, hash of a variant does not typically equal the hash
   of the contained value; this makes it possible to distinguish std::variant<int, int>
   holding the same value as different alternatives.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   hash    hash function object
   \fI(C++11)\fP \fI(class template)\fP 

.SH Category:

     * Todo no example
