.TH std::filesystem::path::has_root_path,std::filesystem::path::has_root_name, 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::path::has_root_path,std::filesystem::path::has_root_name, \- std::filesystem::path::has_root_path,std::filesystem::path::has_root_name,

.SH Synopsis

   bool has_root_path() const;      \fB(1)\fP \fI(since C++17)\fP
   bool has_root_name() const;      \fB(2)\fP \fI(since C++17)\fP
   bool has_root_directory() const; \fB(3)\fP \fI(since C++17)\fP
   bool has_relative_path() const;  \fB(4)\fP \fI(since C++17)\fP
   bool has_parent_path() const;    \fB(5)\fP \fI(since C++17)\fP
   bool has_filename() const;       \fB(6)\fP \fI(since C++17)\fP
   bool has_stem() const;           \fB(7)\fP \fI(since C++17)\fP
   bool has_extension() const;      \fB(8)\fP \fI(since C++17)\fP

   Checks whether the path contains the corresponding path element.

   1) Checks whether root_path() is empty.
   2) Checks whether root_name() is empty.
   3) Checks whether root_directory() is empty.
   4) Checks whether relative_path() is empty.
   5) Checks whether parent_path() is empty.
   6) Checks whether filename() is empty.
   7) Checks whether stem() is empty.
   8) Checks whether extension() is empty.

.SH Parameters

   \fI(none)\fP

.SH Return value

   true if the corresponding path component is not empty, false otherwise.

.SH Exceptions

   \fI(none)\fP

.SH See also

   empty checks if the path is empty
         \fI(public member function)\fP 
