.TH std::chrono::duration::count 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::duration::count \- std::chrono::duration::count

.SH Synopsis
   constexpr rep count() const;

   Returns the number of ticks for this duration.

.SH Parameters

   \fI(none)\fP

.SH Return value

   The number of ticks for this duration.

.SH Example

   
// Run this code

 #include <chrono>
 #include <iostream>
 int main()
 {
     std::chrono::milliseconds ms{3}; // 3 milliseconds
     // 6000 microseconds constructed from 3 milliseconds
     std::chrono::microseconds us = 2*ms;
     // 30Hz clock using fractional ticks
     std::chrono::duration<double, std::ratio<1, 30>> hz30(3.5);
  
     std::cout <<  "3 ms duration has " << ms.count() << " ticks\\n"
               <<  "6000 us duration has " << us.count() << " ticks\\n"
               <<  "3.5 30Hz duration has " << hz30.count() << " ticks\\n";
 }

.SH Output:

 3 ms duration has 3 ticks
 6000 us duration has 6000 ticks
 3.5 30Hz duration has 3.5 ticks

.SH See also

   duration_cast converts a duration to another, with a different tick interval
                 \fI(function template)\fP 
