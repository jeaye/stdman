.TH std::shared_lock::try_lock_until 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::shared_lock::try_lock_until \- std::shared_lock::try_lock_until

.SH Synopsis
   template< class Clock, class Duration >
   bool try_lock_until( const std::chrono::time_point<Clock,Duration>&    \fI(since C++14)\fP
   timeout_time );

   Tries to lock the associated mutex in shared mode. Blocks until specified
   timeout_time has been reached or the lock is acquired, whichever comes first. On
   successful lock acquisition returns true, otherwise returns false. May block for
   longer than until timeout_time has been reached.

   Effectively calls mutex()->try_lock_shared_until(timeout_time)

   std::system_error is thrown if there is no associated mutex or if the mutex is
   already locked.

.SH Parameters

   timeout_time - maximum time point to block until

.SH Return value

   true if the ownership of the mutex has been acquired successfully, false otherwise.

.SH Exceptions

     * Any exceptions thrown by mutex()->try_lock_shared_for(timeout_time)

     * If there is no associated mutex, std::system_error with an error code of
       std::errc::operation_not_permitted

     * If the mutex is already locked, std::system_error with an error code of
       std::errc::resource_deadlock_would_occur

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   lock           locks the associated mutex
                  \fI(public member function)\fP 
   try_lock       tries to lock the associated mutex
                  \fI(public member function)\fP 
   try_lock_for   tries to lock the associated mutex, for the specified duration
                  \fI(public member function)\fP 
   unlock         unlocks the associated mutex
                  \fI(public member function)\fP 
                  tries to lock the associated TimedLockable mutex, returns if the
   try_lock_until mutex has been unavailable until specified time point has been
                  reached
                  \fI(public member function of std::unique_lock)\fP 

.SH Category:

     * Todo no example
