.TH std::bitset::reference 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::bitset::reference \- std::bitset::reference

.SH Synopsis
   class reference;

   The std::bitset class includes std::bitset::reference as a publicly-accessible
   nested class. This class is used as a proxy object to allow users to interact with
   individual bits of a bitset, since standard C++ types (like references and pointers)
   are not built with enough precision to specify individual bits.

   The primary use of std::bitset::reference is to provide an l-value that can be
   returned from operator[].

   Any reads or writes to a bitset that happen via a std::bitset::reference potentially
   read or write to the entire underlying bitset.

.SH Member functions

   constructor   constructs the reference. Accessible only to std::bitset itself
                 (private member function)
   destructor    destroys the reference
                 \fI(public member function)\fP
   operator=     assigns a bool to the referenced bit
                 \fI(public member function)\fP
   operator bool returns the referenced bit
                 \fI(public member function)\fP 
   operator ~    returns inverted referenced bit
                 \fI(public member function)\fP
   flip          flips the referenced bit
                 \fI(public member function)\fP

std::bitset<N>::reference::~reference

   ~reference()

   Destroys the reference.

std::bitset<N>::reference::operator=

   reference& operator=( bool x );
   reference& operator=( const reference& x );

   Assigns a value to the referenced bit.

.SH Parameters

   x - value to assign

.SH Return value

   *this

.SH Exceptions

   \fI(none)\fP                    \fI(until C++11)\fP
   noexcept specification:  
   noexcept                  \fI(since C++11)\fP
     

std::bitset<N>::reference::operator bool

   operator bool() const;

   Returns the value of the referenced bit.

.SH Parameters

   \fI(none)\fP

.SH Return value

   The referenced bit.

.SH Exceptions

   \fI(none)\fP                    \fI(until C++11)\fP
   noexcept specification:  
   noexcept                  \fI(since C++11)\fP
     

std::bitset<N>::reference::operator~

   bool operator~() const;

   Returns the inverse of the referenced bit.

.SH Parameters

   \fI(none)\fP

.SH Return value

   The inverse of the referenced bit.

.SH Exceptions

   \fI(none)\fP                    \fI(until C++11)\fP
   noexcept specification:  
   noexcept                  \fI(since C++11)\fP
     

std::bitset<N>::reference::flip

   reference& flip();

   Inverts the referenced bit.

.SH Parameters

   \fI(none)\fP

.SH Return value

   *this

.SH Exceptions

   \fI(none)\fP                    \fI(until C++11)\fP
   noexcept specification:  
   noexcept                  \fI(since C++11)\fP
     

.SH See also

   operator[] accesses specific bit
              \fI(public member function)\fP 

.SH Category:

     * unconditionally noexcept

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
