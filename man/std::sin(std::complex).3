.TH std::sin(std::complex) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::sin(std::complex) \- std::sin(std::complex)

.SH Synopsis
   Defined in header <complex>
   template< class T >
   complex<T> sin( const complex<T>& z );

   Computes complex sine of a complex value z.

.SH Parameters

   z - complex value

.SH Return value

   If no errors occur, the complex sine of z is returned.

   Errors and special cases are handled as if the operation is implemented by -i *
   std::sinh(i*z), where i is the imaginary unit.

.SH Notes

   The sine is an entire function on the complex plane, and has no branch cuts.

   Mathematical definition of the sine is sin z =

   eiz
   -e-iz
   2i

.SH Example

   
// Run this code

 #include <iostream>
 #include <cmath>
 #include <complex>
  
 int main()
 {
     std::cout << std::fixed;
     std::complex<double> z(1, 0); // behaves like real sine along the real line
     std::cout << "sin" << z << " = " << std::sin(z)
               << " ( sin(1) = " << std::sin(1) << ")\\n";
  
     std::complex<double> z2(0, 1); // behaves like sinh along the imaginary line
     std::cout << "sin" << z2 << " = " << std::sin(z2)
               << " (sinh(1) = " << std::sinh(1) << ")\\n";
 }

.SH Output:

 sin(1.000000,0.000000) = (0.841471,0.000000) ( sin\fB(1)\fP = 0.841471)
 sin(0.000000,1.000000) = (0.000000,1.175201) (sinh\fB(1)\fP = 1.175201)

.SH See also

   cos(std::complex)  computes cosine of a complex number (cos(z))
                      \fI(function template)\fP 
   tan(std::complex)  computes tangent of a complex number (tan(z))
                      \fI(function template)\fP 
   asin(std::complex) computes arc sine of a complex number (arcsin(z))
   \fI(C++11)\fP            \fI(function template)\fP 
   sin                computes sine (sin(x))
                      \fI(function)\fP 
   sin(std::valarray) applies the function std::sin to each element of valarray
                      \fI(function template)\fP 
   C documentation for
   csin
