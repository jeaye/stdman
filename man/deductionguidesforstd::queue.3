.TH deductionguidesforstd::queue 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
deductionguidesforstd::queue \- deductionguidesforstd::queue

.SH Synopsis
   Defined in header <queue>
   template<class Container>

   queue(Container)                                       \fB(1)\fP \fI(since C++17)\fP

     -> queue<typename Container::value_type, Container>;
   template<class Container, class Allocator>

   queue(Container, Allocator)                            \fB(2)\fP \fI(since C++17)\fP

     -> queue<typename Container::value_type, Container>;

   These deduction guides are provided for queue to allow deduction from underlying
   container type. This overload only participates in overload resolution if Alloc
   satisfies Allocator, and Container does not satisfy Allocator and, for overload \fB(2)\fP,
   if std::uses_allocator_v<Container, Allocator> is true

   Note: the extent to which the library determines that a type does not satisfy
   InputIterator is unspecified, except that as a minimum integral types do not qualify
   as input iterators. Likewise, the extent to which it determines that a type does not
   satisfy Allocator is unspecified, except that as a minimum the member type
   Alloc::value_type must exist and the expression
   std::declval<Alloc&>().allocate(std::size_t{}) must be well-formed when treated as
   an unevaluated operand.

.SH Example

   
// Run this code

 #include <vector>
 #include <queue>
 int main() {
    std::vector<int> v = {1,2,3,4};
    std::queue s{v};    // guide #1 deduces std::queue<int, vector<int>>
 }
