.TH std::codecvt::encoding,do_encoding 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::codecvt::encoding,do_encoding \- std::codecvt::encoding,do_encoding

.SH Synopsis
   Defined in header <locale>
   public:                          \fB(1)\fP
   int encoding() const;
   protected:                       \fB(2)\fP
   virtual int do_encoding() const;

   1) public member function, calls the member function do_encoding of the most derived
   class.
   2) if the encoding represented by this codecvt facet maps each internal character to
   the same, constant number of external characters, returns that number. If the
   encoding is variable-length (e.g. UTF-8 or UTF-16), returns 0. If the encoding is
   state-dependent, returns -1.

.SH Return value

   The exact number of externT characters that correspond to one internT character, if
   constant. 0 if the number varies, -1 if the encoding is state-dependent.

   The non-converting specialization std::codecvt<char, char, std::mbstate_t> returns 1

.SH Exceptions

   \fI(none)\fP                    \fI(until C++11)\fP
   noexcept specification:  
   noexcept                  \fI(since C++11)\fP
     

.SH Example

   
// Run this code

 #include <locale>
 #include <iostream>
  
 int main()
 {
     std::cout << "en_US.utf8 is a variable-length encoding, encoding() returns "
               << std::use_facet<std::codecvt<wchar_t, char, std::mbstate_t>>(
                     std::locale("en_US.utf8")
               ).encoding() << '\\n';
  
     std::cout << "zh_CN.gb18030 is also variable-length, encoding() == "
               << std::use_facet<std::codecvt<wchar_t, char, std::mbstate_t>>(
                     std::locale("zh_CN.gb18030")
               ).encoding() << '\\n';
  
     std::cout << "ru_RU.koi8r is a single-byte encoding encoding() == "
               << std::use_facet<std::codecvt<wchar_t, char, std::mbstate_t>>(
                     std::locale("ru_RU.koi8r")
               ).encoding() << '\\n';
 }

.SH Output:

 en_US.utf8 is a variable-length encoding, encoding() returns 0
 zh_CN.gb18030 is also variable-length, encoding() == 0
 ru_RU.koi8r is a single-byte encoding encoding() == 1

.SH See also

                 maximum number of bytes in a multibyte character in the current C
   MB_CUR_MAX    locale
                 (macro variable) 
   do_max_length returns the maximum number of externT characters that could be
   \fB[virtual]\fP     converted into a single internT character
                 \fI(virtual protected member function)\fP 

.SH Category:

     * unconditionally noexcept

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
