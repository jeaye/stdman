.TH std::bitset::to_ulong 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::bitset::to_ulong \- std::bitset::to_ulong

.SH Synopsis
   unsigned long to_ulong() const

   Converts the contents of the bitset to an unsigned long integer.

   The first bit of the bitset corresponds to the least significant digit of the number
   and the last bit corresponds to the most significant digit.

.SH Parameters

   \fI(none)\fP

.SH Return value

   the converted integer

.SH Exceptions

   throws std::overflow_error if the value can not be represented in unsigned long.

.SH Example

   
// Run this code

 #include <iostream>
 #include <bitset>
  
 int main()
 {
     for (unsigned long i = 0; i < 10; ++i) {
         std::bitset<5> b(i);
         std::bitset<5> b_inverted = ~b;
         std::cout << i << '\\t';
         std::cout << b << '\\t';
         std::cout << b_inverted << '\\t';
         std::cout << b_inverted.to_ulong() << '\\n';
     }
 }

.SH Output:

 0       00000   11111   31
 1       00001   11110   30
 2       00010   11101   29
 3       00011   11100   28
 4       00100   11011   27
 5       00101   11010   26
 6       00110   11001   25
 7       00111   11000   24
 8       01000   10111   23
 9       01001   10110   22

.SH See also

   to_string returns a string representation of the data
             \fI(public member function)\fP 
   to_ullong returns an unsigned long long integer representation of the data
   \fI(C++11)\fP   \fI(public member function)\fP 
