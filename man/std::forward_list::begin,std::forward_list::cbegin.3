.TH std::forward_list::begin,std::forward_list::cbegin 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::forward_list::begin,std::forward_list::cbegin \- std::forward_list::begin,std::forward_list::cbegin

.SH Synopsis
   iterator begin() noexcept;               \fI(since C++11)\fP
   const_iterator begin() const noexcept;   \fI(since C++11)\fP
   const_iterator cbegin() const noexcept;  \fI(since C++11)\fP

   Returns an iterator to the first element of the container.

   If the container is empty, the returned iterator will be equal to end().

   range-begin-end.svg

.SH Parameters

   \fI(none)\fP

.SH Return value

   Iterator to the first element

.SH Complexity

   Constant

.SH Example

   
// Run this code

 #include <iostream>
 #include <forward_list>
 #include <string>
  
 int main()
 {
         std::forward_list<int> ints {1, 2, 4, 8, 16};
         std::forward_list<std::string> fruits {"orange", "apple", "raspberry"};
         std::forward_list<char> empty;
  
         // Sums all integers in the forward_list ints (if any), printing only the result.
         int sum = 0;
         for (auto it = ints.cbegin(); it != ints.cend(); it++)
                 sum += *it;
         std::cout << "Sum of ints: " << sum << "\\n";
  
         // Prints the first fruit in the forward_list fruits, without checking if there is one.
         std::cout << "First fruit: " << *fruits.begin() << "\\n";
  
         if (empty.begin() == empty.end())
                 std::cout << "forward_list 'empty' is indeed empty.\\n";
 }

.SH Output:

 Sum of ints: 31
 First fruit: orange
 forward_list 'empty' is indeed empty.

.SH See also

   end  returns an iterator to the end
   cend \fI(public member function)\fP 
