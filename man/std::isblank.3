.TH std::isblank 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::isblank \- std::isblank

.SH Synopsis
   Defined in header <cctype>
   int isblank( int ch );      \fI(since C++11)\fP

   Checks if the given character is a blank character as classified by the currently
   installed C locale. Blank characters are whitespace characters used to separate
   words within a sentence. In the default C locale, only space (0x20) and horizontal
   tab (0x09) are classified as blank characters.

   The behavior is undefined if the value of ch is not representable as unsigned char
   and is not equal to EOF.

.SH Parameters

   ch - character to classify

.SH Return value

   Non-zero value if the character is a blank character, zero otherwise.

.SH Notes

   Like all other functions from <cctype>, the behavior of std::isblank is undefined if
   the argument's value is neither representable as unsigned char nor equal to EOF. To
   use these functions safely with plain chars (or signed chars), the argument should
   first be converted to unsigned char:

 bool my_isblank(char ch)
 {
     return std::isblank(static_cast<unsigned char>(ch));
 }

   Similarly, they should not be directly used with standard algorithms when the
   iterator's value type is char or signed char. Instead, convert the value to unsigned
   char first:

 int count_blanks(const std::string& s)
 {
     return std::count_if(s.begin(), s.end(),
                       // static_cast<int(*)(int)>(std::isblank)         // wrong
                       // [](int c){ return std::isblank(c); }           // wrong
                       // [](char c){ return std::isblank(c); }          // wrong
                          [](unsigned char c){ return std::isblank(c); } // correct
                         );
 }

.SH See also

   isblank(std::locale) checks if a character is classified as a blank character by a
   \fI(C++11)\fP              locale
                        \fI(function template)\fP 
   iswblank             checks if a wide character is a blank character
   \fI(C++11)\fP              \fI(function)\fP 
   C documentation for
   isblank

        ASCII values            characters    iscntrl  isprint  isspace  isblank  isgraph  ispunct  isalnum  isalpha  isupper  islower  isdigit  isxdigit
decimal hexadecimal   octal                   iswcntrl iswprint iswspace iswblank iswgraph iswpunct iswalnum iswalpha iswupper iswlower iswdigit iswxdigit
0–8     \\x0–\\x8     \\0–\\10    control codes   ≠0       0        0        0        0        0        0        0        0        0        0        0
                              (NUL, etc.)
9       \\x9         \\11       tab (\\t)        ≠0       0        ≠0       ≠0       0        0        0        0        0        0        0        0
                              whitespaces
10–13   \\xA–\\xD     \\12–\\15   (\\n, \\v, \\f,    ≠0       0        ≠0       0        0        0        0        0        0        0        0        0
                              \\r)
14–31   \\xE–\\x1F    \\16–\\37   control codes   ≠0       0        0        0        0        0        0        0        0        0        0        0
32      \\x20        \\40       space           0        ≠0       ≠0       ≠0       0        0        0        0        0        0        0        0
33–47   \\x21–\\x2F   \\41–\\57   !"#$%&'()*+,-./ 0        ≠0       0        0        ≠0       ≠0       0        0        0        0        0        0
48–57   \\x30–\\x39   \\60–\\71   0123456789      0        ≠0       0        0        ≠0       0        ≠0       0        0        0        ≠0       ≠0
58–64   \\x3A–\\x40   \\72–\\100  :;<=>?@         0        ≠0       0        0        ≠0       ≠0       0        0        0        0        0        0
65–70   \\x41–\\x46   \\101–\\106 ABCDEF          0        ≠0       0        0        ≠0       0        ≠0       ≠0       ≠0       0        0        ≠0
71–90   \\x47–\\x5A   \\107–\\132 GHIJKLMNOP      0        ≠0       0        0        ≠0       0        ≠0       ≠0       ≠0       0        0        0
                              QRSTUVWXYZ
91–96   \\x5B–\\x60   \\133–\\140 [\\]^_`          0        ≠0       0        0        ≠0       ≠0       0        0        0        0        0        0
97–102  \\x61–\\x66   \\141–\\146 abcdef          0        ≠0       0        0        ≠0       0        ≠0       ≠0       0        ≠0       0        ≠0
103–122 \\x67–\\x7A   \\147–\\172 ghijklmnop      0        ≠0       0        0        ≠0       0        ≠0       ≠0       0        ≠0       0        0
                              qrstuvwxyz
123–126 \\x7B–\\x7E   \\172–\\176 {|}~            0        ≠0       0        0        ≠0       ≠0       0        0        0        0        0        0
127     \\x7F        \\177      backspace       ≠0       0        0        0        0        0        0        0        0        0        0        0
                              character (DEL)
