.TH std::shared_future::shared_future 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::shared_future::shared_future \- std::shared_future::shared_future

.SH Synopsis
   shared_future();                             \fB(1)\fP \fI(since C++11)\fP
   shared_future( const shared_future& other ); \fB(2)\fP \fI(since C++11)\fP
   shared_future( std::future<T>&& other );     \fB(3)\fP \fI(since C++11)\fP
   shared_future( shared_future&& other );      \fB(4)\fP \fI(since C++11)\fP

   Constructs a new shared_future.

   1) Default constructor. Constructs an empty shared future, that doesn't refer to a
   shared state, that is valid() == false.
   2) Constructs a shared future that refers to the same shared state, if any, as
   other.
   3-4) Transfers the shared state held by other to *this. After the construction,
   other.valid() == false, and this->valid() returns the same value as other.valid()
   would have returned before the construction.

.SH Parameters

   other - another future object to initialize with

.SH Exceptions

   1)
   noexcept specification:  
   noexcept
     

   2) \fI(none)\fP                 \fI(until C++17)\fP
   2)
   noexcept specification:   \fI(since C++17)\fP
   noexcept
     

   3-4)
   noexcept specification:  
   noexcept
     
.SH Category:

     * unconditionally noexcept

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
