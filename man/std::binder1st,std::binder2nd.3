.TH std::binder1st,std::binder2nd 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::binder1st,std::binder2nd \- std::binder1st,std::binder2nd

.SH Synopsis
   template< class Fn >

   class binder1st : public std::unary_function<typename
   Fn::second_argument_type,
                                                typename
   Fn::result_type> {
   protected:
      
       Fn op;
       typename Fn::first_argument_type value;

   public:
                                                              \fB(1)\fP (deprecated in C++11)
       binder1st(const Fn& fn,                                    (removed in C++17)
                 const typename Fn::first_argument_type&
   value);

       typename Fn::result_type
           operator()(const typename
   Fn::second_argument_type& x) const;

       typename Fn::result_type
           operator()(typename Fn::second_argument_type& x)
   const;

   };
   template< class Fn >

   class binder2nd : public unary_function<typename
   Fn::first_argument_type,
                                           typename
   Fn::result_type> {
   protected:
       Fn op;
       typename Fn::second_argument_type value;
   public:
       binder2nd(const Fn& fn,                                    (deprecated in C++11)
                 const typename Fn::second_argument_type&     \fB(2)\fP (removed in C++17)
   value);

       typename Fn::result_type
           operator()(const typename Fn::first_argument_type&
   x) const;

       typename Fn::result_type
           operator()(typename Fn::first_argument_type& x)
   const;

   };

   A function object that binds an argument to a binary function.

   The value of the parameter is passed to the object at the construction time and
   stored within the object. Whenever the function object is invoked though operator(),
   the stored value is passed as one of the arguments, the other argument is passed as
   an argument of operator(). The resulting function object is an unary function.

   1) Binds the first parameter to the value value given at the construction of the
   object.
   2) Binds the second parameter to the value value given at the construction of the
   object.

.SH See also

   bind1st
   bind2nd               binds one argument to a binary function
   (deprecated in C++11) \fI(function template)\fP 
   (removed in C++17)
