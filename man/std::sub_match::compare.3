.TH std::sub_match::compare 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::sub_match::compare \- std::sub_match::compare

.SH Synopsis
   int compare( const sub_match& m ) const;   \fB(1)\fP \fI(since C++11)\fP
   int compare( const string_type& s ) const; \fB(2)\fP \fI(since C++11)\fP
   int compare( const value_type* c ) const;  \fB(3)\fP \fI(since C++11)\fP

   1) Compares two sub_match directly by comparing their underlying character
   sequences. Equivalent to str().compare(m.str()).
   2) Compares a sub_match with a std::basic_string. Equivalent to str().compare(s).
   3) Compares a sub_match with a null-terminated sequence of the underlying character
   type pointed to by s. Equivalent to str().compare(c).

   This function is infrequently used directly by application code. Instead, one of the
   non-member comparison operators are used.

.SH Parameters

   m - a reference to another sub_match
   s - a reference to a string to compare to
   c - a pointer to a null-terminated character sequence of the underlying value_type
       to compare to

.SH Return value

   A value less than zero if this sub_match is less than the other character sequence,
   zero if the both underlying character sequences are equal, greater than zero if this
   sub_match is greater than the other character sequence.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   compare              compares two strings
                        \fI(public member function of std::basic_string)\fP 
   str                  converts to the underlying string type
   operator string_type \fI(public member function)\fP 
   operator==
   operator!=
   operator<            compares two sub_match objects
   operator<=           \fI(function template)\fP 
   operator>
   operator>=

.SH Category:

     * Todo no example
