.TH std::towupper 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::towupper \- std::towupper

.SH Synopsis
   Defined in header <cwctype>
   std::wint_t towupper( std::wint_t ch );

   Converts the given wide character to uppercase, if possible.

   If the value of ch is neither representable as a wchar_t nor equal to the value of
   the macro WEOF, the behavior is undefined.

.SH Parameters

   ch - wide character to be converted

.SH Return value

   Uppercase version of ch or unmodified ch if no uppercase version is listed in the
   current C locale.

.SH Notes

   Only 1:1 character mapping can be performed by this function, e.g. the uppercase
   form of 'ß' is (with some exceptions) the two-character string "SS", which cannot be
   obtained by std::towupper.

   ISO 30112 specifies which pairs of Unicode characters are included in this mapping.

.SH Example

   The latin letter 'ſ' (U+017F) is the alternative lowercase form of 'S' (U+0053)

   
// Run this code

 #include <iostream>
 #include <cwctype>
 #include <clocale>
  
 int main()
 {
     wchar_t c = L'\\u017f'; // Latin small letter Long S ('ſ')
  
     std::cout << std::hex << std::showbase;
     std::cout << "in the default locale, towupper(" << (std::wint_t)c << ") = "
               << std::towupper(c) << '\\n';
     std::setlocale(LC_ALL, "en_US.utf8");
     std::cout << "in Unicode locale, towupper(" << (std::wint_t)c << ") = "
               << std::towupper(c) << '\\n';
 }

.SH Output:

 in the default locale, towupper(0x17f) = 0x17f
 in Unicode locale, towupper(0x17f) = 0x53

.SH See also

   towlower             converts a wide character to lowercase
                        \fI(function)\fP 
                        converts a character to uppercase using the ctype facet of a
   toupper(std::locale) locale
                        \fI(function template)\fP 
   toupper              converts a character to uppercase
                        \fI(function)\fP 
   C documentation for
   towupper
