.TH std::basic_osyncstream::basic_osyncstream 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_osyncstream::basic_osyncstream \- std::basic_osyncstream::basic_osyncstream

.SH Synopsis
   basic_osyncstream( streambuf_type* buf, const Allocator& a);                  \fB(1)\fP
   explicit basic_osyncstream( streambuf_type* buf )                             \fB(2)\fP
   : basic_osyncstream( buf, Allocator() ) {}
   basic_osyncstream( std::basic_ostream<CharT, Traits>& os, const Allocator& a) \fB(3)\fP
   : basic_osyncstream( os.rdbuf(), a) {}
   explicit basic_osyncstream( std::basic_ostream<CharT, Traits>& os )           \fB(4)\fP
   : basic_osyncstream( os, Allocator() ) {}
   basic_osyncstream( std::basic_osyncstream&& other) noexcept;                  \fB(5)\fP

   Constructs new synchronized output stream

   1-4) constructs the private member std::basic_syncbuf using the buffer and the
   allocator provided, and initializes the base class with a pointer to the member
   std::basic_streambuf.
   5) Move constructor. Move-constructs the std::basic_ostream base and the
   std::basic_syncbuf member from the corresponding subobjects of other, then calls
   set_rdbuf with the pointer to the newly-constructed underlying std::basic_syncbuf to
   complete the initialization of the base. After this move constructor,
   other.get_wrapped() returns nullptr and destruction of other produces no output.

.SH Parameters

   buf   - pointer to the std::basic_streambuf that will be wrapped
   os    - reference to a std::basic_ostream, whose rdbuf() will be wrapped
   a     - the allocator to pass to the constructor of the member std::basic_syncbuf
   other - another osyncstream to move from

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   constructor   constructs a basic_syncbuf object
                 \fI(public member function of std::basic_syncbuf)\fP 

.SH Category:

     * Todo no example
