.TH std::array::swap 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::array::swap \- std::array::swap

.SH Synopsis
   void swap( array& other ) noexcept(/* see below */);  \fI(since C++11)\fP

   Exchanges the contents of the container with those of other. Does not cause
   iterators and references to associate with the other container.

.SH Parameters

   other - container to exchange the contents with

.SH Return value

   \fI(none)\fP

.SH Exceptions

   noexcept specification:  
   noexcept(noexcept(swap(std::declval<T&>(), std::declval<T&>())))
                                                                          \fI(until C++17)\fP
   In the expression above, the identifier swap is looked up in the same
   manner as the one used by the C++17 std::is_nothrow_swappable trait.
   noexcept specification:                                                \fI(since C++17)\fP
   noexcept(std::is_nothrow_swappable<T>::value)

   For zero-sized arrays,
   noexcept specification:  
   noexcept
     

.SH Complexity

   Linear in size of the container.

   Defect reports

   The following behavior-changing defect reports were applied retroactively to
   previously published C++ standards.

      DR    Applied to          Behavior as published           Correct behavior
   LWG 2456 C++11      the noexcept specification is ill-formed made to work

.SH See also

   std::swap(std::array) specializes the std::swap algorithm
   \fI(C++11)\fP               \fI(function template)\fP 

   Categories:

     * conditionally noexcept
     * unconditionally noexcept
