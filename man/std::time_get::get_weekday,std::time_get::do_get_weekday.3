.TH std::time_get::get_weekday,std::time_get::do_get_weekday 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::time_get::get_weekday,std::time_get::do_get_weekday \- std::time_get::get_weekday,std::time_get::do_get_weekday

.SH Synopsis
   Defined in header <locale>
   public:

   iter_type get_weekday( iter_type beg, iter_type end, std::ios_base& str,        \fB(1)\fP

                          std::ios_base::iostate& err, std::tm* t) const;
   protected:

   virtual iter_type do_get_weekday( iter_type beg, iter_type end, std::ios_base&
   str,                                                                            \fB(2)\fP

                                     std::ios_base::iostate& err, std::tm* t)
   const;

   1) public member function, calls the protected virtual member function
   do_get_weekday of the most derived class.
   2) Reads successive characters from the sequence [beg, end) and parses out the
   weekday name (possibly abbreviated), using the default format for weekdays expected
   by this locale, which is the same format as "%a" as used by the functions
   std::get_time, time_get::get, and the POSIX function strptime()

   If it finds abbreviated name, followed by the characters that are valid for the full
   name, it continues reading until it consumes all the characters for the full name or
   finds a character that isn't expected, in which case parsing fails even if the first
   few characters were a valid abbreviation.

   The parsed weekday is stored in the std::tm field t->tm_wday.

   If the end iterator is reached before a valid weekday name is read, the function
   sets std::ios_base::eofbit in err. If a parsing error is encountered, the function
   sets std::ios_base::failbit in err.

.SH Parameters

   beg - iterator designating the start of the sequence to parse
   end - one past the end iterator for the sequence to parse
   str - a stream object that this function uses to obtain locale facets when needed,
         e.g. std::ctype to skip whitespace or std::collate to compare strings
   err - stream error flags object that is modified by this function to indicate errors
   t   - pointer to the std::tm object that will hold the result of this function call

.SH Return value

   Iterator pointing one past the last character in [beg, end) that was recognized as a
   part of a valid weekname.

.SH Notes

   This function is usually case-insensitive.

   If a parsing error is encountered, most implementations of this function leave *t
   unmodified.

.SH Example

   
// Run this code

 #include <iostream>
 #include <locale>
 #include <sstream>
 #include <iterator>
  
 void try_get_wday(const std::string& s)
 {
     std::cout << "Parsing the weekday out of '" << s <<
                  "' in the locale " << std::locale().name() << '\\n';
     std::istringstream str(s);
     std::ios_base::iostate err = std::ios_base::goodbit;
  
     std::tm t;
     std::istreambuf_iterator<char> ret =
         std::use_facet<std::time_get<char>>(str.getloc()).get_weekday(
             {str}, {}, str, err, &t
         );
     str.setstate(err);
     std::istreambuf_iterator<char> last{};
     if(str) {
         std::cout << "Successfully parsed, weekday number is " << t.tm_wday;
         if(ret != last) {
             std::cout << " Remaining content: ";
             std::copy(ret, last, std::ostreambuf_iterator<char>(std::cout));
         } else {
             std::cout << " the input was fully consumed";
         }
     } else {
         std::cout << "Parse failed. Unparsed string: ";
         std::copy(ret, last, std::ostreambuf_iterator<char>(std::cout));
     }
     std::cout << '\\n';
 }
 int main()
 {
     std::locale::global(std::locale("lt_LT.utf8"));
     try_get_wday("Št");
     try_get_wday("Šeštadienis");
  
     std::locale::global(std::locale("en_US.utf8"));
     try_get_wday("SATELLITE");
  
     std::locale::global(std::locale("ja_JP.utf8"));
     try_get_wday("土曜日");
 }

.SH Output:

 Parsing the weekday out of 'Št' in the locale lt_LT.utf8
 Successfully parsed, weekday number is 6 the input was fully consumed
 Parsing the weekday out of 'Šeštadienis' in the locale lt_LT.utf8
 Successfully parsed, weekday number is 6 the input was fully consumed
 Parsing the weekday out of 'SATELLITE' in the locale en_US.utf8
 Successfully parsed, weekday number is 6 Remaining content: ELLITE
 Parsing the weekday out of '土曜日' in the locale ja_JP.utf8
 Successfully parsed, weekday number is 6 the input was fully consumed

.SH See also

   get_time parses a date/time value of specified format
   \fI(C++11)\fP  \fI(function template)\fP 
