.TH std::abs(std::complex) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::abs(std::complex) \- std::abs(std::complex)

.SH Synopsis
   Defined in header <complex>
   template< class T >
   T abs( const complex<T>& z );

   Returns the magnitude of the complex number z.

.SH Parameters

   z - complex value

.SH Return value

   If no errors occur, returns the absolute value (also known as norm, modulus, or
   magnitude) of z.

   Errors and special cases are handled as if the function is implemented as
   std::hypot(std::real(z), std::imag(z))

.SH Examples

   
// Run this code

 #include <iostream>
 #include <complex>
  
 int main()
 {
     std::complex<double> z(1, 1);
     std::cout << z << " cartesian is rho = " << std::abs(z)
               << " theta = " << std::arg(z) << " polar\\n";
 }

.SH Output:

 (1,1) cartesian is rho = 1.41421 theta = 0.785398 polar

.SH See also

   arg                returns the phase angle
                      \fI(function template)\fP 
   polar              constructs a complex number from magnitude and phase angle
                      \fI(function template)\fP 
   abs(int)
   labs               computes absolute value of an integral value (|x|)
   llabs              \fI(function)\fP 
   \fI(C++11)\fP
   abs(float)         absolute value of a floating point value (|x|)
   fabs               \fI(function)\fP 
                      computes square root of the sum of the squares of two given
                      numbers (
   hypot              âˆš
   \fI(C++11)\fP            x2
                      +y2
                      )
                      \fI(function)\fP 
   abs(std::valarray) applies the function std::abs to each element of valarray
                      \fI(function template)\fP 
   C documentation for
   cabs
