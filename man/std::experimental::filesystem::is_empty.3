.TH std::experimental::filesystem::is_empty 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::filesystem::is_empty \- std::experimental::filesystem::is_empty

.SH Synopsis
   Defined in header <experimental/filesystem>
   bool is_empty( const path& p );                 \fB(1)\fP (filesystem TS)
   bool is_empty( const path& p, error_code& ec ); \fB(2)\fP (filesystem TS)

   Checks whether the given path refers to an empty file or directory.

   The second version returns false and sets ec to an appropriate error code if an
   error occurs. Otherwise, ec is cleared with a call to ec.clear().

.SH Parameters

   p  - path to examine
   ec - error code to modify in case of error

.SH Return value

   true if p refers to an empty file or directory, false otherwise.

.SH Exceptions

   1) filesystem_error if an error occurs. The exception object is constructed with p
   as an argument. The error code is set to an appropriate error code for the error
   that caused the failure.
   2)
   noexcept specification:  
   noexcept
     

.SH See also

    This section is incomplete

   Categories:

     * unconditionally noexcept
     * Todo without reason

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
