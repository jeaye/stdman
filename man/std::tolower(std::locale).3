.TH std::tolower(std::locale) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::tolower(std::locale) \- std::tolower(std::locale)

.SH Synopsis
   Defined in header <locale>
   template< class charT >
   charT tolower( charT ch, const locale& loc );

   Converts the character ch to lowercase if possible, using the conversion rules
   specified by the given locale's std::ctype facet.

.SH Parameters

   ch  - character
   loc - locale

.SH Return value

   Returns the lowercase form of ch if one is listed in the locale, otherwise return ch
   unchanged.

.SH Notes

   Only 1:1 character mapping can be performed by this function, e.g. the Greek
   uppercase letter 'Σ' has two lowercase forms, depending on the position in a word:
   'σ' and 'ς'. A call to std::tolower cannot be used to obtain the correct lowercase
   form in this case.

.SH Possible implementation

   template< class charT >
   charT tolower( charT ch, const std::locale& loc ) {
       return std::use_facet<std::ctype<charT>>(loc).tolower(ch);
   }

.SH Example

   
// Run this code

 #include <iostream>
 #include <cwctype>
 #include <locale>
  
 int main()
 {
     wchar_t c = L'\\u0190'; // Latin capital open E ('Ɛ')
  
     std::cout << std::hex << std::showbase;
  
     std::cout << "in the default locale, tolower(" << (std::wint_t)c << ") = "
               << std::tolower(c, std::locale()) << '\\n';
  
     std::cout << "in Unicode locale, tolower(" << (std::wint_t)c << ") = "
               << std::tolower(c, std::locale("en_US.utf8")) << '\\n';
 }

.SH Output:

 in the default locale, tolower(0x190) = 0x190
 in Unicode locale, tolower(0x190) = 0x25b

.SH See also

                        converts a character to uppercase using the ctype facet of a
   toupper(std::locale) locale
                        \fI(function template)\fP 
   tolower              converts a character to lowercase
                        \fI(function)\fP 
   towlower             converts a wide character to lowercase
                        \fI(function)\fP 
