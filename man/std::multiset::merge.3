.TH std::multiset::merge 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::multiset::merge \- std::multiset::merge

.SH Synopsis
   template<class C2>                                      \fB(1)\fP \fI(since C++17)\fP
   void merge(std::set<Key, C2, Allocator>& source);
   template<class C2>                                      \fB(2)\fP \fI(since C++17)\fP
   void merge(std::set<Key, C2, Allocator>&& source);
   template<class C2>                                      \fB(3)\fP \fI(since C++17)\fP
   void merge(std::multiset<Key, C2, Allocator>& source);
   template<class C2>                                      \fB(4)\fP \fI(since C++17)\fP
   void merge(std::multiset<Key, C2, Allocator>&& source);

   Attempts to extract ("splice") each element in source and insert it into *this using
   the the comparison object of *this.

   No elements are copied or moved, only the internal pointers of the container nodes
   are repointed. All pointers and references to the transferred elements remain valid,
   but now refer into *this, not into source.

   The behavior is undefined if get_allocator() != source.get_allocator().

.SH Parameters

   source - compatible container to transfer the nodes from

.SH Return value

   \fI(none)\fP

.SH Exceptions

   Does not throw unless comparison throws.

.SH Complexity

   N*log(size()+N)), where N is source.size()

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   extract extracts nodes from the container
   \fI(C++17)\fP \fI(public member function)\fP 
           inserts elements
   insert  or nodes
           \fI(since C++17)\fP
           \fI(public member function)\fP 

.SH Category:

     * Todo no example
