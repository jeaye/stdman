.TH std::plus 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::plus \- std::plus

.SH Synopsis
   Defined in header <functional>
   template< class T >             \fI(until C++14)\fP
   struct plus;
   template< class T = void >      \fI(since C++14)\fP
   struct plus;

   Function object for performing addition. Effectively calls operator+ on two
   instances of type T.

.SH Specializations

   The standard library provides a specialization of std::plus when T is
   not specified, which leaves the parameter types and return type to be
   deduced.
                                                                          \fI(since C++14)\fP
              function object implementing x + y deducing argument and
   plus<void> return types
              \fI(class template specialization)\fP 

.SH Member types

   Type                                      Definition
   result_type(deprecated in C++17)          T
   first_argument_type(deprecated in C++17)  T
   second_argument_type(deprecated in C++17) T

.SH Member functions

   operator() returns the sum of two arguments
              \fI(public member function)\fP 

std::plus::operator()

   T operator()( const T& lhs, const T& rhs ) const;            \fI(until C++14)\fP
   constexpr T operator()( const T& lhs, const T& rhs ) const;  \fI(since C++14)\fP

   Returns the sum of lhs and rhs.

.SH Parameters

   lhs, rhs - values to sum

.SH Return value

   The result of lhs + rhs.

.SH Exceptions

   \fI(none)\fP

.SH Possible implementation

   constexpr T operator()(const T &lhs, const T &rhs) const
   {
       return lhs + rhs;
   }
