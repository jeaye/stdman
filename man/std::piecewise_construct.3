.TH std::piecewise_construct 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::piecewise_construct \- std::piecewise_construct

.SH Synopsis
   constexpr piecewise_construct_t piecewise_construct         \fI(since C++11)\fP
       = std::piecewise_construct_t();                         \fI(until C++17)\fP
   inline constexpr piecewise_construct_t piecewise_construct  \fI(since C++17)\fP
       = std::piecewise_construct_t();

   The constant std::piecewise_construct is an instance of an empty struct tag type
   std::piecewise_construct_t.

.SH Example

   
   
// Run this code

 #include <iostream>
 #include <utility>
 #include <tuple>
  
 struct Foo {
     Foo(std::tuple<int, float>)
     {
         std::cout << "Constructed a Foo from a tuple\\n";
     }
     Foo(int, float)
     {
         std::cout << "Constructed a Foo from an int and a float\\n";
     }
 };
  
 int main()
 {
     std::tuple<int, float> t(1, 3.14);
     std::pair<Foo, Foo> p1(t, t);
     std::pair<Foo, Foo> p2(std::piecewise_construct, t, t);
 }

.SH Output:

 Constructed a Foo from a tuple
 Constructed a Foo from a tuple
 Constructed a Foo from an int and a float
 Constructed a Foo from an int and a float

.SH See also

   piecewise_construct_t tag type used to select correct function overload for
   \fI(C++11)\fP               piecewise construction
                         \fI(class)\fP 
   constructor           constructs new pair
                         \fI(public member function of std::pair)\fP
