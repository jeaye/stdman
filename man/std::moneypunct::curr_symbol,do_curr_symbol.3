.TH std::moneypunct::curr_symbol,do_curr_symbol 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::moneypunct::curr_symbol,do_curr_symbol \- std::moneypunct::curr_symbol,do_curr_symbol

.SH Synopsis
   Defined in header <locale>
   public:                                     \fB(1)\fP
   string_type curr_symbol() const;
   protected:                                  \fB(2)\fP
   virtual string_type do_curr_symbol() const;

   1) Public member function, calls the member function do_curr_symbol of the most
   derived class.
   2) Returns the string used as the currency identifier by this locale. If
   International (the second template parameter of std::moneypunct) is false, the
   identifier is usually a single (wide) character, such as "￥" or "$". If
   International is true, the identifier is usually a four-character string holding the
   three-character ISO 4217 currency code followed by a space ("JPY " or "USD ")

.SH Return value

   The object of type string_type holding the currency symbol or code.

.SH Example

   
// Run this code

 #include <iostream>
 #include <locale>
 void show_ccy(const char* locname)
 {
     std::locale loc(locname);
     std::cout << locname << " currency symbol is "
               << std::use_facet<std::moneypunct<char, true>>(loc).curr_symbol()
               << "or " << std::use_facet<std::moneypunct<char>>(loc).curr_symbol()
               << " for short\\n";
 }
 int main()
 {
     show_ccy("en_US.utf8");
     show_ccy("ja_JP.utf8");
     show_ccy("sv_SE.utf8");
     show_ccy("ru_RU.utf8");
     show_ccy("vi_VN.utf8");
 }

.SH Output:

 en_US.utf8 currency symbol is USD or $ for short
 ja_JP.utf8 currency symbol is JPY or ￥ for short
 sv_SE.utf8 currency symbol is SEK or kr for short
 ru_RU.utf8 currency symbol is RUB or руб for short
 vi_VN.utf8 currency symbol is VND or ₫ for short

.SH See also

   do_pos_format provides the formatting pattern for currency values
   do_neg_format \fI(virtual protected member function)\fP 
   \fB[virtual]\fP
