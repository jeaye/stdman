.TH std::basic_ostream::flush 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_ostream::flush \- std::basic_ostream::flush

.SH Synopsis
   basic_ostream& flush();

   Writes uncommitted changes to the underlying output sequence.

   If rdbuf() is a null pointer, does nothing

   Otherwise, behaves as an UnformattedOutputFunction \fI(since C++11)\fP. After constructing
   and checking the sentry object, calls rdbuf()->pubsync(). If the call returns -1,
   calls setstate(badbit).

.SH Parameters

   \fI(none)\fP

.SH Return value

   *this

.SH Exceptions

   May throw std::ios_base::failure if exceptions()&badbit!=0.

.SH Example

   
// Run this code

 #include <thread>
 #include <iostream>
 #include <chrono>
 void f()
 {
     std::cout << "Output from thread...";
     std::this_thread::sleep_for(std::chrono::seconds(2));
     std::cout << "...thread calls flush()\\n";
     std::cout.flush();
 }
  
 int main()
 {
     std::thread t1(f);
     std::this_thread::sleep_for(std::chrono::seconds(1));
     std::clog << "Output from main\\n";
     t1.join();
 }

.SH Output:

 Output from main
 Output from thread.....thread calls flush()

.SH See also

   sync  synchronizes with the underlying storage device
         \fI(public member function of std::basic_istream)\fP 
   flush flushes the output stream
         \fI(function template)\fP
   endl  outputs '\\n' and flushes the output stream
         \fI(function template)\fP
