.TH std::filesystem::directory_iterator::directory_iterator 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::directory_iterator::directory_iterator \- std::filesystem::directory_iterator::directory_iterator

.SH Synopsis
   directory_iterator() noexcept;                                     \fB(1)\fP \fI(since C++17)\fP
   explicit directory_iterator( const std::filesystem::path& p );     \fB(2)\fP \fI(since C++17)\fP
   directory_iterator( const std::filesystem::path& p,                \fB(3)\fP \fI(since C++17)\fP
   std::error_code& ec ) noexcept;
   directory_iterator( const directory_iterator& ) = default;         \fB(4)\fP \fI(since C++17)\fP
   directory_iterator( directory_iterator&& ) = default;              \fB(5)\fP \fI(since C++17)\fP

   Constructs a new directory iterator.

   1) Constructs the end iterator.
   2) Constructs a directory iterator that refers to the first directory entry of a
   directory identified by p. If p refers to an non-existing file or not a directory,
   throws std::filesystem::filesystem_error.
   3) Constructs a directory iterator that refers to the first directory entry of a
   directory identified by p. If p refers to an non-existing file or not a directory,
   returns the end iterator and sets ec.

.SH Parameters

    This section is incomplete

.SH Exceptions

   2) std::filesystem::filesystem_error if an error occurs. The exception object is
   constructed with p as an argument.

.SH Notes

   To iterate over the current directory, construct the iterator as
   directory_iterator(".") instead of directory_iterator("").

.SH Category:

     * Todo without reason
