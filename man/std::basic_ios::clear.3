.TH std::basic_ios::clear 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_ios::clear \- std::basic_ios::clear

.SH Synopsis
   void clear( std::ios_base::iostate state = std::ios_base::goodbit );

   Sets the stream error state flags by assigning them the value of state. By default,
   assigns std::ios_base::goodbit which has the effect of clearing all error state
   flags.

   If rdbuf() is a null pointer (i.e. there is no associated stream buffer), then state
   | badbit is assigned. May throw an exception.

.SH Parameters

           new error state flags setting. It can be a combination of the following
           constants:

   state - Constant Explanation
           goodbit  no error
           badbit   irrecoverable stream error
           failbit  input/output operation failed (formatting or extraction error)
           eofbit   associated input sequence has reached end-of-file

.SH Return value

   \fI(none)\fP

.SH Exceptions

    This section is incomplete
    Reason: link to basic_ios::exceptions, too

.SH Example

   clear() without arguments can be used to unset the failbit after unexpected input

   
// Run this code

 #include <iostream>
 #include <string>
  
 int main()
 {
     double n;
     while( std::cout << "Please, enter a number\\n"
            && ! (std::cin >> n) )
     {
         std::cin.clear();
         std::string line;
         std::getline(std::cin, line);
         std::cout << "I am sorry, but '" << line << "' is not a number\\n";
     }
     std::cout << "Thank you for entering the number " << n << '\\n';
 }

.SH See also

   setstate sets state flags
            \fI(public member function)\fP 
   rdstate  returns state flags
            \fI(public member function)\fP 

.SH Category:

     * Todo with reason
