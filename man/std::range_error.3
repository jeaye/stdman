.TH std::range_error 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::range_error \- std::range_error

.SH Synopsis
   Defined in header <stdexcept>
   class range_error;

   Defines a type of object to be thrown as exception. It can be used to report range
   errors (that is, situations where a result of a computation cannot be represented by
   the destination type)

   The only standard library components that throw this exception are
   std::wstring_convert::from_bytes and std::wstring_convert::to_bytes.

   The mathematical functions in the standard library components do not throw this
   exception (mathematical functions report range errors as specified in
   math_errhandling).

   std-range error-inheritance.svg
   About this image

                                   Inheritance diagram

.SH Member functions

   constructor   constructs the exception object
                 \fI(public member function)\fP 

   

std::range_error::range_error

   explicit range_error( const std::string& what_arg ); \fB(1)\fP
   explicit range_error( const char* what_arg );        \fB(2)\fP \fI(since C++11)\fP

   Constructs the exception object with what_arg as explanatory string that can be
   accessed through what().

   Because copying std::exception is not permitted to throw exceptions, this message is
   typically stored internally as a separately-allocated reference-counted string. This
   is also why there is no constructor taking std::string&&: it would have to copy the
   content anyway.

.SH Parameters

   what_arg - explanatory string

.SH Exceptions

   May throw std::bad_alloc

Inherited from std::exception

.SH Member functions

   destructor   destroys the exception object
   \fB[virtual]\fP    \fI(virtual public member function of std::exception)\fP 
   what         returns an explanatory string
   \fB[virtual]\fP    \fI(virtual public member function of std::exception)\fP 
