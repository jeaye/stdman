.TH std::subtract_with_carry_engine::subtract_with_carry_engine 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::subtract_with_carry_engine::subtract_with_carry_engine \- std::subtract_with_carry_engine::subtract_with_carry_engine

.SH Synopsis
   explicit subtract_with_carry_engine( result_type value =   \fB(1)\fP \fI(since C++11)\fP
   default_seed );
   template< class Sseq >                                     \fB(2)\fP \fI(since C++11)\fP
   explicit subtract_with_carry_engine( Sseq& s );
   subtract_with_carry_engine( const                          \fB(3)\fP \fI(since C++11)\fP
   subtract_with_carry_engine& );                                 (implicitly declared)

   Constructs the pseudo-random number engine.

    This section is incomplete

   The overload \fB(2)\fP only participates in overload resolution if Sseq qualifies as a
   SeedSequence. In particular, it is excluded from the set of candidate functions if
   Sseq is convertible to result_type.

.SH Parameters

   value - seed value to use in the initialization of the internal state
   s     - seed sequence to use in the initialization of the internal state

.SH Complexity

    This section is incomplete

.SH See also

   seed sets the current state of the engine
        \fI(public member function)\fP 

.SH Category:

     * Todo without reason
