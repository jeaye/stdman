.TH std::char_traits::eq_int_type 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::char_traits::eq_int_type \- std::char_traits::eq_int_type

.SH Synopsis
   static bool eq_int_type( int_type c1, int_type c2 );            \fI(until C++11)\fP
   static constexpr bool eq_int_type( int_type c1, int_type c2 );  \fI(since C++11)\fP

   Checks whether two values of type int_type are equal.

   Formally,

     * if there exist values a and b such that c1 == X::to_int_type(a) and c2 ==
       X::to_int_type(b), yields the same as X::eq(a,b)
     * otherwise, if c1 and c2 are both copies of X::eof(), yields true
     * otherwise, if one of c1 and c2 is a copy of X::eof() and the other is not,
       yields false
     * otherwise, the result is unspecified

.SH Parameters

   c1, c2 - values to compare

.SH Return value

   true if c1 is equal to c2 under the rules described above, false otherwise.

.SH Exceptions

   \fI(none)\fP                    \fI(until C++11)\fP
   noexcept specification:  
   noexcept                  \fI(since C++11)\fP
     

.SH Complexity

   Constant.

.SH Category:

     * unconditionally noexcept

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
