.TH std::list::reverse 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::list::reverse \- std::list::reverse

.SH Synopsis
   void reverse();           \fI(until C++11)\fP
   void reverse() noexcept;  \fI(since C++11)\fP

   Reverses the order of the elements in the container. No references or iterators
   become invalidated.

.SH Parameters

   \fI(none)\fP

.SH Return value

   \fI(none)\fP

.SH Complexity

   Linear in the size of the container

.SH Example

   
// Run this code

 #include <iostream>
 #include <list>
  
 std::ostream& operator<<(std::ostream& ostr, const std::list<int>& list)
 {
     for (auto &i : list) {
         ostr << " " << i;
     }
     return ostr;
 }
  
 int main()
 {
     std::list<int> list = { 8,7,5,9,0,1,3,2,6,4 };
  
     std::cout << "before:     " << list << "\\n";
     list.sort();
     std::cout << "ascending:  " << list << "\\n";
     list.reverse();
     std::cout << "descending: " << list << "\\n";
 }

.SH Output:

 before:      8 7 5 9 0 1 3 2 6 4
 ascending:   0 1 2 3 4 5 6 7 8 9
 descending:  9 8 7 6 5 4 3 2 1 0

.SH See also

   sort sorts the elements
        \fI(public member function)\fP 
