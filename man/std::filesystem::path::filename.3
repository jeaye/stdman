.TH std::filesystem::path::filename 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::path::filename \- std::filesystem::path::filename

.SH Synopsis
   path filename() const;  \fI(since C++17)\fP

   Returns the generic-format filename component of the path.

   Equivalent to relative_path().empty() ? path() : *--end().

.SH Parameters

   \fI(none)\fP

.SH Return value

   The filename identified by the path.

.SH Exceptions

   \fI(none)\fP

.SH Example

   
// Run this code

 #include <iostream>
 #include <filesystem>
 namespace fs = std::filesystem;
  
 int main()
 {
     std::cout << fs::path("/foo/bar.txt").filename() << '\\n'
               << fs::path("/foo/.bar").filename() << '\\n'
               << fs::path("/foo/bar/").filename() << '\\n'
               << fs::path("/foo/.").filename() << '\\n'
               << fs::path("/foo/..").filename() << '\\n'
               << fs::path(".").filename() << '\\n'
               << fs::path("..").filename() << '\\n'
               << fs::path("/").filename() << '\\n';
 }

.SH Output:

 "bar.txt"
 ".bar"
 "."
 "."
 ".."
 "."
 ".."
 "/"

.SH See also

   extension        returns the file extension path component
                    \fI(public member function)\fP 
   stem             returns the stem path component
                    \fI(public member function)\fP 
   replace_filename replaces the last path component with another path
                    \fI(public member function)\fP 
   has_filename     checks if the corresponding path element is not empty
                    \fI(public member function)\fP
