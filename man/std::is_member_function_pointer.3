.TH std::is_member_function_pointer 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::is_member_function_pointer \- std::is_member_function_pointer

.SH Synopsis
   Defined in header <type_traits>
   template< class T >                 \fI(since C++11)\fP
   struct is_member_function_pointer;

   Checks whether T is a non-static member function pointer. Provides the member
   constant value which is equal to true, if T is a non-static member function pointer
   type. Otherwise, value is equal to false.

.SH Template parameters

   T - a type to check

   Helper variable template

   template< class T >
   inline constexpr bool is_member_function_pointer_v =                   \fI(since C++17)\fP
   is_member_function_pointer<T>::value;

   

Inherited from std::integral_constant

.SH Member constants

   value    true if T is a member function pointer type , false otherwise
   \fB[static]\fP \fI(public static member constant)\fP

.SH Member functions

   operator bool converts the object to bool, returns value
                 \fI(public member function)\fP
   operator()    returns value
   \fI(C++14)\fP       \fI(public member function)\fP

.SH Member types

   Type       Definition
   value_type bool
   type       std::integral_constant<bool, value>

.SH Possible implementation

template< class T >
struct is_member_function_pointer_helper : std::false_type {};
 
template< class T, class U>
struct is_member_function_pointer_helper<T U::*> : std::is_function<T> {};
 
template< class T >
struct is_member_function_pointer : is_member_function_pointer_helper< std::remove_cv_t<T> > {};

.SH Example

   
// Run this code

 #include <type_traits>
  
 class A {
 public:
     void member() { }
 };
  
 int main()
 {
     // fails at compile time if A::member is a data member and not a function
     static_assert(std::is_member_function_pointer<decltype(&A::member)>::value,
                   "A::member is not a member function.");
 }

.SH See also

   is_pointer               checks if a type is a pointer type
   \fI(C++11)\fP                  \fI(class template)\fP 
   is_member_object_pointer checks if a type is a pointer to a non-static member object
   \fI(C++11)\fP                  \fI(class template)\fP 
   is_member_pointer        checks if a type is a pointer to a non-static member
   \fI(C++11)\fP                  function or object
                            \fI(class template)\fP 
