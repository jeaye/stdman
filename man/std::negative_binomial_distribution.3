.TH std::negative_binomial_distribution 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::negative_binomial_distribution \- std::negative_binomial_distribution

.SH Synopsis
   Defined in header <random>
   template< class IntType = int >        \fI(since C++11)\fP
   class negative_binomial_distribution;

   Produces random non-negative integer values i, distributed according to discrete
   probability function:

           \\(P(i|k, p) = \\binom{k + i - 1}{i} \\cdot p^k \\cdot (1 - p)^i\\)P(i|k,p) =⎛
           ⎜
           ⎝k + i − 1
           i⎞
           ⎟
           ⎠ · pk
           · (1 − p)i

   The value represents the number of failures in a series of independent yes/no trials
   (each succeeds with probability p), before exactly k successes occur.

   std::negative_binomial_distribution satisfies RandomNumberDistribution

.SH Template parameters

             The result type generated by the generator. The effect is undefined if
   IntType - this is not one of short, int, long, long long, unsigned short, unsigned
             int, unsigned long, or unsigned long long.

.SH Member types

   Member type Definition
   result_type IntType
   param_type  the type of the parameter set, see RandomNumberDistribution.

.SH Member functions

   constructor   constructs new distribution
                 \fI(public member function)\fP 
   reset         resets the internal state of the distribution
                 \fI(public member function)\fP 
.SH Generation
   operator()    generates the next random number in the distribution
                 \fI(public member function)\fP 
.SH Characteristics
   p             returns the distribution parameters
   k             \fI(public member function)\fP 
   param         gets or sets the distribution parameter object
                 \fI(public member function)\fP 
   min           returns the minimum potentially generated value
                 \fI(public member function)\fP 
   max           returns the maximum potentially generated value
                 \fI(public member function)\fP 

.SH Non-member functions

   operator== compares two distribution objects
   operator!= \fI(function)\fP 
   operator<< performs stream input and output on pseudo-random number distribution
   operator>> \fI(function template)\fP 

.SH Example

   
// Run this code

 #include <iostream>
 #include <iomanip>
 #include <string>
 #include <map>
 #include <random>
  
 int main()
 {
     std::random_device rd;
     std::mt19937 gen(rd());
     // Pat goes door-to-door selling cookies
     // At each house, there's a 75% chance that she sells one box
     // how many times will she be turned away before selling 5 boxes?
     std::negative_binomial_distribution<> d(5, 0.75);
  
     std::map<int, int> hist;
     for(int n=0; n<10000; ++n) {
         ++hist[d(gen)];
     }
     for(auto p : hist) {
         std::cout  << p.first << ' ' << std::string(p.second/100, '*') << '\\n';
     }
 }

.SH Output:

 0 ***********************
 1 *****************************
 2 **********************
 3 *************
 4 ******
 5 ***
 6 *
 7
 8
 9
 10
 11

.SH External links

   Weisstein, Eric W. "Negative Binomial Distribution." From MathWorld--A Wolfram Web
   Resource.
