.TH std::gmtime 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::gmtime \- std::gmtime

.SH Synopsis
   Defined in header <ctime>
   std::tm* gmtime( const std::time_t* time );

   Converts given time since epoch as std::time_t value into calendar time, expressed
   in Coordinated Universal Time (UTC).

.SH Parameters

   time - pointer to a time_t object to convert

.SH Return value

   Pointer to a static internal std::tm object on success, or null pointer otherwise.
   The structure may be shared between std::gmtime, std::localtime, and std::ctime and
   may be overwritten on each invocation.

.SH Notes

   This function may not be thread-safe.

   POSIX requires that this function sets errno to EOVERFLOW if it fails because the
   argument is too large.

.SH Example

   
// Run this code

 #include <iostream>
 #include <iomanip>
 #include <ctime>
  
 int main()
 {
     std::time_t t = std::time(nullptr);
     std::cout << "UTC:   " << std::put_time(std::gmtime(&t), "%c %Z") << '\\n';
     std::cout << "local: " << std::put_time(std::localtime(&t), "%c %Z") << '\\n';
 }

.SH Output:

 UTC:   Wed Dec 28 11:44:28 2011 GMT
 local: Wed Dec 28 06:44:28 2011 EST

.SH See also

   localtime converts time since epoch to calendar time expressed as local time
             \fI(function)\fP 
   C documentation for
   gmtime
