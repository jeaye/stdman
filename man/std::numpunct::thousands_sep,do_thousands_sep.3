.TH std::numpunct::thousands_sep,do_thousands_sep 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::numpunct::thousands_sep,do_thousands_sep \- std::numpunct::thousands_sep,do_thousands_sep

.SH Synopsis
   Defined in header <locale>
   public:                                     \fB(1)\fP
   char_type thousands_sep() const;
   protected:                                  \fB(2)\fP
   virtual char_type do_thousands_sep() const;

   1) Public member function, calls the member function do_thousands_sep of the most
   derived class.
   2) Returns the character to be used as the separator between digit groups when
   parsing or formatting integers and integral parts of floating-point values.

.SH Return value

   The object of type char_type to use as the thousands separator. The standard
   specializations of std::numpunct return ',' and L','.

.SH Example

   
// Run this code

 #include <iostream>
 #include <locale>
  
 struct space_out : std::numpunct<char> {
     char do_thousands_sep()   const { return ' '; }  // separate with spaces
     std::string do_grouping() const { return "\\1"; } // groups of 1 digit
 };
  
 int main()
 {
     std::cout << "default locale: " << 12345678 << '\\n';
     std::cout.imbue(std::locale(std::cout.getloc(), new space_out));
     std::cout << "locale with modified numpunct: " << 12345678 << '\\n';
 }

.SH Output:

 default locale: 12345678
 locale with modified numpunct: 1 2 3 4 5 6 7 8

.SH See also

   do_grouping provides the numbers of digits between each pair of thousands separators
   \fB[virtual]\fP   \fI(virtual protected member function)\fP 
