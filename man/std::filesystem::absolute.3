.TH std::filesystem::absolute 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::absolute \- std::filesystem::absolute

.SH Synopsis
   Defined in header <filesystem>
   path absolute(const std::filesystem::path& p);                       \fI(since C++17)\fP
   path absolute(const std::filesystem::path& p, std::error_code& ec);

   Returns a path referencing the same file system location as p, for which
   is_absolute() is true. The non-throwing overload returns default-constructed path if
   an error occurs.

.SH Parameters

   p  - path to convert to absolute form
   ec - out-parameter for error reporting in the non-throwing overload

.SH Return value

   Returns an absolute (although not necessarily canonical) pathname referencing the
   same file as p

.SH Exceptions

   The overload that does not take a std::error_code& parameter throws filesystem_error
   on underlying OS API errors, constructed with p as the first argument and the OS
   error code as the error code argument. The overload taking a std::error_code&
   parameter sets it to the OS API error code if an OS API call fails, and executes
   ec.clear() if no errors occur. Any overload not marked noexcept may throw
   std::bad_alloc if memory allocation fails.

.SH Notes

   Implementations are encouraged to not consider p not existing to be an error.

   For POSIX-based operating systems, std::filesystem::absolute(p) is equivalent to
   std::filesystem::current_path() / p

   For Windows, absolute may be implemented as a call to GetFullPathNameW.

.SH Example

   
// Run this code

 #include <iostream>
 #include <filesystem>
 namespace fs = std::filesystem;
 int main()
 {
     fs::path p = "C:cl.exe";
     std::cout << "Current path is " << fs::current_path() << '\\n'
               << "Absolute path for " << p << " is " << fs::absolute(p) << '\\n';
 // actual location: "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\bin\\cl.exe"
 }

.SH Possible output:

 Current path is "D:/local/ConsoleApplication1"
 Absolute path for "C:cl.exe" is "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\bin\\cl.exe"

.SH See also

   canonical        composes a canonical path
   weakly_canonical \fI(function)\fP 
   \fI(C++17)\fP
   relative         composes a relative path
   proximate        \fI(function)\fP 
   \fI(C++17)\fP
