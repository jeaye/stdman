.TH std::unordered_multiset::rehash 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unordered_multiset::rehash \- std::unordered_multiset::rehash

.SH Synopsis
   void rehash( size_type count );  \fI(since C++11)\fP

   Sets the number of buckets to count and rehashes the container, i.e. puts the
   elements into appropriate buckets considering that total number of buckets has
   changed. If the new number of buckets makes load factor more than maximum load
   factor (count < size() / max_load_factor()), then the new number of buckets is at
   least size() / max_load_factor().

.SH Parameters

   count - new number of buckets

.SH Return value

   \fI(none)\fP

.SH Complexity

   Average case linear in the size of the container, worst case quadratic.

.SH Notes

   rehash\fB(0)\fP may be used to force an unconditional rehash, such as after suspension of
   automatic rehashing by temporarily increasing max_load_factor().

.SH See also

           reserves space for at least the specified number of elements.
   reserve This regenerates the hash table.
           \fI(public member function)\fP 
