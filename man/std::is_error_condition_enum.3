.TH std::is_error_condition_enum 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::is_error_condition_enum \- std::is_error_condition_enum

.SH Synopsis
   Defined in header <system_error>
   template< class T >               \fI(since C++11)\fP
   struct is_error_condition_enum;

   If T is an error condition enum, this template provides the member constant value
   equal true. For any other type, value is false.

   This template may be specialized for a user-defined type to indicate that the type
   is eligible for std::error_condition automatic conversions.

   The following class of the standard library is an error condition enum: std::errc.

.SH Member constants

   value    true if T is an error condition enum, false otherwise
   \fB[static]\fP \fI(public static member constant)\fP

.SH Member functions

   operator bool converts the object to bool, returns value
                 \fI(public member function)\fP
   operator()    returns value
   \fI(C++14)\fP       \fI(public member function)\fP

.SH Member types

   Type       Definition
   value_type bool
   type       std::integral_constant<bool, value>

.SH See also

   is_error_code_enum identifies a class as an error_code enumeration
   \fI(C++11)\fP            \fI(class template)\fP 
