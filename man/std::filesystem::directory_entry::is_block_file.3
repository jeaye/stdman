.TH std::filesystem::directory_entry::is_block_file 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::directory_entry::is_block_file \- std::filesystem::directory_entry::is_block_file

.SH Synopsis
   bool is_block_file() const;                                \fI(since C++17)\fP
   bool is_block_file( std::error_code& ec ) const noexcept;

   Checks whether the pointed-to object is a block device. Effectively returns
   std::filesystem::is_block_file(status()) or
   std::filesystem::is_block_file(status(ec)), respectively

.SH Parameters

   ec - out-parameter for error reporting in the non-throwing overload

.SH Return value

   true if the referred-to filesystem object is a block device, false otherwise.

.SH Exceptions

   The overload that does not take a std::error_code& parameter throws filesystem_error
   on underlying OS API errors, constructed with p as the first argument and the OS
   error code as the error code argument. The overload taking a std::error_code&
   parameter sets it to the OS API error code if an OS API call fails, and executes
   ec.clear() if no errors occur. Any overload not marked noexcept may throw
   std::bad_alloc if memory allocation fails.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   is_block_file checks whether the given path refers to block device
   \fI(C++17)\fP       \fI(function)\fP 

.SH Category:

     * Todo no example
