.TH std::logical_not 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::logical_not \- std::logical_not

.SH Synopsis
   Defined in header <functional>
   template< class T >             \fI(until C++14)\fP
   struct logical_not;
   template< class T = void >      \fI(since C++14)\fP
   struct logical_not;

   Function object for performing logical NOT (logical negation). Effectively calls
   operator! for type T.

.SH Specializations

   The standard library provides a specialization of std::logical_not
   when T is not specified, which leaves the parameter types and return
   type to be deduced.
                                                                          \fI(since C++14)\fP
                     function object implementing !x deducing argument
   logical_not<void> and return types
                     \fI(class template specialization)\fP 

.SH Member types

   Type                               Definition
   result_type(deprecated in C++17)   bool
   argument_type(deprecated in C++17) T

.SH Member functions

   operator() returns the logical NOT of the argument
              \fI(public member function)\fP

std::logical_not::operator()

   bool operator()( const T& arg ) const;            \fI(until C++14)\fP
   constexpr bool operator()( const T& arg ) const;  \fI(since C++14)\fP

   Returns the logical NOT of arg.

.SH Parameters

   arg - value to compute logical NOT of

.SH Return value

   The result of !arg.

.SH Exceptions

   \fI(none)\fP

.SH Possible implementation

   const bool operator()(const T &arg) const
   {
       return !arg;
   }
