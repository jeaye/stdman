.TH std::basic_filebuf::basic_filebuf 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_filebuf::basic_filebuf \- std::basic_filebuf::basic_filebuf

.SH Synopsis
   basic_filebuf();                                         \fB(1)\fP
   basic_filebuf( const std::basic_filebuf& rhs ) = delete; \fB(2)\fP \fI(since C++11)\fP
   basic_filebuf( std::basic_filebuf&& rhs );               \fB(3)\fP \fI(since C++11)\fP

   Contructs new std::basic_filebuf object.

   1) Constructs a std::basic_filebuf object, initializing the base class by calling
   the default constructor of std::basic_streambuf. The created basic_filebuf is not
   associated with a file, and is_open() returns false.
   2) The copy constructor is deleted; std::basic_filebuf is not CopyConstructible
   3) Move-constructs a std::basic_filebuf object by moving all contents from another
   std::basic_filebuf object rhs, including the buffers, the associated file, the
   locale, the openmode, the is_open variable, and all other state. After move, rhs is
   not associated with a file and rhs.is_open()==false. The member pointers of the base
   class std::basic_streambuf of rhs and of the base class of *this are guaranteed to
   point to different buffers (unless null).

.SH Parameters

   rhs - another basic_filebuf

.SH Notes

   Typically called by the constructor of std::basic_fstream.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   operator=    assigns a basic_filebuf object
   \fI(C++11)\fP      \fI(public member function)\fP 
   destructor   destructs a basic_filebuf object and closes the file if it is open
   \fB[virtual]\fP    \fI(virtual public member function)\fP 

.SH Category:

     * Todo no example
