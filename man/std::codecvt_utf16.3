.TH std::codecvt_utf16 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::codecvt_utf16 \- std::codecvt_utf16

.SH Synopsis
   Defined in header <codecvt>
   template< class Elem,

             unsigned long Maxcode = 0x10ffff,                    \fI(since C++11)\fP
             std::codecvt_mode Mode = (std::codecvt_mode)0 >      (deprecated in C++17)

   class codecvt_utf16 : public std::codecvt<Elem, char,
   std::mbstate_t>;

   std::codecvt_utf16 is a std::codecvt facet which encapsulates conversion between a
   UTF-16 encoded byte string and UCS2 or UCS4 character string (depending on the type
   of Elem). This codecvt facet can be used to read and write UTF-16 files in binary
   mode.

.SH Template Parameters

   Elem    - either char16_t, char32_t, or wchar_t
   Maxcode - the largest value of Elem that this facet will read or write without error
   Mode    - a constant of type std::codecvt_mode

.SH Member functions

   constructor   constructs a new codecvt_utf16 facet
                 \fI(public member function)\fP
   destructor    destroys a codecvt_utf16 facet
                 \fI(public member function)\fP

std::codecvt_utf16::codecvt_utf16

   explicit codecvt_utf16( std::size_t refs = 0 );

   Constructs a new std::codecvt_utf16 facet, passes the initial reference counter refs
   to the base class.

.SH Parameters

   refs - the number of references that link to the facet

std::codecvt_utf16::~codecvt_utf16

   ~codecvt_utf16();

   Destroys the facet. Unlike the locale-managed facets, this facet's destructor is
   public.

Inherited from std::codecvt

.SH Member types

   Member type Definition
   intern_type internT
   extern_type externT
   state_type  stateT

.SH Member objects

   Member name Type
   id (static) std::locale::id

.SH Member functions

   out           invokes do_out
                 \fI(public member function of std::codecvt)\fP 
   in            invokes do_in
                 \fI(public member function of std::codecvt)\fP 
   unshift       invokes do_unshift
                 \fI(public member function of std::codecvt)\fP 
   encoding      invokes do_encoding
                 \fI(public member function of std::codecvt)\fP 
   always_noconv invokes do_always_noconv
                 \fI(public member function of std::codecvt)\fP 
   length        invokes do_length
                 \fI(public member function of std::codecvt)\fP 
   max_length    invokes do_max_length
                 \fI(public member function of std::codecvt)\fP 

.SH Protected member functions

   do_out           converts a string from internT to externT, such as when writing to
   \fB[virtual]\fP        file
                    \fI(virtual protected member function of std::codecvt)\fP 
   do_in            converts a string from externT to internT, such as when reading
   \fB[virtual]\fP        from file
                    \fI(virtual protected member function of std::codecvt)\fP 
   do_unshift       generates the termination character sequence of externT characters
   \fB[virtual]\fP        for incomplete conversion
                    \fI(virtual protected member function of std::codecvt)\fP 
   do_encoding      returns the number of externT characters necessary to produce one
   \fB[virtual]\fP        internT character, if constant
                    \fI(virtual protected member function of std::codecvt)\fP 
   do_always_noconv tests if the facet encodes an identity conversion for all valid
   \fB[virtual]\fP        argument values
                    \fI(virtual protected member function of std::codecvt)\fP 
   do_length        calculates the length of the externT string that would be consumed
   \fB[virtual]\fP        by conversion into given internT buffer
                    \fI(virtual protected member function of std::codecvt)\fP 
   do_max_length    returns the maximum number of externT characters that could be
   \fB[virtual]\fP        converted into a single internT character
                    \fI(virtual protected member function of std::codecvt)\fP 

Inherited from std::codecvt_base

   Member type                                 Definition
   enum result { ok, partial, error, noconv }; Unscoped enumeration type

   Enumeration constant Definition
   ok                   conversion was completed with no error
   partial              not all source characters were converted
   error                encountered an invalid character
   noconv               no conversion required, input and output types are the same

.SH Example

   The following example demonstrates decoding of UTF-16le file on a system with 32-bit
   wchar_t. On a system with 16-bit wchar_t, decoding of the third character will fail
   because std::codecvt_utf16<char16_t> produces UCS2, not UTF-16.

   
// Run this code

 #include <fstream>
 #include <iostream>
 #include <string>
 #include <locale>
 #include <codecvt>
  
 void prepare_file()
 {
     // UTF-16le data (if host system is little-endian)
     char16_t utf16le[4] ={0x007a,          // latin small letter 'z' U+007a
                           0x6c34,          // CJK ideograph "water"  U+6c34
                           0xd834, 0xdd0b}; // musical sign segno U+1d10b
     // store in a file
     std::ofstream fout("text.txt");
     fout.write( reinterpret_cast<char*>(utf16le), sizeof utf16le);
 }
  
 int main()
 {
     prepare_file();
     // open as a byte stream
     std::wifstream fin("text.txt", std::ios::binary);
     // apply facet
     fin.imbue(std::locale(fin.getloc(),
        new std::codecvt_utf16<wchar_t, 0x10ffff, std::little_endian>));
  
     for (wchar_t c; fin.get(c); )
             std::cout << std::showbase << std::hex << c << '\\n';
 }

.SH Output:

 0x7a
 0x6c34
 0x1d10b

.SH See also

     Character        locale-defined
    conversions          multibyte                    UTF-8                              UTF-16
                     (UTF-8, GB18030)
                    mbrtoc16 /          codecvt<char16_t, char, mbstate_t>
      UTF-16        c16rtomb(with C11's codecvt_utf8_utf16<char16_t>       N/A
                    DR488)              codecvt_utf8_utf16<char32_t>
                                        codecvt_utf8_utf16<wchar_t>
                    c16rtomb(without    codecvt_utf8<char16_t>             codecvt_utf16<char16_t>
       UCS2         C11's DR488)
                                        codecvt_utf8<wchar_t>(Windows)     codecvt_utf16<wchar_t>(Windows)
                                        codecvt<char32_t, char, mbstate_t> codecvt_utf16<char32_t>
      UTF-32        mbrtoc32 / c32rtomb codecvt_utf8<char32_t>             codecvt_utf16<wchar_t>(non-Windows)
                                        codecvt_utf8<wchar_t>(non-Windows)
                    mbsrtowcs /
   system wide:     wcsrtombs
UTF-32(non-Windows) use_facet<codecvt   No                                 No
   UCS2(Windows)    <wchar_t, char,
                    mbstate_t>>(locale)

                         converts between character encodings, including UTF-8, UTF-16,
   codecvt               UTF-32
                         \fI(class template)\fP 
   codecvt_mode          tags to alter behavior of the standard codecvt facets
   \fI(C++11)\fP               \fI(enum)\fP 
   (deprecated in C++17)
   codecvt_utf8          converts between UTF-8 and UCS2/UCS4
   \fI(C++11)\fP               \fI(class template)\fP 
   (deprecated in C++17)
   codecvt_utf8_utf16    converts between UTF-8 and UTF-16
   \fI(C++11)\fP               \fI(class template)\fP 
   (deprecated in C++17)
