.TH std::logical_and<void> 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::logical_and<void> \- std::logical_and<void>

.SH Synopsis
   Defined in header <functional>
   template<>                      \fI(since C++14)\fP
   class logical_and<void>;

   std::logical_and<> is a specialization of std::logical_and with parameter and return
   type deduced.

.SH Member types

   Member type    Definition
   is_transparent /* unspecified */

.SH Member functions

   operator() applies operator&& to lhs and rhs
              \fI(public member function)\fP

std::logical_and<>::operator()

   template< class T, class U>

   constexpr auto operator()( T&& lhs, U&& rhs ) const

     -> decltype(std::forward<T>(lhs) && std::forward<U>(rhs));

   Returns the result of lhs && rhs.

.SH Parameters

   lhs, rhs - values to AND

.SH Return value

   The result of lhs && rhs.

.SH Notes

   The member type is_transparent indicates to the caller that this function object is
   a transparent function object: it accepts arguments of arbitrary types and uses
   perfect forwarding, which avoids unnecessary copying and conversion when the
   function object is used in heterogeneous context, or with rvalue arguments. In
   particular, template functions such as std::set::find and std::set::lower_bound make
   use of this member type on their Compare types.

.SH Example

    This section is incomplete
    Reason: no example

.SH Category:

     * Todo no example
