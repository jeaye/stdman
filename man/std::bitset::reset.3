.TH std::bitset::reset 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::bitset::reset \- std::bitset::reset

.SH Synopsis
   bitset<N>& reset();             \fB(1)\fP
   bitset<N>& reset( size_t pos ); \fB(2)\fP

   Sets bits to false.

   1) Sets all bits to false
   2) Sets the bit at position pos to false.

.SH Parameters

   pos - the position of the bit to set

.SH Return value

   *this

.SH Exceptions

   1)

   \fI(none)\fP                    \fI(until C++11)\fP
   noexcept specification:  
   noexcept                  \fI(since C++11)\fP
     

   2) Throws std::out_of_range if pos does not correspond to a valid position within
   the bitset

.SH Example

   
// Run this code

 #include <iostream>
 #include <bitset>
  
 int main()
 {
     std::bitset<8> b(42);
     std::cout << "Bitset is         " << b << '\\n';
     b.reset(1);
     std::cout << "After b.reset(1): " << b << '\\n';
     b.reset();
     std::cout << "After b.reset():  " << b << '\\n';
 }

.SH Output:

 Bitset is         00101010
 After b.reset\fB(1)\fP: 00101000
 After b.reset():  00000000

.SH See also

   set  sets bits to true or given value
        \fI(public member function)\fP 
   flip toggles the values of bits
        \fI(public member function)\fP 

.SH Category:

     * unconditionally noexcept

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
