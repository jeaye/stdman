.TH std::strong_equality 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::strong_equality \- std::strong_equality

.SH Synopsis
   Defined in header <compare>
   class strong_equality;       \fI(since C++20)\fP

   The class type std::strong_equality is the result type of a three-way comparison
   that

     * admits only equality and inequality comparisons (no less-than/greater-than)

     * implies substitutability: if a is equivalent to b, f(a) is also equivalent to
       f(b), where f denotes a function that reads only comparison-salient state that
       is accessible via the argument's public const members. In other words,
       equivalent values are indistinguishable.

.SH Constants

   The type std::strong_equality has four valid values, implemented as const static
   data members of its type:

   Member constant                 Definition
   equivalent(inline constexpr)    a valid value of the type std::strong_equality
   \fB[static]\fP                        indicating equality
                                   \fI(public static member constant)\fP
   equal(inline constexpr)         a valid value of the type std::strong_equality
   \fB[static]\fP                        indicating equality
                                   \fI(public static member constant)\fP
   nonequivalent(inline constexpr) a valid value of the type std::strong_equality
   \fB[static]\fP                        indicating non-equality
                                   \fI(public static member constant)\fP
   nonequal(inline constexpr)      a valid value of the type std::strong_equality
   \fB[static]\fP                        indicating non-equality
                                   \fI(public static member constant)\fP

.SH Conversions

   std::strong_equality is implicitly-convertible to std::weak_equality, and
   std::strong_ordering is implicitly-convertible to strong_equality.

   operator weak_equality implicit conversion to std::weak_equality
                          \fI(public member function)\fP

std::strong_equality::operator weak_equality

   constexpr operator weak_equality() const noexcept;

.SH Return value

   std::weak_equality::equivalent if v is equivalent or equal,
   std::weak_equality::nonequivalent if v is nonequivalent or nonequal.

.SH Comparisons

   Comparison operators are defined between values of this type and literal zero. This
   supports the expressions a <=> b == 0 and a <=> b != 0 used to convert the result of
   a three-way comparison operator to a boolean relationship; see std::is_eq and
   std::is_neq

   operator== compares with zero
   operator!= \fI(function)\fP

operator==

   friend constexpr bool operator==(strong_equality v, /*unspecified*/ u) noexcept;
   friend constexpr bool operator==(/*unspecified*/ u, strong_equality v) noexcept;

.SH Parameters

   v - a std::strong_equality value to check
   u - an unused parameter of any type that accepts literal zero argument

.SH Return value

   true if v is equivalent or equal, false if v is nonequivalent or nonequal

operator!=

   friend constexpr bool operator!=(strong_equality v, /*unspecified*/ u) noexcept;
   friend constexpr bool operator!=(/*unspecified*/ u, strong_equality v) noexcept;

.SH Parameters

   v - a std::strong_equality value to check
   u - an unused parameter of any type that accepts literal zero argument

.SH Return value

   false if v is equivalent or equal, and true if v is nonequivalent or nonequal

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   strong_ordering  the result type of 3-way comparison that supports all 6 operators
   (C++20)          and is substitutable
                    \fI(class)\fP 
   weak_ordering    the result type of 3-way comparison that supports all 6 operators
   (C++20)          and is not substitutable
                    \fI(class)\fP 
   partial_ordering the result type of 3-way comparison that supports all 6 operators,
   (C++20)          is not substitutable, and allows incomparable values
                    \fI(class)\fP 
   weak_equality    the result type of 3-way comparison that supports only
   (C++20)          equality/inequality and is not substitutable
                    \fI(class)\fP 

.SH Category:

     * Todo no example
