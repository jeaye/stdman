.TH std::set::upper_bound 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::set::upper_bound \- std::set::upper_bound

.SH Synopsis
   iterator upper_bound( const Key& key );             \fB(1)\fP
   const_iterator upper_bound( const Key& key ) const; \fB(1)\fP
   template< class K >                                 \fB(2)\fP \fI(since C++14)\fP
   iterator upper_bound( const K& x );
   template< class K >                                 \fB(2)\fP \fI(since C++14)\fP
   const_iterator upper_bound( const K& x ) const;

   1) Returns an iterator pointing to the first element that is greater than key.
   2) Returns an iterator pointing to the first element that compares greater to the
   value x. This overload only participates in overload resolution if the qualified-id
   Compare::is_transparent is valid and denotes a type. They allow calling this
   function without constructing an instance of Key.

.SH Parameters

   key - key value to compare the elements to
   x   - alternative value that can be compared to Key

.SH Return value

   Iterator pointing to the first element that is greater than key. If no such element
   is found, past-the-end (see end()) iterator is returned.

.SH Complexity

   Logarithmic in the size of the container.

.SH See also

   equal_range returns range of elements matching a specific key
               \fI(public member function)\fP 
   lower_bound returns an iterator to the first element not less than the given key
               \fI(public member function)\fP 
