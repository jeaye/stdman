.TH std::unordered_multimap::emplace_hint 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unordered_multimap::emplace_hint \- std::unordered_multimap::emplace_hint

.SH Synopsis
   template <class... Args>                                       \fI(since C++11)\fP
   iterator emplace_hint( const_iterator hint, Args&&... args );

   Inserts a new element to the container, using hint as a suggestion where the element
   should go. The element is constructed in-place, i.e. no copy or move operations are
   performed.

   The constructor of the element type (value_type, that is, std::pair<const Key, T>)
   is called with exactly the same arguments as supplied to the function, forwarded
   with std::forward<Args>(args)....

   If rehashing occurs due to the insertion, all iterators are invalidated. Otherwise
   iterators are not affected. References are not invalidated. Rehashing occurs only if
   the new number of elements is greater than max_load_factor()*bucket_count().

.SH Parameters

   hint - iterator, used as a suggestion as to where to insert the new element
   args - arguments to forward to the constructor of the element

.SH Return value

   Returns an iterator to the newly inserted element.

.SH Exceptions

   If an exception is thrown by any operation, this function has no effect (strong
   exception guarantee).

.SH Complexity

   Amortized constant on average, worst case linear in the size of the container.

.SH See also

   emplace constructs element in-place
           \fI(public member function)\fP 
           inserts elements
   insert  or nodes
           \fI(since C++17)\fP
           \fI(public member function)\fP 
