.TH std::filesystem::recursive_directory_iterator::pop 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::recursive_directory_iterator::pop \- std::filesystem::recursive_directory_iterator::pop

.SH Synopsis
   void pop();                    \fB(1)\fP \fI(since C++17)\fP
   void pop(std::error_code& ec); \fB(2)\fP \fI(since C++17)\fP

   Moves the iterator one level up in the directory hierarchy.

   If the parent directory is outside directory hierarchy that is iterated on (i.e.
   depth() == 0), sets *this to an end directory iterator.

.SH Parameters

   ec - error code to store the error status to

.SH Return value

   \fI(none)\fP

.SH Exceptions

   The overload that does not take a std::error_code& parameter throws filesystem_error
   on underlying OS API errors, constructed with the OS error code as the error code
   argument. The overload taking a std::error_code& parameter sets it to the OS API
   error code if an OS API call fails, and executes ec.clear() if no errors occur. Any
   overload not marked noexcept may throw std::bad_alloc if memory allocation fails.
