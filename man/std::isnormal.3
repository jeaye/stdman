.TH std::isnormal 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::isnormal \- std::isnormal

.SH Synopsis
   Defined in header <cmath>
   bool isnormal( float arg );       \fB(1)\fP \fI(since C++11)\fP
   bool isnormal( double arg );      \fB(2)\fP \fI(since C++11)\fP
   bool isnormal( long double arg ); \fB(3)\fP \fI(since C++11)\fP
   bool isnormal( Integral arg );    \fB(4)\fP \fI(since C++11)\fP

   1-3) Determines if the given floating point number arg is normal, i.e. is neither
   zero, subnormal, infinite, nor NaN.
   4) A set of overloads or a function template accepting the arg argument of any
   integral type. Equivalent to \fB(2)\fP (the argument is cast to double).

.SH Parameters

   arg - floating point value

.SH Return value

   true if arg is normal, false otherwise

.SH Example

   
// Run this code

 #include <iostream>
 #include <cmath>
 #include <cfloat>
  
 int main()
 {
     std::cout << std::boolalpha
               << "isnormal(NaN) = " << std::isnormal(NAN) << '\\n'
               << "isnormal(Inf) = " << std::isnormal(INFINITY) << '\\n'
               << "isnormal(0.0) = " << std::isnormal(0.0) << '\\n'
               << "isnormal(DBL_MIN/2.0) = " << std::isnormal(DBL_MIN/2.0) << '\\n'
               << "isnormal(1.0) = " << std::isnormal(1.0) << '\\n';
 }

.SH Output:

 isnormal(NaN) = false
 isnormal(Inf) = false
 isnormal(0.0) = false
 isnormal(DBL_MIN/2.0) = false
 isnormal(1.0) = true

.SH See also

   fpclassify categorizes the given floating point value
   \fI(C++11)\fP    \fI(function)\fP 
   isfinite   checks if the given number has finite value
   \fI(C++11)\fP    \fI(function)\fP 
   isinf      checks if the given number is infinite
   \fI(C++11)\fP    \fI(function)\fP 
   isnan      checks if the given number is NaN
   \fI(C++11)\fP    \fI(function)\fP 
   C documentation for
   isnormal
