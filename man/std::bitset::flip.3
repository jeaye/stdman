.TH std::bitset::flip 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::bitset::flip \- std::bitset::flip

.SH Synopsis
   bitset<N>& flip();             \fB(1)\fP
   bitset<N>& flip( size_t pos ); \fB(2)\fP

   Flips bits, i.e. changes true values to false and false values to true. Equivalent
   to a logical NOT operation on part or all of the bitset.

   1) Flips all bits (like operator~, but in-place)
   2) Flips the bit at the position pos.

.SH Parameters

   pos - the position of the bit to flip

.SH Return value

   *this

.SH Exceptions

   1)

   \fI(none)\fP                    \fI(until C++11)\fP
   noexcept specification:  
   noexcept                  \fI(since C++11)\fP
     

   2) throws std::out_of_range if pos does not correspond to a valid position within
   the bitset.

.SH Example

   
// Run this code

 #include <iostream>
 #include <bitset>
  
 int main()
 {
     std::bitset<4> b;
  
     std::cout << b << "\\n";
     std::cout << b.flip(0) << '\\n';
     std::cout << b.flip(2) << '\\n';
     std::cout << b.flip() << '\\n';
 }

.SH Output:

 0000
 0001
 0101
 1010

.SH See also

   set        sets bits to true or given value
              \fI(public member function)\fP 
   reset      sets bits to false
              \fI(public member function)\fP 
   operator&=
   operator|= performs binary AND, OR, XOR and NOT
   operator^= \fI(public member function)\fP 
   operator~

.SH Category:

     * unconditionally noexcept

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
