.TH std::forward_list::erase_after 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::forward_list::erase_after \- std::forward_list::erase_after

.SH Synopsis
   iterator erase_after( const_iterator pos );                        \fB(1)\fP \fI(since C++11)\fP
   iterator erase_after( const_iterator first, const_iterator last ); \fB(2)\fP \fI(since C++11)\fP

   Removes specified elements from the container.

   1) Removes the element following pos.
   2) Removes the elements in the range (first; last).

.SH Parameters

   pos         - iterator to the element preceding the element to remove
   first, last - range of elements to remove

.SH Return value

   1) Iterator to the element following the erased one, or end() if no such element
   exists.
   2) last

.SH Complexity

   1) Constant.
   2) Linear in distance between first and last.

.SH Example

   
// Run this code

 #include <forward_list>
 #include <iterator>
 #include <iostream>
 int main()
 {
     std::forward_list<int> l = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
  
     //    l.erase( l.begin() ); // ERROR: No function erase
  
     l.erase_after( l.before_begin() ); // Removes first element
  
     for( auto n : l ) std::cout << n << " ";
     std::cout << '\\n';
  
     auto fi= std::next( l.begin() );
     auto la= std::next( fi, 3 );
  
     l.erase_after( fi, la );
  
     for( auto n : l ) std::cout << n << " ";
     std::cout << '\\n';
 }

.SH Output:

 2 3 4 5 6 7 8 9
 2 3 6 7 8 9

.SH See also

   clear clears the contents
         \fI(public member function)\fP 
