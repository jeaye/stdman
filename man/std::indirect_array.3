.TH std::indirect_array 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::indirect_array \- std::indirect_array

.SH Synopsis
   Defined in header <valarray>
   template< class T > class indirect_array;

   std::gslice_array is a helper template used by std::indirect_array subscript
   operator. It has reference semantics to a subset of the array specified by an
   indirect array (std::valarray<std::size_t> object).

.SH Member types

   Type       Definition
   value_type T

.SH Member functions

   constructor   constructs a indirect_array
                 \fI(public member function)\fP 
   destructor    destroys a indirect_array
                 \fI(public member function)\fP 
   operator=     assigns contents
                 \fI(public member function)\fP 
   operator+=
   operator-=
   operator*=
   operator/=
   operator%=    performs arithmetic operation on the array referred by indirect array.
   operator&=    \fI(public member function)\fP 
   operator|=
   operator^=
   operator<<=
   operator>>=

.SH Example

   
// Run this code

 #include <iostream>
 #include <valarray>
  
 int main()
 {
     std::valarray<int> data = {0,1,2,3,4,5,6,7,8,9};
  
     std::valarray<std::size_t> idx = {0,2,4,6,8};
  
     std::cout << "Original valarray: ";
     for(int n: data) std::cout << n << ' ';
     std::cout << '\\n';
  
     data[idx] += data[idx]; // double the values at indexes 'idx'
  
     // the type of data[idx] is std::indirect_array<int>
  
     std::cout << "After indirect modification: ";
     for(int n: data) std::cout << n << ' ';
     std::cout << '\\n';
 }

.SH Output:

 Original valarray: 0 1 2 3 4 5 6 7 8 9
 After indirect modification: 0 1 4 3 8 5 12 7 16 9
