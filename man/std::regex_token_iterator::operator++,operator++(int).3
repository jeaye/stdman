.TH std::regex_token_iterator::operator++,operator++(int) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::regex_token_iterator::operator++,operator++(int) \- std::regex_token_iterator::operator++,operator++(int)

.SH Synopsis
   regex_token_iterator& operator++();    \fI(since C++11)\fP
   regex_token_iterator operator++(int);  \fI(since C++11)\fP

   Advances the iterator on the next sub match.

    This section is incomplete
    Reason: explain better

   If *this is a suffix iterator, sets *this to an end-of-sequence iterator.

   Otherwise, if N + 1 < subs.size(), increments N and sets result to the address of
   the current match.

   Otherwise, sets N to 0 and increments position. If position is not an
   end-of-sequence iterator the operator sets result to the address of the current
   match.

   Otherwise, if any of the values stored in subs is equal to -1 and
   prev->suffix().length() is not 0 the operator sets *this to a suffix iterator that
   points to the range [prev->suffix().first, prev->suffix().second).

   Otherwise, sets *this to an end-of-sequence iterator.

   The behavior is undefined if the iterator is end-of-sequence iterator.

.SH Parameters

   \fI(none)\fP

.SH Return value

   1) *this
   2) The previous value of the iterator.
.SH Category:

     * Todo with reason
