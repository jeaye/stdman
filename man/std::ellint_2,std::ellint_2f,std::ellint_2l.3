.TH std::ellint_2,std::ellint_2f,std::ellint_2l 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ellint_2,std::ellint_2f,std::ellint_2l \- std::ellint_2,std::ellint_2f,std::ellint_2l

.SH Synopsis
   double      ellint_2( double k, double φ );

   float       ellint_2f( float k, float φ  );            \fB(1)\fP \fI(since C++17)\fP

   long double ellint_2l( long double k, long double φ );
   Promoted    ellint_2( Arithmetic k, Arithmetic φ );    \fB(2)\fP \fI(since C++17)\fP

   1) Computes the incomplete elliptic integral of the second kind of k and φ.
   2) A set of overloads or a function template for all combinations of arguments of
   arithmetic type not covered by \fB(1)\fP. If any argument has integral type, it is cast to
   double. If any argument is long double, then the return type Promoted is also long
   double, otherwise the return type is always double.

.SH Parameters

   k - elliptic modulus or eccentricity (a value of a floating-point or integral type)
   φ - Jacobi amplitude (a value of floating-point or integral type, measured in
       radians)

.SH Return value

   If no errors occur, value of the incomplete elliptic integral of the second kind of
   k and φ, that is ∫φ
   0
   √
   1-k2
   sin2
   θdθ, is returned.

.SH Error handling

   Errors may be reported as specified in math_errhandling

     * If the argument is NaN, NaN is returned and domain error is not reported
     * If |k|>1, a domain error may occur

.SH Notes

   Implementations that do not support C++17, but support ISO 29124:2010, provide this
   function if __STDCPP_MATH_SPEC_FUNCS__ is defined by the implementation to a value
   at least 201003L and if the user defines __STDCPP_WANT_MATH_SPEC_FUNCS__ before
   including any standard library headers.

   Implementations that do not support ISO 29124:2010 but support TR 19768:2007 (TR1),
   provide this function in the header tr1/cmath and namespace std::tr1

   An implementation of this function is also available in boost.math

.SH Example

   
// Run this code

 #include <cmath>
 #include <iostream>
 int main()
 {
     double hpi = std::acos(-1)/2;
     std::cout << "E(0,π/2) = " << std::ellint_2(0, hpi) << '\\n'
               << "E(0,-π/2) = " << std::ellint_2(0, -hpi) << '\\n'
               << "π/2 = " << hpi << '\\n'
               << "E(0.7,0) = " << std::ellint_2(0.7, 0) << '\\n'
               << "E(1,π/2) = " << std::ellint_2(1, hpi) << '\\n';
 }

.SH Output:

 F(0,π/2) = 1.5708
 F(0,-π/2) = -1.5708
 π/2 = 1.5708
 F(0.7,0) = 0
 E(1,π/2) = 1

.SH External links

   Weisstein, Eric W. "Elliptic Integral of the Second Kind." From MathWorld--A Wolfram
   Web Resource.

.SH See also

   comp_ellint_2
   comp_ellint_2f
   comp_ellint_2l (complete) elliptic integral of the second kind
   \fI(C++17)\fP        \fI(function)\fP 
   \fI(C++17)\fP
   \fI(C++17)\fP
