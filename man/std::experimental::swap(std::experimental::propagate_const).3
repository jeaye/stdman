.TH std::experimental::swap(std::experimental::propagate_const) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::swap(std::experimental::propagate_const) \- std::experimental::swap(std::experimental::propagate_const)

.SH Synopsis
   template< class T >

   constexpr void swap( std::experimental::propagate_const<T>&    (library fundamentals
   lhs,                                                           TS v2)

                        std::experimental::propagate_const<T>&
   rhs ) noexcept(/* see below */);

   Specializes the swap algorithm for std::experimental::propagate_const. Swaps the
   pointers of lhs and rhs. Equivalent to lhs.swap(rhs).

.SH Parameters

   lhs, rhs - propagate_consts whose contents to swap

.SH Return value

   \fI(none)\fP

.SH Exceptions

   noexcept specification:  
   noexcept(noexcept(lhs.swap(rhs)))

.SH Complexity

   Constant

.SH See also

   swap swaps the values of two objects
        \fI(function template)\fP 
   swap swaps the wrapped pointer
        \fI(public member function)\fP 

.SH Category:

     * conditionally noexcept
