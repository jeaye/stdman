.TH std::experimental::shared_future 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::shared_future \- std::experimental::shared_future

.SH Synopsis
   Defined in header <experimental/shared_future>
   template< class T > class shared_future;       \fB(1)\fP (concurrency TS)
   template< class T > class shared_future<T&>;   \fB(2)\fP (concurrency TS)
   template<>          class shared_future<void>; \fB(3)\fP (concurrency TS)

   The class template std::experimental::shared_future extends std::shared_future with
   the following operations:

     * an unwrapping constructor from future<shared_future<T>>;
     * a member function is_ready to query whether the associated shared state is
       ready; and
     * a member function then to attach a continuation to the future.

   There is no interoperation between std::experimental::shared_future and
   std::shared_future.

.SH Member functions

   constructor   constructs a shared_future
                 \fI(public member function)\fP 
   is_ready      checks if the shared state is ready
                 \fI(public member function)\fP 
   then          attaches a continuation to a shared_future
                 \fI(public member function)\fP 
   operator=     assigns the contents
                 \fI(public member function)\fP

Members identical to std::shared_future

.SH Member functions

   destructor   destructs the future object
                \fI(public member function of std::shared_future)\fP
.SH Getting the result
   get          returns the result
                \fI(public member function of std::shared_future)\fP 
.SH State
   valid        checks if the future has a shared state
                \fI(public member function of std::shared_future)\fP 
   wait         waits for the result to become available
                \fI(public member function of std::shared_future)\fP 
                waits for the result, returns if it is not available for the specified
   wait_for     timeout duration
                \fI(public member function of std::shared_future)\fP 
                waits for the result, returns if it is not available until specified
   wait_until   time point has been reached
                \fI(public member function of std::shared_future)\fP 

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   future           A version of std::future enhanced with continuations and other
   (concurrency TS) features
                    \fI(class template)\fP 

.SH Category:

     * Todo no example
