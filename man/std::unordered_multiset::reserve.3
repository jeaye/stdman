.TH std::unordered_multiset::reserve 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unordered_multiset::reserve \- std::unordered_multiset::reserve

.SH Synopsis
   void reserve( size_type count );  \fI(since C++11)\fP

   Sets the number of buckets to the number needed to accomodate at least count
   elements without exceeding maximum load factor and rehashes the container, i.e. puts
   the elements into appropriate buckets considering that total number of buckets has
   changed. Effectively calls rehash(std::ceil(count / max_load_factor())).

.SH Parameters

   count - new capacity of the container

.SH Return value

   \fI(none)\fP

.SH Complexity

   Average case linear in the size of the container, worst case quadratic.

.SH See also

          reserves at least the specified number of buckets.
   rehash This regenerates the hash table.
          \fI(public member function)\fP 
