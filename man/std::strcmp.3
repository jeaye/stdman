.TH std::strcmp 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::strcmp \- std::strcmp

.SH Synopsis
   Defined in header <cstring>
   int strcmp( const char *lhs, const char *rhs );

   Compares two null-terminated byte strings lexicographically.

   The sign of the result is the sign of the difference between the values of the first
   pair of characters (both interpreted as unsigned char) that differ in the strings
   being compared.

   The behavior is undefined if lhs or rhs are not pointers to null-terminated strings.

.SH Parameters

   lhs, rhs - pointers to the null-terminated byte strings to compare

.SH Return value

   Negative value if lhs appears before rhs in lexicographical order.

   Zero if lhs and rhs compare equal.

   Positive value if lhs appears after rhs in lexicographical order.

.SH Example

   
// Run this code

 #include <vector>
 #include <cstring>
 #include <algorithm>
 #include <iostream>
  
 int main()
 {
     std::vector<const char*> cats {"Heathcliff", "Snagglepuss", "Hobbes", "Garfield"};
     std::sort(cats.begin(), cats.end(), [](const char *strA, const char *strB) {
         return std::strcmp(strA, strB) < 0;
     });
  
     for (const char *cat : cats) {
         std::cout << cat << '\\n';
     }
 }

.SH Output:

 Garfield
 Heathcliff
 Hobbes
 Snagglepuss

.SH See also

   strncmp compares a certain number of characters from two strings
           \fI(function)\fP 
   wcscmp  compares two wide strings
           \fI(function)\fP 
   memcmp  compares two buffers
           \fI(function)\fP 
   strcoll compares two strings in accordance to the current locale
           \fI(function)\fP 
   C documentation for
   strcmp
