.TH std::chrono::ceil(std::chrono::time_point) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::ceil(std::chrono::time_point) \- std::chrono::ceil(std::chrono::time_point)

.SH Synopsis
   Defined in header <chrono>
   template <class ToDuration, class Clock, class Duration>
   constexpr time_point<Clock, ToDuration> ceil(const time_point<Clock,   \fI(since C++17)\fP
   Duration>& tp);

   Returns the smallest time point t representable in ToDuration that is greater or
   equal to tp.

   The function does not participate in the overload resolution unless ToDuration is an
   instance of std::chrono::duration.

.SH Parameters

   tp - time point to convert

.SH Return value

   d rounded up to a the next time point using duration of type ToDuration.

.SH Possible implementation

   template <class T> struct is_duration : std::false_type {};
   template <class Rep, class Period> struct is_duration<
       std::chrono::duration<Rep, Period>> : std::true_type {};
    
   template <class To, class Clock, class FromDuration,
             class = std::enable_if_t<is_duration<To>{}>>
   constexpr std::chrono::time_point<Clock, To>
       ceil(const std::chrono::time_point<Clock, FromDuration>& tp)
   {
       return std::chrono::time_point<Clock, To>{
                  std::chrono::ceil<To>(tp.time_since_epoch())};
   }

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

                                  converts a time point to another time point on the
   time_point_cast                same clock, with a different duration
                                  \fI(function template)\fP 
   floor(std::chrono::time_point) converts a time_point to another, rounding down
   \fI(C++17)\fP                        \fI(function template)\fP 
   round(std::chrono::time_point) converts a time_point to another, rounding to
   \fI(C++17)\fP                        nearest, ties to even
                                  \fI(function template)\fP 
   ceil(std::chrono::duration)    converts a duration to another, rounding up
   \fI(C++17)\fP                        \fI(function template)\fP 
   ceil                           nearest integer not less than the given value
                                  \fI(function)\fP 

.SH Category:

     * Todo no example
