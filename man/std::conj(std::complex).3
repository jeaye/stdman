.TH std::conj(std::complex) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::conj(std::complex) \- std::conj(std::complex)

.SH Synopsis
   Defined in header <complex>
   template< class T >
   std::complex<T> conj( const std::complex<T>& z           (until C++20)
   );
   template< class T >
   constexpr std::complex<T> conj( const                    (since C++20)
   std::complex<T>& z );
   std::complex<float> conj( float z );

   template< class DoubleOrInteger >                                      \fI(since C++11)\fP
   std::complex<double> conj( DoubleOrInteger z );  \fB(1)\fP                   (until C++20)

   std::complex<long double> conj( long double z );
   constexpr std::complex<float> conj( float z );       \fB(2)\fP

   template< class DoubleOrInteger >
   constexpr std::complex<double> conj(                                   (since C++20)
   DoubleOrInteger z );

   constexpr std::complex<long double> conj( long
   double z );

   1) Computes the complex conjugate of z by reversing the sign of the imaginary part.

   2) Additional overloads are provided for float, double, long double,
   and all integer types, which are treated as complex numbers with zero  \fI(since C++11)\fP
   imaginary component.

.SH Parameters

   z - complex value

.SH Return value

   The complex conjugate of z

.SH Example

   
// Run this code

 #include <iostream>
 #include <complex>
  
 int main()
 {
     std::complex<double> z(1,2);
     std::cout << "The conjugate of " << z << " is " << std::conj(z) << '\\n'
               << "Their product is " << z*std::conj(z) << '\\n';
 }

.SH Output:

 The conjugate of (1,2) is (1,-2)
 Their product is (5,0)

.SH See also

   abs(std::complex) returns the magnitude of a complex number
                     \fI(function template)\fP 
   norm              returns the squared magnitude
                     \fI(function template)\fP 
   polar             constructs a complex number from magnitude and phase angle
                     \fI(function template)\fP 
   C documentation for
   conj
