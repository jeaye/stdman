.TH std::experimental::erase(std::list) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::erase(std::list) \- std::experimental::erase(std::list)

.SH Synopsis
   Defined in header <experimental/list>
   template <class T, class A, class U>             (library fundamentals TS v2)
   void erase(std::list<T, A>& c, const U& value);

   Erases all elements that compare equal to value from the container. Equivalent to
   c.remove_if([&](auto& elem) { return elem == value; });

.SH Parameters

   c     - container from which to erase
   value - value to be removed

.SH Complexity

   Linear.

.SH Example

    This section is incomplete
    Reason: no example

.SH Notes

   Unlike std::list::remove, this function template accepts heterogenous types and does
   not force a conversion to the container's value type before invoking the ==
   operator.

.SH See also

   remove                      removes elements satisfying specific criteria
   remove_if                   \fI(function template)\fP 
   remove                      removes elements satisfying specific criteria
   remove_if                   \fI(public member function of std::list)\fP 
   erase_if (std::list)        Erases all elements satisfying a predicate from a
   (library fundamentals 2 TS) std::list
                               \fI(function template)\fP 

.SH Category:

     * Todo no example
