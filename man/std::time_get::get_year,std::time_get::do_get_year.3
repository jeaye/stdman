.TH std::time_get::get_year,std::time_get::do_get_year 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::time_get::get_year,std::time_get::do_get_year \- std::time_get::get_year,std::time_get::do_get_year

.SH Synopsis
   Defined in header <locale>
   public:

   iter_type do_get_year( iter_type s, iter_type end, std::ios_base& str,         \fB(1)\fP

                          std::ios_base::iostate& err, std::tm* t) const;
   protected:

   virtual iter_type do_get_year( iter_type s, iter_type end, std::ios_base& str, \fB(2)\fP

                                  std::ios_base::iostate& err, std::tm* t) const;

   1) public member function, calls the protected virtual member function do_get_year
   of the most derived class.
   2) Reads successive characters from the sequence [beg, end) and parses out the year
   using some implementation-defined format. Depending on the locale, two-digit years
   may be accepted, and it is implementation-defined which century they belong to.

   The parsed year is stored in the std::tm structure field t->tm_year.

   If the end iterator is reached before a valid date is read, the function sets
   std::ios_base::eofbit in err. If a parsing error is encountered, the function sets
   std::ios_base::failbit in err.

.SH Parameters

   beg - iterator designating the start of the sequence to parse
   end - one past the end iterator for the sequence to parse
   str - a stream object that this function uses to obtain locale facets when needed,
         e.g. std::ctype to skip whitespace or std::collate to compare strings
   err - stream error flags object that is modified by this function to indicate errors
   t   - pointer to the std::tm object that will hold the result of this function call

.SH Return value

   Iterator pointing one past the last character in [beg, end) that was recognized as a
   part of a valid year.

.SH Notes

   For two-digit input values, many implementations use the same parsing rules as the
   conversion specifier '%y' as used by std::get_time, std::time_get::get(), and the
   POSIX function strptime(): two-digit integer is expected, the values in the range
   [69,99] results in values 1969 to 1999, range [00,68] results in 2000-2068.
   Four-digit inputs are typically accepted as-is.

   If a parsing error is encountered, most implementations of this function leave *t
   unmodified.

.SH Example

   
// Run this code

 #include <iostream>
 #include <locale>
 #include <sstream>
 #include <iterator>
  
 void try_get_year(const std::string& s)
 {
     std::cout << "Parsing the year out of '" << s <<
                  "' in the locale " << std::locale().name() << '\\n';
     std::istringstream str(s);
     std::ios_base::iostate err = std::ios_base::goodbit;
  
     std::tm t;
     std::istreambuf_iterator<char> ret =
         std::use_facet<std::time_get<char>>(str.getloc()).get_year(
             {str}, {}, str, err, &t
         );
     str.setstate(err);
     std::istreambuf_iterator<char> last{};
     if (str) {
         std::cout << "Successfully parsed, year is " << 1900 + t.tm_year;
         if (ret != last) {
             std::cout << " Remaining content: ";
             std::copy(ret, last, std::ostreambuf_iterator<char>(std::cout));
         } else {
             std::cout << " the input was fully consumed";
         }
     } else {
         std::cout << "Parse failed. Unparsed string: ";
         std::copy(ret, last, std::ostreambuf_iterator<char>(std::cout));
     }
     std::cout << '\\n';
 }
  
 int main()
 {
     std::locale::global(std::locale("en_US.utf8"));
     try_get_year("13");
     try_get_year("2013");
  
     std::locale::global(std::locale("ja_JP.utf8"));
     try_get_year("2013年");
 }

.SH Possible output:

 Parsing the year out of '13' in the locale en_US.utf8
 Successfully parsed, year is 2013 the input was fully consumed
 Parsing the year out of '2013' in the locale en_US.utf8
 Successfully parsed, year is 2013 the input was fully consumed
 Parsing the year out of '2013年' in the locale ja_JP.utf8
 Successfully parsed, year is 2013 Remaining content: 年

.SH See also

   get_time parses a date/time value of specified format
   \fI(C++11)\fP  \fI(function template)\fP 
