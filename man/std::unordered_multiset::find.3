.TH std::unordered_multiset::find 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unordered_multiset::find \- std::unordered_multiset::find

.SH Synopsis
   iterator find( const Key& key );             \fB(1)\fP
   const_iterator find( const Key& key ) const; \fB(2)\fP

   1,2) Finds an element with key equivalent to key.

.SH Parameters

   key - key value of the element to search for

.SH Return value

   Iterator to an element with key equivalent to key. If no such element is found,
   past-the-end (see end()) iterator is returned.

.SH Complexity

   Constant on average, worst case linear in the size of the container.

.SH Example

   
// Run this code

 #include <iostream>
 #include <unordered_set>
  
 int main()
 {
     std::unordered_multiset<int> example = {1, 2, 3, 4};
  
     auto search = example.find(2);
     if(search != example.end()) {
         std::cout << "Found " << (*search) << '\\n';
     }
     else {
         std::cout << "Not found\\n";
     }
 }

.SH Output:

 Found 2

.SH See also

   count       returns the number of elements matching specific key
               \fI(public member function)\fP 
   equal_range returns range of elements matching a specific key
               \fI(public member function)\fP 
