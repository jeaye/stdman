.TH std::filesystem::directory_entry::operator==,!=,<,<=,>,>= 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::directory_entry::operator==,!=,<,<=,>,>= \- std::filesystem::directory_entry::operator==,!=,<,<=,>,>=

.SH Synopsis
   bool operator==( const directory_entry& rhs ) const noexcept; \fB(1)\fP \fI(since C++17)\fP
   bool operator!=( const directory_entry& rhs ) const noexcept; \fB(2)\fP \fI(since C++17)\fP
   bool operator<( const directory_entry& rhs ) const noexcept;  \fB(3)\fP \fI(since C++17)\fP
   bool operator<=( const directory_entry& rhs ) const noexcept; \fB(4)\fP \fI(since C++17)\fP
   bool operator>( const directory_entry& rhs ) const noexcept;  \fB(5)\fP \fI(since C++17)\fP
   bool operator>=( const directory_entry& rhs ) const noexcept; \fB(6)\fP \fI(since C++17)\fP

   Compares the path with the directory entry rhs.

.SH Parameters

   rhs - directory_entry to compare

.SH Return value

   1) true if path() == rhs.path(), false otherwise.
   2) true if path() != rhs.path(), false otherwise.
   3) true if path() < rhs.path(), false otherwise.
   4) true if path() <= rhs.path(), false otherwise.
   5) true if path() > rhs.path(), false otherwise.
   6) true if path() >= rhs.path(), false otherwise.

.SH See also

   path                 returns the path the entry refers to
   operator const path& \fI(public member function)\fP 
