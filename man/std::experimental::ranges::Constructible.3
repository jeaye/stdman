.TH std::experimental::ranges::Constructible 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::ranges::Constructible \- std::experimental::ranges::Constructible

.SH Synopsis
   Defined in header <experimental/ranges/concepts>
   template < class T, class... Args >

   concept bool Constructible =                                            (ranges TS)

     ranges::Destructible<T> && std::is_constructible<T, Args...>::value;

   The Constructible concept specifies that a variable of type T can be initialized
   with the given set of argument types Args....

   There need not be any subsumption relationship between Constructible<T, Args...> and
   std::is_constructible<T, Args...>::value.

.SH See also

   is_constructible
   is_trivially_constructible
   is_nothrow_constructible   checks if a type has a constructor for specific arguments
   \fI(C++11)\fP                    \fI(class template)\fP 
   \fI(C++11)\fP
   \fI(C++11)\fP
