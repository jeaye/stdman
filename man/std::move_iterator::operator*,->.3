.TH std::move_iterator::operator*,-> 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::move_iterator::operator*,-> \- std::move_iterator::operator*,->

.SH Synopsis
   reference operator* () const;                   \fI(until C++17)\fP
   constexpr reference operator* () const; \fB(1)\fP     \fI(since C++17)\fP
   pointer operator->() const;                 \fB(2)\fP               \fI(until C++17)\fP
   constexpr pointer operator->() const;                         \fI(since C++17)\fP

   Returns a rvalue-reference or pointer to the current element.

   1) Equivalent to std::move(*current);              \fI(until C++17)\fP
   1) Equivalent to static_cast<reference>(*current); \fI(since C++17)\fP

   2) Equivalent to current.

.SH Parameters

   \fI(none)\fP

.SH Return value

   Rvalue-reference or pointer to the current element.

.SH Notes

   Note that \fB(2)\fP returns a pointer. When dereferencing a pointer the returned value is
   an lvalue. This may lead to unintended behavior.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   operator[] accesses an element by index
              \fI(public member function)\fP 

.SH Category:

     * Todo no example
