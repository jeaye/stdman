.TH std::swap(std::queue) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::swap(std::queue) \- std::swap(std::queue)

.SH Synopsis
   template< class T, class Container >

   void swap( queue<T,Container>& lhs,                              \fI(until C++17)\fP

              queue<T,Container>& rhs );
   template< class T, class Container >

   void swap( queue<T,Container>& lhs,                              \fI(since C++17)\fP

              queue<T,Container>& rhs ) noexcept(/* see below */);

   Specializes the std::swap algorithm for std::queue. Swaps the contents of lhs and
   rhs. Calls lhs.swap(rhs).

   This overload only participates in overload resolution if              \fI(since C++17)\fP
   std::is_swappable<Container>::value is true.

.SH Parameters

   lhs, rhs - containers whose contents to swap

.SH Return value

   \fI(none)\fP

.SH Complexity

   Same as swapping the underlying container.

.SH Exceptions

   noexcept specification:           \fI(since C++17)\fP
   noexcept(noexcept(lhs.swap(rhs)))

.SH See also

   swap swaps the contents
        \fI(public member function)\fP 

.SH Category:

     * conditionally noexcept
