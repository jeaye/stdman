.TH std::generic_category 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::generic_category \- std::generic_category

.SH Synopsis
   Defined in header <system_error>
   const std::error_category& generic_category() noexcept;  \fI(since C++11)\fP

   Obtains a reference to the static error category object for generic errors. The
   object is required to override the virtual function error_category::name() to return
   a pointer to the string "generic". It is used to identify error conditions that
   correspond to the POSIX errno codes.

.SH Parameters

   \fI(none)\fP

.SH Return value

   A reference to the static object of unspecified runtime type, derived from
   std::error_category.

.SH Example

   
// Run this code

 #include <iostream>
 #include <system_error>
 #include <cerrno>
 #include <string>
 int main()
 {
     std::error_condition econd = std::generic_category().default_error_condition(EDOM);
     std::cout << "Category: " << econd.category().name() << '\\n'
               << "Value: " << econd.value() << '\\n'
               << "Message: " << econd.message() << '\\n';
 }

.SH Output:

 Category: generic
 Value: 33
 Message: Numerical argument out of domain

.SH See also

   system_category identifies the operating system error category
   \fI(C++11)\fP         \fI(function)\fP 
   errc            the std::error_condition enumeration listing all standard <cerrno>
   \fI(C++11)\fP         macro constants
                   \fI(class)\fP 
