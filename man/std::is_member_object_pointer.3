.TH std::is_member_object_pointer 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::is_member_object_pointer \- std::is_member_object_pointer

.SH Synopsis
   Defined in header <type_traits>
   template< class T >               \fI(since C++11)\fP
   struct is_member_object_pointer;

   Checks whether T is a non-static member object. Provides the member constant value
   which is equal to true, if T is a non-static member object type. Otherwise, value is
   equal to false.

.SH Template parameters

   T - a type to check

   Helper variable template

   template< class T >
   inline constexpr bool is_member_object_pointer_v =                     \fI(since C++17)\fP
   is_member_object_pointer<T>::value;

   

Inherited from std::integral_constant

.SH Member constants

   value    true if T is a pointer to member object , false otherwise
   \fB[static]\fP \fI(public static member constant)\fP

.SH Member functions

   operator bool converts the object to bool, returns value
                 \fI(public member function)\fP
   operator()    returns value
   \fI(C++14)\fP       \fI(public member function)\fP

.SH Member types

   Type       Definition
   value_type bool
   type       std::integral_constant<bool, value>

.SH Possible implementation

   template<class T>
   struct is_member_object_pointer : std::integral_constant<
                                         bool,
                                         std::is_member_pointer<T>::value &&
                                         !std::is_member_function_pointer<T>::value
                                     > {};

.SH Example

    This section is incomplete
    Reason: simplify

   
// Run this code

 #include <iostream>
 #include <type_traits>
  
 int main() {
     class cls {};
     std::cout << (std::is_member_object_pointer<int(cls::*)>::value
                      ? "T is member object pointer"
                      : "T is not a member object pointer") << '\\n';
     std::cout << (std::is_member_object_pointer<int(cls::*)()>::value
                      ? "T is member object pointer"
                      : "T is not a member object pointer") << '\\n';
 }

.SH Output:

 T is member object pointer
 T is not a member object pointer

.SH See also

   is_pointer                 checks if a type is a pointer type
   \fI(C++11)\fP                    \fI(class template)\fP 
   is_member_pointer          checks if a type is a pointer to a non-static member
   \fI(C++11)\fP                    function or object
                              \fI(class template)\fP 
   is_member_function_pointer checks if a type is a pointer to a non-static member
   \fI(C++11)\fP                    function
                              \fI(class template)\fP 

.SH Category:

     * Todo with reason
