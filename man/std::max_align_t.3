.TH std::max_align_t 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::max_align_t \- std::max_align_t

.SH Synopsis
   Defined in header <cstddef>
   typedef /*implementation-defined*/ max_align_t;  \fI(since C++11)\fP

   std::max_align_t is a trivial type whose alignment requirement is at least as strict
   (as large) as that of every scalar type.

.SH Notes

   Pointers returned by allocation functions such as std::malloc are suitably aligned
   for any object, which means they are aligned at least as strict as std::max_align_t.

   std::max_align_t is usually synonymous with the largest scalar type, which is long
   double on most platforms, and its alignment requirement is either 8 or 16.

.SH Example

   
// Run this code

 #include <iostream>
 #include <cstddef>
 int main()
 {
     std::cout << alignof(std::max_align_t) << '\\n';
 }

.SH Possible output:

 16

.SH See also

   alignof operator queries alignment requirements of a type \fI(since C++11)\fP 
   alignment_of     obtains the type's alignment requirements
   \fI(C++11)\fP          \fI(class template)\fP 
   is_scalar        checks if a type is scalar type
   \fI(C++11)\fP          \fI(class template)\fP 
   C documentation for
   max_align_t
