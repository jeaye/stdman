.TH std::unordered_set::emplace 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unordered_set::emplace \- std::unordered_set::emplace

.SH Synopsis
   template< class... Args >                            \fI(since C++11)\fP
   std::pair<iterator,bool> emplace( Args&&... args );

   Inserts a new element into the container constructed in-place with the given args if
   there is no element with the key in the container.

   Careful use of emplace allows the new element to be constructed while avoiding
   unnecessary copy or move operations. The constructor of the new element is called
   with exactly the same arguments as supplied to emplace, forwarded via
   std::forward<Args>(args).... The element may be constructed even if there already is
   an element with the key in the container, in which case the newly constructed
   element will be destroyed immediately.

   If rehashing occurs due to the insertion, all iterators are invalidated. Otherwise
   iterators are not affected. References are not invalidated. Rehashing occurs only if
   the new number of elements is greater than max_load_factor()*bucket_count().

.SH Parameters

   args - arguments to forward to the constructor of the element

.SH Return value

   Returns a pair consisting of an iterator to the inserted element, or the
   already-existing element if no insertion happened, and a bool denoting whether the
   insertion took place. True for Insertion, False for No Insertion.

.SH Exceptions

   If an exception is thrown by any operation, this function has no effect.

.SH Complexity

   Amortized constant on average, worst case linear in the size of the container.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   emplace_hint constructs elements in-place using a hint
                \fI(public member function)\fP 
                inserts elements
   insert       or nodes
                \fI(since C++17)\fP
                \fI(public member function)\fP 

.SH Category:

     * Todo no example
