.TH std::allocator::allocate 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::allocator::allocate \- std::allocator::allocate

.SH Synopsis
   pointer allocate( size_type n,                             \fB(1)\fP \fI(until C++17)\fP
   std::allocator<void>::const_pointer hint = 0 );
   T* allocate( std::size_t n, const void * hint);            \fB(1)\fP \fI(since C++17)\fP
                                                                  \fB(deprecated)\fP
                                                                                (since
   T* allocate( std::size_t n );                                                C++17)
                                                              \fB(2)\fP               (until
                                                                                C++20)
   [[nodiscard]] T* allocate( std::size_t n );                                  (since
                                                                                C++20)

   Allocates n * sizeof(T) bytes of uninitialized storage by calling ::operator
   new(std::size_t)
   or ::operator new(std::size_t, std::align_val_t)
   \fI(since C++17)\fP, but it is unspecified when and how this function is called. The
   pointer hint may be used to provide locality of reference: the allocator, if
   supported by the implementation, will attempt to allocate the new memory block as
   close as possible to hint.

.SH Parameters

   n    - the number of objects to allocate storage for
   hint - pointer to a nearby memory location

.SH Return value

   Pointer to the first byte of a memory block suitably aligned and sufficient to hold
   an array of n objects of type T.

.SH Exceptions

   Throws std::bad_alloc if allocation fails.

.SH Notes

   The "unspecified when and how" wording makes it possible to combine or optimize away
   heap allocations made by the standard library containers, even though such
   optimizations are disallowed for direct calls to ::operator new. For example, this
   is implemented by libc++ ([1] and [2])

.SH See also

   allocate allocates uninitialized storage using the allocator
   \fB[static]\fP \fI(public static member function of std::allocator_traits)\fP 
