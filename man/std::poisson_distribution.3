.TH std::poisson_distribution 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::poisson_distribution \- std::poisson_distribution

.SH Synopsis
   Defined in header <random>
   template< class IntType = int >  \fI(since C++11)\fP
   class poisson_distribution;

   Produces random non-negative integer values i, distributed according to discrete
   probability function:

           P(i|μ) =

           e-μ
           ·μi
           i!

   The value obtained is the probability of exactly i occurrences of a random event if
   the expected, mean number of its occurrence under the same conditions (on the same
   time/space interval) is μ.

   std::poisson_distribution satisfies RandomNumberDistribution

.SH Template parameters

             The result type generated by the generator. The effect is undefined if
   IntType - this is not one of short, int, long, long long, unsigned short, unsigned
             int, unsigned long, or unsigned long long.

.SH Member types

   Member type Definition
   result_type IntType
   param_type  the type of the parameter set, see RandomNumberDistribution.

.SH Member functions

   constructor   constructs new distribution
                 \fI(public member function)\fP 
   reset         resets the internal state of the distribution
                 \fI(public member function)\fP 
.SH Generation
   operator()    generates the next random number in the distribution
                 \fI(public member function)\fP 
.SH Characteristics
                 returns the mean distribution parameter (mean number of occurrences of
   mean          the event)
                 \fI(public member function)\fP 
   param         gets or sets the distribution parameter object
                 \fI(public member function)\fP 
   min           returns the minimum potentially generated value
                 \fI(public member function)\fP 
   max           returns the maximum potentially generated value
                 \fI(public member function)\fP 

.SH Non-member functions

   operator== compares two distribution objects
   operator!= \fI(function)\fP 
   operator<< performs stream input and output on pseudo-random number distribution
   operator>> \fI(function template)\fP 

.SH Example

   
// Run this code

 #include <iostream>
 #include <iomanip>
 #include <string>
 #include <map>
 #include <random>
 int main()
 {
     std::random_device rd;
     std::mt19937 gen(rd());
  
     // if an event occurs 4 times a minute on average
     // how often is it that it occurs n times in one minute?
     std::poisson_distribution<> d(4);
  
     std::map<int, int> hist;
     for(int n=0; n<10000; ++n) {
         ++hist[d(gen)];
     }
     for(auto p : hist) {
         std::cout << p.first <<
                 ' ' << std::string(p.second/100, '*') << '\\n';
     }
 }

.SH Output:

 0 *
 1 *******
 2 **************
 3 *******************
 4 *******************
 5 ***************
 6 **********
 7 *****
 8 **
 9 *
 10
 11
 12
 13

.SH External links

   Weisstein, Eric W. "Poisson Distribution." From MathWorld--A Wolfram Web Resource.
