.TH std::owner_less 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::owner_less \- std::owner_less

.SH Synopsis
   Defined in header <memory>
   template<>                  \fI(since C++17)\fP
   struct owner_less<void>;

   std::owner_less<> is a specialization of std::owner_less with parameter types
   deduced.

.SH Member types

   Member type    Definition
   is_transparent /* unspecified */

.SH Notes

   The member type is_transparent indicates to the caller that this function object is
   a transparent function object: it accepts arguments of arbitrary types and uses
   perfect forwarding, which avoids unnecessary copying and conversion when the
   function object is used in heterogeneous context, or with rvalue arguments. In
   particular, template functions such as std::set::find and std::set::lower_bound make
   use of this member type on their Compare types.

.SH Member functions

   operator() compares its arguments using owner-based semantics
              \fI(function)\fP

std::owner_less<void>::operator()

   template<class T, class U>

   bool operator()( const std::shared_ptr<T>& lhs,                   \fI(since C++17)\fP

                    const std::shared_ptr<U>& rhs ) const noexcept;
   template<class T, class U>

   bool operator()( const std::shared_ptr<T>& lhs,                   \fI(since C++17)\fP

                    const std::weak_ptr<U>& rhs ) const noexcept;
   template<class T, class U>

   bool operator()( const std::weak_ptr<T>& lhs,                     \fI(since C++17)\fP

                    const std::shared_ptr<U>& rhs ) const noexcept;
   template<class T, class U>

   bool operator()( const std::weak_ptr<T>& lhs,                     \fI(since C++17)\fP

                    const std::weak_ptr<U>& rhs ) const noexcept;

   Compares lhs and rhs using owner-based semantics. Effectively calls
   lhs.owner_before(rhs).

   The ordering is strict weak ordering relation.

   lhs and rhs are equivalent only if they are both empty or share ownership.

.SH Parameters

   lhs, rhs - shared-ownership pointers to compare

.SH Return value

   true if lhs is less than rhs as determined by the owner-based ordering.

.SH See also

   owner_before provides owner-based ordering of shared pointers
                \fI(public member function of std::shared_ptr)\fP 
   owner_before provides owner-based ordering of weak pointers
                \fI(public member function of std::weak_ptr)\fP 
