.TH std::regex_iterator::regex_iterator 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::regex_iterator::regex_iterator \- std::regex_iterator::regex_iterator

.SH Synopsis
   regex_iterator();                                                 \fB(1)\fP \fI(since C++11)\fP
   regex_iterator(BidirIt a, BidirIt b,

                  const regex_type& re,                              \fB(2)\fP \fI(since C++11)\fP
                  std::regex_constants::match_flag_type m =

                      std::regex_constants::match_default);
   regex_iterator(const regex_iterator&);                            \fB(3)\fP \fI(since C++11)\fP
   regex_iterator(BidirIt, BidirIt,

                  const regex_type&&,                                \fB(4)\fP \fI(since C++14)\fP
                  std::regex_constants::match_flag_type =

                      std::regex_constants::match_default) = delete;

   Constructs a new regex_iterator:

   1) Default constructor. Constructs an end-of-sequence iterator.
   2) Constructs a regex_iterator from the sequence of characters [a, b), the regular
   expression re, and a flag m that governs matching behavior. This constructor
   performs an initial call to std::regex_search with this data. If the result of this
   initial call is false, *this is set to an end-of-sequence iterator.
   3) Copies a regex_iterator.
   4) The overload 2 is not allowed to be called with a temporary regex, since the
   returned iterator would be immediately invalidated.

.SH Parameters

   a  - BidirIt to the beginning of the target character sequence
   b  - BidirIt to the end of the targe character sequence
   re - regular expression used to search the target character sequence
   m  - flags that govern the behavior of re

.SH Example

    This section is incomplete
    Reason: no example

.SH Category:

     * Todo no example
