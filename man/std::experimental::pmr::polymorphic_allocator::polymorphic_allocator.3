.TH std::experimental::pmr::polymorphic_allocator::polymorphic_allocator 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::pmr::polymorphic_allocator::polymorphic_allocator \- std::experimental::pmr::polymorphic_allocator::polymorphic_allocator

.SH Synopsis
   polymorphic_allocator() noexcept;                                               \fB(1)\fP
   polymorphic_allocator( const polymorphic_allocator& other ) noexcept = default; \fB(2)\fP
   template< class U >                                                             \fB(3)\fP
   polymorphic_allocator( const polymorphic_allocator<U>& other ) noexcept;
   polymorphic_allocator( memory_resource* r);                                     \fB(4)\fP

   Constructs a new polymorphic_allocator.

   1) Constructs a polymorphic_allocator using the return value of
   std::experimental::pmr::get_default_resource() as the underlying memory resource.
   2-3) Constructs a polymorphic_allocator using other.resource() as the underlying
   memory resource.
   4) Constructs a polymorphic_allocator using r as the underlying memory resource.
   This constructor provides an implicit conversion from memory_resource*.

.SH Parameters

   other - another polymorphic_allocator to copy from
   r     - pointer to the memory resource to use. May not be null.

.SH Exceptions

   4) Throws nothing.
