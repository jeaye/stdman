.TH std::atan2(std::valarray) 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::atan2(std::valarray) \- std::atan2(std::valarray)

.SH Synopsis
   Defined in header <valarray>
   template< class T >                                              \fB(1)\fP
   valarray<T> atan2( const valarray<T>& y, const valarray<T>& x );
   template< class T >                                              \fB(2)\fP
   valarray<T> atan2( const valarray<T>& y, const T& vx );
   template< class T >                                              \fB(3)\fP
   valarray<T> atan2( const T& vy, const valarray<T>& x );

   Computes the inverse tangent of y/x using the signs of arguments to correctly
   determine quadrant.

   1) Computes the inverse tangent of each pair of corresponding values from y and x.

   The behavior is undefined if x.size() != y.size().

   2) Computes the inverse tangent of vx and each value in the numeric array y.
   3) Computes the inverse tangent of vy and each value in the numeric array x.

.SH Parameters

   x, y   - numeric arrays to compute inverse tangent of
   vy, vx - values to compute inverse tangent of

.SH Return value

   A numeric array containing the results of computation of inverse tangent.

.SH Notes

   Unqualified function (atan2) is used to perform the computation. If such function is
   not available, std::atan2 is used due to argument dependent lookup.

   The function can be implemented with the return type different from std::valarray.
   In this case, the replacement type has the following properties:

              * All const member functions of std::valarray are provided.
              * std::valarray, std::slice_array, std::gslice_array, std::mask_array and
                std::indirect_array can be constructed from the replacement type.
              * All functions accepting an argument of type const std::valarray&
                except begin() and end()
                \fI(since C++11)\fP should also accept the replacement type.
              * All functions accepting two arguments of type const std::valarray&
                should accept every combination of const std::valarray& and the
                replacement type.
              * The return type does not add more than two levels of template nesting
                over the most deeply-nested argument type.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   asin(std::valarray) applies the function std::asin to each element of valarray
                       \fI(function template)\fP 
   acos(std::valarray) applies the function std::acos to each element of valarray
                       \fI(function template)\fP 
   atan(std::valarray) applies the function std::atan to each element of valarray
                       \fI(function template)\fP 
   atan2               arc tangent, using signs to determine quadrants
                       \fI(function)\fP 
   arg                 returns the phase angle
                       \fI(function template)\fP 

.SH Category:

     * Todo no example

   Hidden category:

     * Pages with unreviewed LWG DR marker
